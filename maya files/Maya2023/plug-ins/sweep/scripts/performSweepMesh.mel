//
//  Creation Date:  22 Jan 2021
//
//  Description:
//  This script defines the option box for the Create Sweep menu item.
//

//
//  Procedure Name:
//      setOptionVars
//
//  Description:
//      Initialize the option values.
//
//  Input Arguments:
//      forceFactorySettings     Whether to set the options to default values
//
//  Return Value:
//      None.
//
proc setOptionVars(int $forceFactorySettings)
{
    optionVar -init $forceFactorySettings -category "Create.Sweep Mesh"
        -iv sweepMeshOneNodePerCurve false
        ;
}

//
//  Procedure Name:
//      sweepMeshSetup
//
//  Description:
//      Update the state of the option box UI to reflect the option values.
//
//  Input Arguments:
//      parent               - Top level parent layout of the option box UI.
//                             Required so that UI object names can be
//                             successfully resolved.
//
//  forceFactorySettings - Whether the option values should be set to
//                             default values.
//
//  Return Value:
//      None.
//
global proc sweepMeshSetup(string $parent, int $forceFactorySettings)
{
    //  Retrieve the option settings
    //
    setOptionVars($forceFactorySettings);

    setParent $parent;

    //  Query the optionVar's and set the values into the controls.

    radioButtonGrp 
        -edit 
        -select (`optionVar -q sweepMeshOneNodePerCurve` + 1)
        sweepMeshFromCurve;
}

//
//  Procedure Name:
//      sweepMeshCallback
//
//  Description:
//      Update the option values with the current state of the option box UI.
//
//  Input Arguments:
//      parent - Top level parent layout of the option box UI.  Required so
//               that UI object names can be successfully resolved.
//
//      sdoIt   - Whether the command should execute.
//
//  Return Value:
//      None.
//
global proc sweepMeshCallback(string $parent, int $doIt)
{
    setParent $parent;

    //  Set the optionVar's from the control values, and then
    //  perform the command.

    optionVar -intValue sweepMeshOneNodePerCurve (`radioButtonGrp -q -select sweepMeshFromCurve` - 1);

    if ($doIt) {
        performSweepMesh 0;
        addToRecentCommandQueue "performSweepMesh 0" "Sweep Mesh";
    }
}

//
//  Procedure Name:
//      sweepMeshOptions
//
//  Description:
//      Construct the option box UI.  Involves accessing the standard option
//      box and customizing the UI accordingly.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//
proc sweepMeshOptions()
{

    //  Name of the command for this option box.
    //
    string $commandName = "sweepMeshFromCurve";

    //  Build the option box actions.
    //
    string $callback = "sweepMeshCallback";
    string $setup = "sweepMeshSetup";

    //  STEP 1:  Get the option box.
    //  ============================
    //
    //  The value returned is the name of the layout to be used as
    //  the parent for the option box UI.
    //
    string $layout = getOptionBox();
    setParent $layout;

    //  STEP 2:  Pass the command name to the option box.
    //  =================================================
    //
    //  Any default option box behaviour based on the command name is set
    //  up with this call.  For example, updating the 'Help' menu item with
    //  the name of the command.
    //
    setOptionBoxCommandName($commandName);

    //  STEP 3:  Activate the default UI template.
    //  ==========================================
    //
    //  Activate the default UI template so that the layout of this
    //  option box is consistent with the layout of the rest of the
    //  application.
    //
    setUITemplate -pushTemplate DefaultTemplate;

    //  Turn on the wait cursor.
    //
    waitCursor -state 1;

    //  STEP 4: Create option box contents.
    //  ===================================
    //
    string $parent = `columnLayout -adjustableColumn 1`;

    columnLayout;
    radioButtonGrp -numberOfRadioButtons 2
        -label  (getPluginResource("sweep", "kFirstSelection"))
        -labelArray2 (getPluginResource("sweep", "kDependent")) (getPluginResource("sweep", "kIndependent"))
        -vertical
        sweepMeshFromCurve;

    setParent -menu ..;
    radioButtonGrp -edit -select 1 sweepMeshFromCurve;

    //  Turn off the wait cursor.
    //
    waitCursor -state 0;

    //  Step 5: Deactivate the default UI template.
    //      ===========================================
    //
    setUITemplate -popTemplate;

    //  Step 6: Customize the buttons.
    //  ==============================
    //
    //  Provide more descriptive labels for the buttons.
    //  Disable those buttons that are not applicable to the option box.
    //  Attach actions to those buttons that are applicable to the option box.

    //  'Apply' button.
    //
    string $applyBtn = getOptionBoxApplyBtn();
    button -edit
        -command ($callback + " " + $parent + " " + 1)
        $applyBtn;
        //-label (getPluginResource("modelingToolkit", "kCreateButton"))

    //  'Save' button.
    //
    string $saveBtn = getOptionBoxSaveBtn();
    button -edit
        -command ($callback + " " + $parent + " " + 0 + "; hideOptionBox")
        $saveBtn;

    //  'Reset' button.
    //
    string $resetBtn = getOptionBoxResetBtn();
    button -edit
        -command ($setup + " " + $parent + " " + 1)
        $resetBtn;

    //  Step 7: Set the option box title.
    //  =================================
    //
    setOptionBoxTitle (getPluginResource("sweep", "kSweepMeshFromCurveOptions"));

    //  Step 8: Customize the 'Help' menu item text.
    //  ============================================
    //
    setOptionBoxHelpTag("SweepMesh");

    //  Set the current values of the option box.
    //  =========================================
    //
    eval (($setup + " " + $parent + " " + 0));	

    //  Show the option box.
    //  ====================
    //
    showOptionBox();
}

//
//  Procedure Name:
//      assembleCmd
//
//  Description:
//      Construct the command that will apply the option box values.
//
//  Input Arguments:
//      None.
//
proc string assembleCmd()
{
    setOptionVars(false);

    if (!size(`filterExpand -ex 1 -sm 9`)) {
        curve -d 3
            -p -5 0 0 -p -1.5 0 0 -p 1.5 0 0 -p 5 0 0 
            -k 0 -k 0 -k 0 
            -k 1 -k 1 -k 1;
    }

    string $cmd;
    $cmd = "sweepMeshFromCurve"
        + " -oneNodePerCurve " + string(`optionVar -q sweepMeshOneNodePerCurve`)
        + ";";

    return $cmd;
}

//
//  Procedure Name:
//      performSweepMesh
//
//  Description:
//      Perform the polyPlatonic command using the corresponding
//      option values.  This procedure will also show the option box
//      window if necessary as well as construct the command string
//      that will invoke the sphere command with the current
//      option box values.
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
//  Return Value:
//      None.
//
global proc string performSweepMesh(int $action)
{
    string $cmd;

    switch ($action) {

    //  Execute the command.
    //
    case 0:
        //  Get the command.
        //
        $cmd = assembleCmd();

        //  Execute the command with the option settings.
        //
        evalEcho($cmd);

        break;

    //  Show the option box.
    //
    case 1:
        sweepMeshOptions();
        break;

    //  Return the command string.
    //
    case 2:
        //  Get the command.
        //
        $cmd = assembleCmd();
        break;
    }

    return $cmd;
}
