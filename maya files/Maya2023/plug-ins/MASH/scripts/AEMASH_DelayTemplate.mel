// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc AEMASH_DelayTemplate( string $nodeName )
{

    editorTemplate -beginScrollLayout;
    python("import MASH.nodeHeaders; MASH.nodeHeaders.addHeader('" + $nodeName + "', 'Delay')")
    editorTemplate -endLayout;

    editorTemplate  -label (getPluginResource("MASH", "kDelayMode")) -addControl "delayMode";
    editorTemplate -addSeparator;
    editorTemplate  -label (getPluginResource("MASH", "kTimeStep")) -addControl "timeStep";
    editorTemplate  -label (getPluginResource("MASH", "kTimeVar")) -addControl "timeVariance";
    editorTemplate  -label (getPluginResource("MASH", "kTimeOffset")) -addControl "offset";
    editorTemplate -bn;
    editorTemplate  -label (getPluginResource("MASH", "kDelayPos")) -addControl "enablePosition";
    editorTemplate  -label (getPluginResource("MASH", "kDelayRot")) -addControl "enableRotation";
    editorTemplate  -label (getPluginResource("MASH", "kDelayScale")) -addControl "enableScale";
    editorTemplate -en;
    editorTemplate  -suppress -addControl "targetMode" ;
    editorTemplate -beginLayout (getPluginResource("MASH", "kLeader")) -collapse 0;
    editorTemplate -callCustom "MASHdelaySingleInputBuildQt" "MASHdelaySingleInputUpdateQt" "";
    editorTemplate -endLayout;

    editorTemplate -beginLayout (getPluginResource("MASH", "kStrength")) -collapse 0;
    editorTemplate  -label (getPluginResource("MASH", "kStrength")) -addControl "Envelope";
    editorTemplate  -label (getPluginResource("MASH", "kRandStrength")) -addControl "randEnvelope";
    editorTemplate  -label (getPluginResource("MASH", "kStepStrength")) -addControl "StepEnvelope";
    editorTemplate -addSeparator;
    editorTemplate  -label (getPluginResource("MASH", "kStrengthMap")) -addControl "mColour";
    editorTemplate  -label (getPluginResource("MASH", "kMapProjAxis")) -addControl "mapDirection";
    editorTemplate -callCustom "MASHmapHelperButton" "MASHmapHelperButtonEdit" "";
    editorTemplate -endLayout;

    editorTemplate -beginLayout (getPluginResource("MASH", "kFalloffObject")) -collapse 1;
    editorTemplate -callCustom "MASHfalloffButtons" "MASHfalloffButtonsEdit" "";
    editorTemplate -endLayout;

    editorTemplate -suppress "inIterations";
    editorTemplate -suppress "time";
    AEdependNodeTemplate $nodeName;
    editorTemplate -addExtraControls;
    editorTemplate -endScrollLayout;
}

global proc AEaddLeaderButtons ( string $attr )
{
    string $nodeName[];
    tokenize($attr, ".", $nodeName);

    button -bgc (181.0/255.0) (157.0/255.0) (136.0/255.0) -label (getPluginResource("MASH", "kConnectLead"))  -c ("delayButtonCMDS " + $nodeName[0] + " 1")
    connLeadMASHButton;
    button -bgc (140.0/255.0) (167.0/255.0) (173.0/255.0) -label (getPluginResource("MASH", "kCreateLead"))  -c ("delayButtonCMDS " + $nodeName[0] + " 2")
    createLeadMASHButton;

    separator -w 100 -h 5 -hr 1 -st "none";
}


global proc AEaddLeaderButtonsEdit ( string $attr )
{
    string $nodeName[];
    tokenize($attr, ".", $nodeName);

    button -e -c ("delayButtonCMDS " + $nodeName[0] + " 1")
    connLeadMASHButton;
    button -e -c ("delayButtonCMDS " + $nodeName[0] + " 2")
    createLeadMASHButton;

}

global proc delayButtonCMDS (string $nodeName, int $whichCMD)
{
    if ($whichCMD == 1)
    {
        string $obj[] = `ls -sl -tr`;
        if (size($obj) > 0) {
            connectAttr -force ($obj[0]+".worldMatrix[0]") ($nodeName+".inTargetMatrix");
        }
        else {
            MASHinViewMessage("Please select a translate.", "Warning");
        }
    }
    if ($whichCMD == 2)
    {
        string $obj[] = `spaceLocator`;
        setAttr ($obj[0]+".overrideColor") 9;
        setAttr ($obj[0]+".overrideEnabled") 1;
        connectAttr -force ($obj[0]+".worldMatrix[0]") ($nodeName+".inTargetMatrix");
        MASHinViewMessage("Translate connected.", "Info");

    }
    evalDeferred("updateAE " + $nodeName);
}


global proc MASHdelaySingleInputBuildQt(string $nodeName)
{
    string $buffer[];
    tokenize($nodeName, ".", $buffer);
    $nodeName = $buffer[0];

    python("import MASHsingleInputQtWidget");
    rowLayout -numberOfColumns 2 -columnWidth2 139 250 delayTarget;
    text -w 105 -h 20 -vis 1
    -label (getPluginResource("MASH", "kTarget"))
    -align "right" -font "plainLabelFont" ;
    //get python to create the widget, include the desired nodeType as an arguement
    python("MASHsingleInputQtWidget.build_qt_widget('delayTarget', '" + $nodeName + "', 'transform', 'inTargetMatrix', 'worldMatrix', 'DelaySwitchToFTLMode')");
    setParent..;

}

global proc MASHdelaySingleInputUpdateQt(string $nodeName )
{
    string $buffer[];
    tokenize($nodeName, ".", $buffer);
    $nodeName = $buffer[0];
    python("import MASHsingleInputQtWidget");
    python("MASHsingleInputQtWidget.update_qt_widget('delayTarget', '" + $nodeName + "', 'transform', 'inTargetMatrix', 'worldMatrix', 'DelaySwitchToFTLMode')");
}
