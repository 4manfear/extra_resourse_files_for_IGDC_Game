// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  17 June 1997
//
//
//  Description:
//      This implements the Selection Polygon Marking Menu.
//



global proc doSelectMaskMMenu() 
{

	menuItem -rp "N" -label (localizedHotboxMenuItem("NURBS Mask")) -ecr false 
		-c "setSelectMode nurbsModeling NURBS";
	menuItem -rp "NE" -label (localizedHotboxMenuItem("Hierarchy")) -ecr false 
		-c "setSelectMode hierarchy Hierarchy";
	menuItem -rp "E" -label (localizedHotboxMenuItem("Animation Mask")) -ecr false 
		-c "setSelectMode animation Animation";
	menuItem -rp "SE" -label (localizedHotboxMenuItem("Deformations Mask")) -ecr false 
		-c "setSelectMode deformations Deformations";
	menuItem -rp "S" -label (localizedHotboxMenuItem("Dynamics Mask")) -ecr false 
		-c "setSelectMode dynamics Dynamics";
	menuItem -rp "SW" -label (localizedHotboxMenuItem("Polygons Mask")) -ecr false 
		-c "setSelectMode polyModeling Polygons";
	menuItem -rp "W" -label (localizedHotboxMenuItem("Rendering Mask")) -ecr false 
		-c "setSelectMode rendering Rendering";

	// If in component mode then switch to Object, any
	// other mode (object, hierarchy, preset) go to 
	// component.
	menuItem -rp "NW" -label (localizedHotboxMenuItem("Object/Components")) -ecr false 
		-c "if ( `selectMode -q -component` ) { setSelectMode objects Objects; } \
			 else { setSelectMode components Components; }";

    setParent -m ..;
}


global proc buildSelectMaskMM()
//
// Creates a marking menu that allows the user
// to select Selection Maks. It reuses
// the name tempMM for the name of the menu, to
// ensure that there's only one of these at
// any one time.
{
    if( `popupMenu -exists tempMM` )
    {
        deleteUI tempMM;
    }

	global string $gSelect;
	setToolTo $gSelect;

    popupMenu -mm 1 -b 1 -aob 1 -p `findPanelPopupParent` -pmc "doSelectMaskMMenu" tempMM;

}





