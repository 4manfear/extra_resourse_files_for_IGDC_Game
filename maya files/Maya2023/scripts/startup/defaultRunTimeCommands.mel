// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc int checkAndLoadPlugin(string $pluginName){
    if(!`pluginInfo -loaded -q $pluginName`){
        if( catchQuiet( `loadPlugin -quiet $pluginName ` ) ) {
            print ((uiRes("m_defaultRunTimeCommands.kCouldNotLoadPlugin")) + $pluginName + "\n");
        }
    }else{
        return 1;
    }
    return `pluginInfo -loaded -q $pluginName`;
}

proc runEnvRunTimeCommandFiles(){
	string $rtc = `getenv MAYA_RUNTIME_COMMANDS`;
	string $files[];
	tokenize $rtc ":" $files;
	for($i = 0; $i < size($files); $i++){
	    string $file = $files[$i];
	    if(size($file) > 0){
	    	catch( eval ("source \"" + $file + "\"") );
	    }
	}
}

global proc string getRunTimeCommandAnnotation(string $runTimeCommand)
//
//	Description:
//		A handy proc that will simply return the annotation for the specified
//		run time command.
//
//	Arguments:
//		A runTimeCommand.
//
//	Returns:
//		The annotation string. May be empty string.
//
{
	string $annotation = "";

	if (`runTimeCommand -exists $runTimeCommand`) {
		$annotation = `runTimeCommand -query -annotation $runTimeCommand`;
	}

	return $annotation;
}

global proc rtcCatName(string $runTimeCategory, string $localizedStr)
//
//	Description:
//		Registers runTimeCommand category information with TTF
//
//	Arguments:
//		category [string], localizedCategoryLabel [string]
//      Example: rtcCatName "myCategory" "My Category";
//		
{
    python("import maya.app.TTF.api; maya.app.TTF.api.addCategory(u'" + $runTimeCategory + "', u'" + $localizedStr + "')");
}

global proc rtcCatIcon(string $runTimeCategory, string $iconName)
//
//	Description:
//		Registers runTimeCommand category information with TTF
//
//	Arguments:
//		category [string], icon name [string]
//		Example: rtcCatIcon "myCategory" "myCategory.png";
//		
{
    python("import maya.app.TTF.api; maya.app.TTF.api.addCategory(u'img:" + $runTimeCategory + "', u'" + $iconName + "')");
}

proc string extRes(string $tag){
	return uiRes($tag);
}

proc menuCategories() {
	// Naming
	rtcCatName "Menu items.Common.File" 			(extRes("m_FileMenu.kFile"));
	rtcCatName "Menu items.Common.Edit" 			(extRes("m_EditMenu.kEdit"));
	rtcCatName "Menu items.Common.Create" 			(extRes("m_initMainMenuBar.kCreate"));
	rtcCatName "Menu items.Common.Select" 			(extRes("m_initMainMenuBar.kSelect"));
	rtcCatName "Menu items.Common.Modify" 			(extRes("m_initMainMenuBar.kModify"));
	rtcCatName "Menu items.Common.Display" 			(extRes("m_DisplayMenu.kDisplay"));
	rtcCatName "Menu items.Common.Windows" 			(extRes("m_ViewMenu.kWindows"));
	//rtcCatName "Menu items.Common.Bifrost" 			(extRes(""));
	rtcCatName "Menu items.Common.Cache" 			(extRes("m_initMainMenuBar.kMainCache"));
	rtcCatName "Menu items.Common.Help" 			(extRes("m_doHelpMenu.kHelpMenu"));

	rtcCatName "Menu items.Modeling.Mesh" 			(extRes("m_initMainMenuBar.kModelingMesh"));
	rtcCatName "Menu items.Modeling.Edit Mesh" 		(extRes("m_initMainMenuBar.kModelingEditMesh"));
	rtcCatName "Menu items.Modeling.Mesh Tools" 	(extRes("m_initMainMenuBar.kModelingMeshTools"));
	rtcCatName "Menu items.Modeling.Mesh Display"	(extRes("m_initMainMenuBar.kModelingMeshDisplay"));
	rtcCatName "Menu items.Modeling.Curves"			(extRes("m_initMainMenuBar.kModelingCurves"));
	rtcCatName "Menu items.Modeling.Surfaces" 		(extRes("m_initMainMenuBar.kModelingSurfaces"));
	rtcCatName "Menu items.Modeling.Deform" 		(extRes("m_initMainMenuBar.kModelingDeform"));
	rtcCatName "Menu items.Modeling.UV" 			(extRes("m_initMainMenuBar.kModelingUV"));
	rtcCatName "Menu items.Modeling.Generate" 		(extRes("m_initMainMenuBar.kModelingGenerate"));

	rtcCatName "Menu items.Rigging.Skeleton" 		(extRes("m_initMainMenuBar.kRigSkeleton"));
	rtcCatName "Menu items.Rigging.Skin" 			(extRes("m_initMainMenuBar.kRigSkin"));
	rtcCatName "Menu items.Rigging.Constraint" 		(extRes("m_initMainMenuBar.kRigConstrain"));
	rtcCatName "Menu items.Rigging.Control" 		(extRes("m_initMainMenuBar.kControl"));

	rtcCatName "Menu items.Animation.Key"	 		(extRes("m_initMainMenuBar.kKey"));
	rtcCatName "Menu items.Animation.Playback"		(extRes("m_initMainMenuBar.kPlayback"));
	rtcCatName "Menu items.Animation.Visualize"	 	(extRes("m_initMainMenuBar.kVisualize"));
	//rtcCatName "Menu items.Animation.MASH"	 		(extRes(""));

	rtcCatName "Menu items.Dynamics.nParticles"	 	(extRes("m_initMainMenuBar.kParticles"));
	rtcCatName "Menu items.Dynamics.nFluids"	 	(extRes("m_initMainMenuBar.kFluid"));
	rtcCatName "Menu items.Dynamics.nCloth"	 		(extRes("m_initMainMenuBar.kCloth"));
	rtcCatName "Menu items.Dynamics.nHair"	 		(extRes("m_initMainMenuBar.kNhair"));
	rtcCatName "Menu items.Dynamics.nConstraint"	(extRes("m_initMainMenuBar.kNConstraint"));
	rtcCatName "Menu items.Dynamics.nCache"	 		(extRes("m_initMainMenuBar.kNCache"));
	rtcCatName "Menu items.Dynamics.Fields/Solvers"	(extRes("m_initMainMenuBar.kFieldsSolver"));
	rtcCatName "Menu items.Dynamics.Effects"		(extRes("m_initMainMenuBar.kEffects"));
	//rtcCatName "Menu items.Dynamics.Bifrost Fluids"	(extRes(""));
	//rtcCatName "Menu items.Dynamics.Boss"			(extRes(""));

	rtcCatName "Menu items.Rendering.Lighting/Shading"	(extRes("m_initMainMenuBar.kLightingShading"));
	rtcCatName "Menu items.Rendering.Texturing"			(extRes("m_initMainMenuBar.kTexturing"));
	rtcCatName "Menu items.Rendering.Render"			(extRes("m_initMainMenuBar.kRender"));
	rtcCatName "Menu items.Rendering.Toon"				(extRes("m_initMainMenuBar.kToon"));
	rtcCatName "Menu items.Rendering.Stereo"			(extRes("m_initMainMenuBar.kStereo"));

	// Images
	rtcCatIcon "Menu items.Common.File" 			"menuIconFile.png";
	rtcCatIcon "Menu items.Common.Edit" 			"menuIconEdit.png";
	rtcCatIcon "Menu items.Common.Create" 			"menuIconEdit.png";
	rtcCatIcon "Menu items.Common.Select" 			"menuIconSelect.png";
	rtcCatIcon "Menu items.Common.Modify" 			"menuIconModify.png";
	rtcCatIcon "Menu items.Common.Display" 			"menuIconDisplay.png";
	rtcCatIcon "Menu items.Common.Windows" 			"menuIconWindow.png";
	//rtcCatIcon "Menu items.Common.Bifrost" 			"menuIcon.png";
	//rtcCatIcon "Menu items.Common.Cache" 			"menuIcon.png";
	rtcCatIcon "Menu items.Common.Help" 			"menuIconHelp.png";

	rtcCatIcon "Menu items.Modeling.Mesh" 			"menuIconPolygons.png";
	rtcCatIcon "Menu items.Modeling.Edit Mesh" 		"menuIconPolygons.png";
	rtcCatIcon "Menu items.Modeling.Mesh Tools" 	"menuIconPolygons.png";
	rtcCatIcon "Menu items.Modeling.Mesh Display"	"menuIconPolygons.png";
	rtcCatIcon "Menu items.Modeling.Curves" 		"menuIconEditCurves.png";
	rtcCatIcon "Menu items.Modeling.Surfaces" 		"menuIconSurfaces.png";
	rtcCatIcon "Menu items.Modeling.Deform" 		"menuIconDeformations.png";
	rtcCatIcon "Menu items.Modeling.UV" 			"menuIconPolygons.png";
	rtcCatIcon "Menu items.Modeling.Generate" 		"menuIconDeformations.png";

	rtcCatIcon "Menu items.Rigging.Skeleton" 		"menuIconSkeletons.png";
	rtcCatIcon "Menu items.Rigging.Skin" 			"menuIconSkinning.png";
	rtcCatIcon "Menu items.Rigging.Constraint" 		"menuIconConstraints.png";
	//rtcCatIcon "Menu items.Rigging.Control" 		"menuIcon.png";

	rtcCatIcon "Menu items.Animation.Key"	 		"menuIconKeys.png";
	//rtcCatIcon "Menu items.Animation.Playback"		"menuIcon.png";
	//rtcCatIcon "Menu items.Animation.Visualize"	 	"menuIcon.png";
	//rtcCatIcon "Menu items.Animation.MASH"	 		"menuIcon.png";

	rtcCatIcon "Menu items.Dynamics.nParticles"	 	"menuIconParticles.png";
	rtcCatIcon "Menu items.Dynamics.nFluids"	 	"menuIconFluids.png";
	rtcCatIcon "Menu items.Dynamics.nCloth"	 		"menuIconFields.png";
	rtcCatIcon "Menu items.Dynamics.nHair"	 		"menuIconHair.png";
	rtcCatIcon "Menu items.Dynamics.nConstraint"	"menuIconNCloth.png";
	rtcCatIcon "Menu items.Dynamics.nCache"	 		"menuIconNCloth.png";
	rtcCatIcon "Menu items.Dynamics.Fields/Solvers"	"menuIconNCloth.png";
	rtcCatIcon "Menu items.Dynamics.Effects"		"menuIconBodies.png";
	//rtcCatIcon "Menu items.Dynamics.Bifrost Fluids"	"menuIcon.png";
	//rtcCatIcon "Menu items.Dynamics.Boss"			"menuIcon.png";

	rtcCatIcon "Menu items.Rendering.Lighting/Shading"	"menuIconShading.png";
	rtcCatIcon "Menu items.Rendering.Texturing"			"menuIconTexturing.png";
	rtcCatIcon "Menu items.Rendering.Render"			"menuIconRender.png";
	rtcCatIcon "Menu items.Rendering.Toon"				"menuIconCartoon.png";
	rtcCatIcon "Menu items.Rendering.Stereo"			"menuIconRender.png";
}

if ( catch( menuCategories() ) ) {
    print (uiRes("m_defaultRunTimeCommands.kRunTimeCategoryError"));
}


global proc insertKey() {
    string $curves[] = `keyframe -selected -q -name`;

    // If we don't find any selected curves we should insert key on all curves in GE viewport.
    if (size($curves) == 0)
    {
        string $connection = `editor -q -mainListConnection graphEditor1GraphEd`;
        $curves = `expandSelectionConnectionAsArray $connection`;
    }

	//no selection or GE not open fallback on object selection
	if (size($curves) == 0)
	{
		$curves = `findKeyframe -curve`;
	}

	//key only if there is something to key
	if (size($curves) != 0)
	{
		setKeyframe -insert $curves;
	}

}


global proc selectNextOrPrevKey(string $type) {
    float $lastKeyframes[] = `keyframe -q -lsl`;
    float $nextKeyframe;

    if (`playbackOptions -q -slp`)
    {
        $nextKeyframe = `findKeyframe -timeSlider -an keys -t $lastKeyframes[0] -which $type`;
    }
    else
    {
        $nextKeyframe = `findKeyframe -an keys -t $lastKeyframes[0] -which $type`;
    }

    selectKey -cl;
    selectKey -k -t $nextKeyframe;
    currentTime -edit $nextKeyframe;
}

// ======================================================================
// ======================================================================
//
//	Common menu set, ie. File, Edit, Modify, Create, Display, Window,
//	and Help.
//
// ======================================================================
// ======================================================================
proc commonMenus() {
//
//	File menu.
//
// ----------------------------------------------------------------------

//	Scene operations: New, Open, Save, Save As...
//

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNewSceneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("performNewScene 0;")
	NewScene;

	runTimeCommand -default true
	    -annotation (uiRes("m_defaultRunTimeCommands.kNewSceneOptionsAnnot"))
	    -category   ("Menu items.Common.File")
	    -command    ("performNewScene 1;")
	    NewSceneOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kOpenSceneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenSceneAnnot"))
	-category   ("Menu items.Common.File")
	// ADSK_CLR_MGT_BEGIN
	// Need to check for invalid rendering space, view transform, output
	// transform, and missing color spaces.  checkColorManagementAllSettings()
	// is a no-op if the color management feature is not available.
	-command    ("if (projectViewer(\"Open\")) { checkColorManagementAllSettings(); }")
	// ADSK_CLR_MGT_END
	OpenScene;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kOpenSceneOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"Open\" \"projectViewer Open\" false")
		OpenSceneOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kOptimizeSceneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOptimizeSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("cleanUpScene 1")
	OptimizeScene;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kOptimizeSceneOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("cleanUpScene 2")
		OptimizeSceneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSaveSceneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("fileCmdCallback; FileMenu_SaveItem; fileCmdRestoreCallback;")
	SaveScene;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSaveSceneOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"Save\" \"SaveScene\" false")
		SaveSceneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSaveSceneAsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveSceneAsAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("fileCmdCallback; projectViewer SaveAs; fileCmdRestoreCallback;")
	SaveSceneAs;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSaveSceneAsOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"SaveAs\" \"projectViewer SaveAs\" false")
		SaveSceneAsOptions;

// For the menu item label, QT takes "&&"  as the escape charaters of "&". 
// But this only works under Windows and Linux. On Mac, using one "&" is ok.
string $kIncrementAndSaveLabel = "";
if (`about -mac`) {
    $kIncrementAndSaveLabel = (uiRes("m_defaultRunTimeCommands.kIncrementAndSaveMac"));
} else {
    $kIncrementAndSaveLabel = (uiRes("m_defaultRunTimeCommands.kIncrementAndSave"));
}

runTimeCommand -default true
	-label 		($kIncrementAndSaveLabel)
	-annotation (uiRes("m_defaultRunTimeCommands.kIncrementAndSaveAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("fileCmdCallback; incrementAndSaveScene 0; fileCmdRestoreCallback;")
	IncrementAndSave;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kArchiveLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kArchiveAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("performArchiveScene 0")
	ArchiveScene;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kArchiveSceneOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("performArchiveScene 1")
		ArchiveSceneOptions;

//	Save Preferences.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSavePreferencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSavePreferencesAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("savePrefs;")
	SavePreferences;

//	Import and Export.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kImportLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kImportAnnot"))
	-category   ("Menu items.Common.File")
	// ADSK_CLR_MGT_BEGIN
	// Only need to check for missing color spaces.
	// preCheckColorManagement() and checkColorManagementMissingColorSpaces()
	// are no-ops if the color management feature is not available.
	-command    ("preCheckColorManagement(); projectViewer Import; checkColorManagementMissingColorSpaces();")
	// ADSK_CLR_MGT_END
	Import;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kImportOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"Import\" \"projectViewer Import\" false")
		ImportOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSendAsNewMudboxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Mudbox\", \"SendAsNewScene\")")
	SendAsNewSceneMudbox;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateCurrentMudboxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Mudbox\", \"UpdateCurrentScene\")")
	UpdateCurrentSceneMudbox;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCurrentMudboxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Mudbox\", \"AddToScene\")")
	AddToCurrentSceneMudbox;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPrevObjectsMudboxAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Mudbox\", \"SelectPreviousObjects\")")
	SelectPreviousObjectsMudbox;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSendAsNewFlameSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flame\", \"SendAsNewScene\")")
	SendAsNewSceneFlame;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateCurrentFlameSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flame\", \"UpdateCurrentScene\")")
	UpdateCurrentSceneFlame;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCurrentFlameSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flame\", \"AddToScene\")")
	AddToCurrentSceneFlame;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPrevObjectsFlameAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flame\", \"SelectPreviousObjects\")")
	SelectPreviousObjectsFlame;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSendAsNewFlareSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flare\", \"SendAsNewScene\")")
	SendAsNewSceneFlare;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateCurrentFlareSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flare\", \"UpdateCurrentScene\")")
	UpdateCurrentSceneFlare;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCurrentFlareSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flare\", \"AddToScene\")")
	AddToCurrentSceneFlare;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPrevObjectsFlareAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"Flare\", \"SelectPreviousObjects\")")
	SelectPreviousObjectsFlare;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSendAsNewMotionBuilderSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"MotionBuilder\", \"SendAsNewScene\")")
	SendAsNewSceneMotionBuilder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateCurrentMotionBuilderSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"MotionBuilder\", \"UpdateCurrentScene\")")
	UpdateCurrentSceneMotionBuilder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCurrentMotionBuilderSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"MotionBuilder\", \"AddToScene\")")
	AddToCurrentSceneMotionBuilder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPrevObjectsMotionBuilderAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"MotionBuilder\", \"SelectPreviousObjects\")")
	SelectPreviousObjectsMotionBuilder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSendAsNew3dsMaxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"3ds Max\", \"SendAsNewScene\")")
	SendAsNewScene3dsMax;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateCurrent3dsMaxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"3ds Max\", \"UpdateCurrentScene\")")
	UpdateCurrentScene3dsMax;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCurrent3dsMaxSceneAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"3ds Max\", \"AddToScene\")")
	AddToCurrentScene3dsMax;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPrevObjects3dsMaxAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("OneClickMenuExecute (\"3ds Max\", \"SelectPreviousObjects\")")
	SelectPreviousObjects3dsMax;
    

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("projectViewer ExportAll")
	Export;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExportOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"ExportAll\" \"projectViewer ExportAll\" false")
		ExportOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportSelectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportSelectionAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("projectViewer ExportActive")
	ExportSelection;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExportSelectionOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"ExportActive\" \"projectViewer ExportActive\" false")
		ExportSelectionOptions;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMASHToAELLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMASHToAELAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("MASHexecuteProc(\"MayaToAEL\")")
	OpenAELiveLink;

    
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportOfflineFileLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportOfflineFileAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("projectViewer ExportOfflineFile")
	ExportOfflineFile;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExportOfflineFileObjectsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"ExportOfflineFile\" \"projectViewer ExportOfflineFile\" false")
		ExportOfflineFileOptions;    

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kApplyOfflineFileLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kApplyOfflineFileAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("projectViewer ApplyOfflineFile")
	AssignOfflineFile;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAssignOfflineFileOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"ApplyOfflineFile\" \"projectViewer ApplyOfflineFile\" false")
		AssignOfflineFileOptions;

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("ExportOfflineFile"))
	-category   ("Other items.Reference Editor")
	-command    ("projectViewer ExportOfflineFileFromRefEd")
	ExportOfflineFileFromRefEd;

	runTimeCommand -default true
		-annotation (getRunTimeCommandAnnotation("ExportOfflineFileOptions"))
		-category   ("Other items.Reference Editor")
		-command    ("fileOptions2 \"ExportOfflineFileFromRefEd\" \"projectViewer ExportOfflineFileFromRefEd\" false")
		ExportOfflineFileFromRefEdOptions;

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("AssignOfflineFile"))
	-category   ("Other items.Reference Editor")
	-command    ("projectViewer ApplyOfflineFileFromRefEd")
	AssignOfflineFileFromRefEd;

	runTimeCommand -default true
		-annotation (getRunTimeCommandAnnotation("AssignOfflineFileOptions"))
		-category   ("Other items.Reference Editor")
		-command    ("fileOptions2 \"ApplyOfflineFileFromRefEd\" \"projectViewer ApplyOfflineFileFromRefEd\" false")
		AssignOfflineFileFromRefEdOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportProxyAssetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportProxyAssetAnnot"))
	-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
	-command    ("performExportContainerProxy 0")
	ExportProxyContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExportProxyContainerOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
		-command    ("performExportContainerProxy 1")
		ExportProxyContainerOptions;

//  View Image and Sequence
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kViewImageLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kViewImageAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("launchImageViewer 0;")
	ViewImage;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kViewSequenceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kViewSequenceAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("launchImageViewer 1;")
	ViewSequence;

//	Reference operations.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateReferenceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateReferenceAnnot"))
	-category   ("Menu items.Common.File")
	// ADSK_CLR_MGT_BEGIN
	// Only need to check for missing color spaces.
	// preCheckColorManagement() and checkColorManagementMissingColorSpaces()
	// are no-ops if the color management feature is not available.
	-command    ("preCheckColorManagement(); projectViewer Reference; checkColorManagementMissingColorSpaces();")
	// ADSK_CLR_MGT_END
	CreateReference;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateReferenceOptionsAnnot"))
		-category   ("Menu items.Common.File")
		-command    ("fileOptions2 \"Reference\" \"projectViewer Reference\" false")
		CreateReferenceOptions;

string $referenceEditorTitle = localizedPanelLabel("Reference Editor");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kReferenceEditorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReferenceEditorAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("tearOffRestorePanel \"" + $referenceEditorTitle + "\" referenceEditor true")
	ReferenceEditor;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreloadReferenceEditorAnnot"))
	-category   ("Other items.Reference Editor")
	-command    ("showPreloadReferenceEditor")
	PreloadReferenceEditor;

//	Project operations.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kProjectWindowLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectWindowAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("projectWindow")
	ProjectWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSetProjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetProjectAnnot"))
	-category   ("Menu items.Common.File")
	-command    ("setProject \"\"")
	SetProject;

//	Quit the application.
//
// Do not add any other code to the quit or you will not
// have it executed for some types of quitting - like
// quitting through the command language or by double-clicking
// the main Maya window.
//
string $QuitLabel = "";
string $QuitAnnotation = "";
if (`about -mac`) {
    $QuitLabel = (uiRes("m_defaultRunTimeCommands.kQuitMayaMac"));
    $QuitAnnotation = (uiRes("m_defaultRunTimeCommands.kQuitMayaMacAnnot"));
} else {
    $QuitLabel = (uiRes("m_defaultRunTimeCommands.kExit"));
    $QuitAnnotation = (uiRes("m_defaultRunTimeCommands.kExitMayaAnnot"));
}
runTimeCommand -default true
	-label 		($QuitLabel)
	-annotation ($QuitAnnotation)
	-category   ("Menu items.Common.File")
	-command    ("play -state off; evalDeferred(\"quit\")")
	Quit;

//
//	Edit menu.
//
// ----------------------------------------------------------------------

//	Undo and Redo.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUndoLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUndoAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("undo")
	Undo;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRedoLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRedoAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("redo")
	Redo;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableTCUC"))
	-category   ("Menu items.Common.Edit")
	-command    ("optionVar -iv timeChangeUndoConsolidation 0")
	DisableTimeChangeUndoConsolidation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableTCUC"))
	-category   ("Menu items.Common.Edit")
	-command    ("optionVar -iv timeChangeUndoConsolidation 1")
	EnableTimeChangeUndoConsolidation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLockCamera"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" int $lock = !`camera -q -lt $camera`; " +
				" camera -e -lt $lock $camera; ")
	LockCamera;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCameraFromViewAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("MTcreateCameraFromView")
	CreateCameraFromView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCycleThroughCamerasAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("MTcycleCustomCams")
	CycleThroughCameras;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignCameraToPolygonAnnotation"))
	-command    ("if(`pluginInfo -q -loaded \"modelingToolkit\"`){ dR_cameraToPoly; }")
	-category   ("Other items.Viewport Menus.View")
	AlignCameraToPolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCameraModeToggle"))
	-category   ("Other items.Viewport Menus.View")
	-command    (" string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" int $isPerspective = !`camera -q -orthographic $camera`; " +
				" float $upDir[] = `camera -q -wup $camera`; " +
				" if ($isPerspective) { " +
				"	viewPlace -up $upDir[0] $upDir[1] $upDir[2] -o $camera; " +
				" } else { " +
				"	viewPlace -up $upDir[0] $upDir[1] $upDir[2] -p $camera;} ")
	CameraModeToggle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCameraModePerspective"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("{ string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" int $isPerspective = !`camera -q -orthographic $camera`; " +
				" float $upDir[] = `camera -q -wup $camera`; " +
				" if (!$isPerspective) { viewPlace -up $upDir[0] $upDir[1] $upDir[2] -p $camera;} }")
	CameraModePerspective;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCameraModeOrthographic"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("{ string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" int $isPerspective = !`camera -q -orthographic $camera`; " +
				" float $upDir[] = `camera -q -wup $camera`; " +
				" if ($isPerspective) { viewPlace -up $upDir[0] $upDir[1] $upDir[2] -o $camera;} }")
	CameraModeOrthographic;

// Previous/Next/Default View. Modeling panel and hypershade panel specific
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUndoViewChangeAnnotation"))
	-category   ("Other items.Viewport Menus")
	-command    ( "{" +
				"  string $currentPanel = `getPanel -withFocus`; " +
				"  string $hyperGraphEditor = $currentPanel + \"HyperGraphEd\"; " +
				"  if (`hyperGraph -ex $hyperGraphEditor`) { " +
				"     HyperGraphPanelUndoViewChange;" +
				"  } else { " +
				"	  ModelingPanelUndoViewChange; " +
				"  }" +
				"}")
	UndoViewChange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModelingPanelUndoViewChangeAnnotation"))
	-category   ("Other items.Viewport items")
	-command    ( "	goToView -1;" )
	ModelingPanelUndoViewChange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHyperGraphUndoViewChangeAnnotation"))
	-category   ("Editors.HyperGraph Panel")
	-command    ( "{" +
				"  string $currentPanel = `getPanel -withFocus`; " +
				"  string $hyperGraphEditor = $currentPanel + \"HyperGraphEd\"; " +
				"  if (`hyperGraph -ex $hyperGraphEditor`) { " +
				"     hyperGraph -e -previousView $hyperGraphEditor;" +
				"  }" +
				"}")
	-hotkeyCtx  ("hyperGraphPanel")
	HyperGraphPanelUndoViewChange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRedoViewChangeAnnotation"))
	-category   ("Other items.Viewport Menus")
	-command    ( "{" +
				"  string $currentPanel = `getPanel -withFocus`; " +
				"  string $hyperGraphEditor = $currentPanel + \"HyperGraphEd\"; " +
				"  if (`hyperGraph -ex $hyperGraphEditor`) { " +
				"     HyperGraphPanelRedoViewChange;" +
				"  } else { " +
				"	 ModelingPanelRedoViewChange;" +
				"  }" +
				"}")
	RedoViewChange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModelingPanelRedoViewChangeAnnotation"))
	-category   ("Other items.Viewport items")
	-command    ( "	goToView 1;" )
	ModelingPanelRedoViewChange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHyperGraphRedoViewChangeAnnotation"))
	-category   ("Editors.HyperGraph Panel")
	-command    ( "{" +
				"  string $currentPanel = `getPanel -withFocus`; " +
				"  string $hyperGraphEditor = $currentPanel + \"HyperGraphEd\"; " +
				"  if (`hyperGraph -ex $hyperGraphEditor`) { " +
				"     hyperGraph -e -nextView $hyperGraphEditor;" +
				"  }" +
				"}")
	-hotkeyCtx  ("hyperGraphPanel")
	HyperGraphPanelRedoViewChange;
	
//	View selection
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLookAtSelection"))
	-category   ("Other items.Viewport Menus")
	-command    ("string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" viewLookAt $camera; ")
	LookAtSelection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCenterViewOfSelectionAnnotation"))
	-category   ("Other items.Viewport Menus")
	-command    ("string $currentPanel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $currentPanel`; " +
				" viewFit -c $camera; ")
	CenterViewOfSelection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultViewAnnotation"))
	-category   ("Other items.Viewport items")
	-command ("{ string $panel = `getPanel -withFocus`;"+
				"viewSet -animate `optionVar -query animateRoll` -home `hotkeyCurrentCamera $panel`;}")
	GoToDefaultView;

//	View Along Axis
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisXAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vx $camera; ")
	ViewAlongAxisX;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisYAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vy $camera; ")
	ViewAlongAxisY;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisZAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vz $camera; ")
	ViewAlongAxisZ;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisNegativeXAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vnx $camera; ")
	ViewAlongAxisNegativeX;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisNegativeYAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vny $camera; ")
	ViewAlongAxisNegativeY;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAlongAxisNegativeZAnnotation"))
	-category   ("Other items.Viewport Menus.View")
	-command    ("string $panel = `getPanel -withFocus`; " +
				" string $camera = `modelEditor -q -camera $panel`; " +
				" viewSet -vnz $camera; ")
	ViewAlongAxisNegativeZ;

//	Repeat last.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRepeatLastLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRepeatLastAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("repeatLast")
	RepeatLast;

//	Recent Commands window.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRecentCommandsWindowLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRecentCommandsWindowAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("recentCmdWin")
	RecentCommandsWindow;

//	Cut, copy, paste, and delete keys.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCutKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCutKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performCutKeyArgList 1 {\"0\", \"animationList\", \"0\"}")
	CutKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCutKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performCutKeyArgList 1 {\"1\", \"animationList\", \"0\"}")
		CutKeysOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCopyKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performCopyKeyArgList 1 {\"0\", \"animationList\", \"0\"}")
	CopyKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCopyKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performCopyKeyArgList 1 {\"1\", \"animationList\", \"0\"}")
		CopyKeysOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPasteKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPasteKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performPasteKeyArgList 1 {\"0\", \"animationList\", \"0\"}")
	PasteKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPasteKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performPasteKeyArgList 1 {\"1\", \"animationList\", \"0\"}")
		PasteKeysOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performClearKeyArgList 1 {\"0\", \"animationList\", \"0\", \"0\"}")
	DeleteKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performClearKeyArgList 1 {\"1\", \"animationList\", \"0\", \"0\"}")
		DeleteKeysOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kScaleKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performScaleKeyArgList 1 {\"0\", \"animationList\", \"0\"}")
	ScaleKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kScaleKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performScaleKeyArgList 1 {\"1\", \"animationList\", \"0\"}")
		ScaleKeysOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kNudgeSelectedKeysForwardLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNudgeSelectedKeysForwardAnnot"))
	-category   ("Other items.Animation.Key")
	-command    ("keyframe -e -iub true -animation keys -r -o over -tc 1")
	NudgeSelectedKeysForward;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kNudgeSelectedKeysBackwardLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNudgeSelectedKeysBackwardAnnot"))
	-category   ("Other items.Animation.Key")
	-command    ("keyframe -e -iub true -animation keys -r -o over -tc -1")
	NudgeSelectedKeysBackward;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLatticeDeformAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("setToolTo latticeDeformKeySuperContext;")
	-hotkeyCtx  ("graphEditor")
	LatticeDeformKeysTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kLatticeDeformOptionsAnnot"))
		-category   ("Editors.Graph Editor")
		-command    ("setToolTo latticeDeformKeySuperContext; toolPropertyWindow;")
		-hotkeyCtx  ("graphEditor")
		LatticeDeformKeysToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRegionKeyAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("setToolTo regionSelectKeySuperContext;")
	-hotkeyCtx  ("graphEditor")
	RegionKeysTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRetimeKeyAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("setToolTo retimeKeySuperContext;")
	-hotkeyCtx  ("graphEditor")
	RetimeKeysTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kRetimeKeyOptionsAnnot"))
		-category   ("Editors.Graph Editor")
		-command    ("setToolTo retimeKeySuperContext;toolPropertyWindow;")
		-hotkeyCtx  ("graphEditor")
		RetimeKeysToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddKeys"))
	-category   ("Editors.Graph Editor")
	-command    ("setToolTo setKeySuperContext;")
	-hotkeyCtx  ("graphEditor")
	AddKeysTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAddKeysOptions"))
		-category   ("Editors.Graph Editor")
		-command    ("setToolTo setKeySuperContext; toolPropertyWindow")
		-hotkeyCtx  ("graphEditor")
		AddKeysToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeys"))
	-category   ("Editors.Graph Editor")
	-command    ("setToolTo insertKeySuperContext;")
	-hotkeyCtx  ("graphEditor")
	InsertKeysTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeysOptions"))
		-category   ("Editors.Graph Editor")
		-command    ("setToolTo insertKeySuperContext; toolPropertyWindow")
		-hotkeyCtx  ("graphEditor")
		InsertKeysToolOptions;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleSnapTimeToSelection"))
    -category ("Editors.Graph Editor")
    -command  ("optionVar -intValue snapTimeToSelection (!`optionVar -query snapTimeToSelection`)")
    -hotkeyCtx ("graphEditor")
    SnapTimeToSelection;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSnapKeysLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapKeysAnnot"))
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performSnapKeyArgList 1 { \"0\",  \"animationList\", \"0\" }")
	SnapKeys;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSnapKeysOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performSnapKeyArgList 1 { \"1\",  \"animationList\", \"0\" }")
		SnapKeysOptions;

//	Bake simulation.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBakeSimLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeSimAnnot"))
	-image      "bakeAnimation.png"
	-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
	-command    ("performBakeSimulationArgList 1 { \"0\",  \"animationList\"}")
	BakeSimulation;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kBakeSimOptionsAnnot"))
		-category   ("Menu items.Common.Edit;Menu items.Animation.Key")
		-command    ("performBakeSimulationArgList 1 {\"1\", \"animationList\"}")
		BakeSimulationOptions;

//  Cut
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCutSelectedLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCutSelectedAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("cutCopyPaste \"cut\"")
	CutSelected;

//  Copy
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCopySelectedLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCopySelectedAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("cutCopyPaste \"copy\"")
	CopySelected;

//  Paste
//
runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kPasteSelectedLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPasteSelectedAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("cutCopyPaste \"paste\"")
	PasteSelected;

//	Delete.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("doDelete")
	Delete;

//	Delete history.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteHistoryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteHistoryAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("delete -ch")
	DeleteHistory;

//	Delete Channels.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteChannelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteChannelsAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("performDeleteChannels false")
	DeleteChannels;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteChannelsOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Delete by Type")
		-command    ("performDeleteChannels true")
		DeleteChannelsOptions;

//	Delete Non-Deformer History
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBakeNonDefHistoryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeNonDefHistoryAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("performBakeNonDefHistory false")
	BakeNonDefHistory;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kBakeNonDefHistoryOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Delete by Type")
		-command    ("performBakeNonDefHistory true")
		BakeNonDefHistoryOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBakeAllNonDefHistoryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeAllNonDefHistoryAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("bakePartialHistory -all")
	BakeAllNonDefHistory;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBakeTopologyToTargetsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeTopologyToTargetsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kBakeTopologyToTargetsLongAnnot"))
	-image "bakeBlendShape.png"
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("bakePartialHistory -ppt")
	BakeTopologyToTargets;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kEditNormalizationGroupsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEditNormalizationGroupsAnnot")) 
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kEditNormalizationGroupsLongAnnot")) 
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command "editNormalizationGroups" 
	EditNormalizationGroups;

//	Delete Static Channels.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteStaticChannelsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteStaticChannelsAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("performDeleteStaticChannels false")
	DeleteStaticChannels;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteStaticChannelsOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Delete by Type")
		-command    ("performDeleteStaticChannels true")
		DeleteStaticChannelsOptions;

//	Delete Motion Paths.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteMotionPathsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteMotionPathsAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("delete -mp")
	DeleteMotionPaths;

//	Delete Expressions.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteExpressionsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteExpressionsAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("performDeleteExpressions false")
	DeleteExpressions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteExpressionsOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Delete by Type")
		-command    ("performDeleteExpressions true")
		DeleteExpressionsOptions;

//	Delete Constraints.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteConstraintsAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("delete -constraints")
	DeleteConstraints;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteSelContainerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteSelContainerAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("deleteAllContainers(1)")
	DeleteSelectedContainers;

//	Delete Rigid Bodies.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteRigidBodiesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteRigidBodiesAnnot"))
	-category   ("Menu items.Common.Edit.Delete by Type")
	-command    ("deleteSelectRigidBodies")
	DeleteRigidBodies;

//	Delete all History.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllHistoryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllHistoryAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -constructionHistory")
	DeleteAllHistory;

//	Delete all Channels.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllChannelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllChannelsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -channels")
	DeleteAllChannels;

//	Delete all Static Channels.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllStaticChannelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllStaticChannelsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -staticChannels")
	DeleteAllStaticChannels;

//	Delete all Clips.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllClipsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllClipsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `clip -q -allClips`")
	DeleteAllClips;
//	Delete all Poses.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllPosesAnnot"))
	-category   ("Other items.Edit")
	-command    ("delete `pose -q -allPoses`")
	-showInHotkeyEditor false
	DeleteAllPoses;

//	Delete all Motion Paths.
//
runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllMotionPathsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllMotionPathsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -motionPaths")
	DeleteAllMotionPaths;

//	Delete all Expressions.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllExpressionsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllExpressionsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -expressions")
	DeleteAllExpressions;
    
//	Delete all Constraints.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllConstraintsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete -all -constraints")
	DeleteAllConstraints;

//	Delete all Sounds.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllSoundsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllSoundsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type audio`")
	DeleteAllSounds;

//	Delete all Joints.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllJointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllJointsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type joint`")
	DeleteAllJoints;

//	Delete all IK Handles.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllIKHandlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllIKHandlesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type ikHandle -type hikEffector`")
	DeleteAllIKHandles;

//	Delete all Lattices.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllLatticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllLatticesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type ffd`; delete `ls -type lattice`")
	DeleteAllLattices;

//	Delete all Clusters.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllClustersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllClustersAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type cluster`")
	DeleteAllClusters;

//	Delete all Sculpt Objects.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllSculptObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllSculptObjectsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type sculpt`; " +
				 "delete `ls -type implicitSphere`")
	DeleteAllSculptObjects;

//	Delete all Wires.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllWiresLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllWiresAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type wire`")
	DeleteAllWires;

//	Delete all Non-linear Deformers.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllNonLinearDeformersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllNonLinearDeformersAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type nonLinear`")
	DeleteAllNonLinearDeformers;


//	Delete all controller
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllControllersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllControllersAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type controller`")
	DeleteAllControllers;

//	Delete all Lights.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllLightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllLightsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `listTransforms -lights`")
	DeleteAllLights;

//	Delete all Cameras.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllCamerasLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllCamerasAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `listTransforms -cameras`")
	DeleteAllCameras;

//	Delete all Image Planes.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllImagePlanesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllImagePlanesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type imagePlane`")
	DeleteAllImagePlanes;

//	Delete all Shading Groups and Materials.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllShadingGroupsAndMaterialsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllShadingGroupsAndMaterialsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("deleteShadingGroupsAndMaterials")
	DeleteAllShadingGroupsAndMaterials;

//	Delete all Particles.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllParticlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllParticlesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `listTransforms \"-type particle\"`")
	DeleteAllParticles;

//	Delete all Fluids.
//
	runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllFluidsLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllFluidsAnnot"))
    -category   ("Menu items.Common.Edit.Delete All by Type")
    -command    ("delete `listTransforms \"-type fluidShape\"`")
    DeleteAllFluids;


//	Delete all Fur.
//
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllFursAnnot"))
		-category   ("Menu items.Common.Edit.Delete All by Type")
		-command    ("delete `listTransforms \"-type FurFeedback\"`")
		DeleteAllFurs;

//	Delete all Rigid Bodies.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllRigidBodiesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllRigidBodiesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type rigidBody`")
	DeleteAllRigidBodies;

//	Delete all Rigid Constraints.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllRigidConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllRigidConstraintsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("delete `ls -type rigidConstraint`")
	DeleteAllRigidConstraints;

//	Delete all Strokes.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllStrokesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllStrokesAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("deleteAllStrokes()")
	DeleteAllStrokes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllAssetsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllAssetsAnnot"))
	-category   ("Menu items.Common.Edit.Delete All by Type")
	-command    ("deleteAllContainers(0)")
	DeleteAllContainers;

//	Select all.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("if(!`exists MTselAll`) source MTprocs.mel; select -cl; MTselAll")
	SelectAll;

// Select None
// 
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeselectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeselectAnnot"))
	-category 	("Menu items.Common.Select")
	-command 	("changeSelectMode -component; changeSelectMode -object; select -cl; autoUpdateAttrEd; statusLineUpdateInputField;")
	SelectNone;

//	Invert Selection.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kInvertSelectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInvertSelectionAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("invertSelection")
	InvertSelection;

//	Symmetrize selection.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetrizeSelectionAnnot"))
	-category   ("Other items.Select")
	-command    ("select -r -sym `ls -sl`")
	SymmetrizeSelection;

//	Select Similar.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectSimilarLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectSimilarAnnot"))
	-image "selectSimilar.png"
	-category   ("Menu items.Common.Select")
	-command    ("performSelectSimilar 0")
	SelectSimilar;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectSimilarOptionsAnnot"))
		-category   ("Menu items.Common.Select")
		-command    ("performSelectSimilar 1")
		SelectSimilarOptions;

//	Select all Joints.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllJointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllJointsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type joint`")
	SelectAllJoints;

//	Select all IK Handles.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllIKHandlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllIKHandlesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type ikHandle -type hikEffector`")
	SelectAllIKHandles;

//	Select all Lattices.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllLatticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllLatticesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type lattice\"`")
	SelectAllLattices;

//	Select all Clusters.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllClustersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllClustersAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select `listTransforms \"-type clusterHandle\"`")
	SelectAllClusters;

//	Select all Sculpt Objects.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllSculptObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllSculptObjectsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \" -type implicitSphere -type sculpt\"`")
	SelectAllSculptObjects;

//	Select all Wires.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllWiresLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllWiresAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type wire`")
	SelectAllWires;

//	Select all Transforms.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllTransformsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllTransformsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type transform`")
	SelectAllTransforms;

//	Select all Geometry.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllGeometryAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms -geometry`")
	SelectAllGeometry;

//	Select all NURBS Curves.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllNurbsCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllNURBSCurvesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type nurbsCurve\"`")
	SelectAllNURBSCurves;

//	Select all NURBS Surfaces.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllNurbsSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllNURBSSurfacesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type nurbsSurface\"`")
	SelectAllNURBSSurfaces;

//	Select all Polygon Geometry.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllPolygonGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllPolygonGeometryAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type mesh\"`")
	SelectAllPolygonGeometry;

//	Select all Subdiv Geometry.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllSubdivGeometryAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type subdiv\"`")
	SelectAllSubdivGeometry;

//	Select all Lights.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllLightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllLightsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms -lights`")
	SelectAllLights;

//	Select all Cameras.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllCamerasLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllCamerasAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms -cameras`")
	SelectAllCameras;

//	Select all Image Planes.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllImagePlanesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllImagePlanesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type imagePlane`")
	SelectAllImagePlanes;

//	Select all Particles.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllParticlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllParticlesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type particle\"`")
	SelectAllParticles;

//	Select all Fluids.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllFluidsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllFluidsAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type fluidShape\"`")
		SelectAllFluids;

//	Select all HairSystems.
//
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllHairSystemAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type hairSystem\"`")
		SelectAllHairSystem;

//	Select all Follicles.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllFolliclesLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllFolliclesAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type follicle\"`")
		SelectAllFollicles;

//	Select all nCloth.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllNClothsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllNClothsAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type nCloth\"`")
		SelectAllNCloths;

//	Select all nParticle.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllNParticlesLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllNParticlesAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type nParticle\"`")
		SelectAllNParticles;

//	Select all nRigid.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllNRigidsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllNRigidsAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type nRigid\"`")
		SelectAllNRigids;

//	Select all dynamicConstraint.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllDynamicConstraintsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllDynamicConstraintsAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type dynamicConstraint\"`")
		SelectAllDynamicConstraints;

//	Delete all nCloths.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllNClothsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllNClothsAnnot"))
		-category   ("Menu items.Common.Edit.Delete All by Type")
		-command	("performRemoveNCloth 0 \"allNCloths\"")
		DeleteAllNCloths;

//	Delete all nParticles
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllNParticlesLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllNParticlesAnnot"))
		-category   ("Menu items.Common.Edit.Delete All by Type")
		-command	("delete `ls -typ nParticle`")
		DeleteAllNParticles;

//	Delete all nRigids.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllNRigidsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllNRigidsAnnot"))
		-category   ("Menu items.Common.Edit.Delete All by Type")
		-command	("performRemoveNCloth 0 \"allNRigids\"")
		DeleteAllNRigids;

//	Delete all dynamicConstraints.
//
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAllDynamicConstraintsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAllDynamicConstraintsAnnot"))
		-category   ("Menu items.Common.Edit.Delete All by Type")
		-command	("performRemoveDynamicConstraint 0 \"all\"")
		DeleteAllDynamicConstraints;

//	Select all Furs.
//
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllFursAnnot"))
		-category   ("Menu items.Common.Select.All by Type")
		-command    ("select -r `listTransforms \"-type FurFeedback\"`")
		SelectAllFurs;

//	Select all Rigid Bodies.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllRigidBodiesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllRigidBodiesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type rigidBody\"`")
	SelectAllRigidBodies;

//	Select all Rigid Constraints.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllRigidConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllRigidConstraintsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type rigidConstraint`")
	SelectAllRigidConstraints;

//	Select all Strokes.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllStrokesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllStrokesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `listTransforms \"-type stroke\"`")
	SelectAllStrokes;

//	Select all Brushes.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllBrushesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllBrushesAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type brush`")
	SelectAllBrushes;

//	Select all containers.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAllAssetsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllAssetsAnnot"))
	-category   ("Menu items.Common.Select.All by Type")
	-command    ("select -r `ls -type container -type dagContainer`")
	SelectAllAssets;

//	Paint Selection Tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintSelectToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("artSelectToolScript 4")
	ArtPaintSelectTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintSelectToolOptionsAnnot"))
		-category   ("Other items.Tools")
		-command    ("artSelectToolScript 3")
		ArtPaintSelectToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectHierarchyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectHierarchyAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("select -hierarchy")
	SelectHierarchy;

//	Duplicate.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDuplicateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performDuplicate false")
	Duplicate;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDuplicateSpecialLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateSpecialAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performDuplicateSpecial false")
	DuplicateSpecial;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateSpecialOptions"))
		-category   ("Menu items.Common.Edit")
		-command    ("performDuplicateSpecial true")
		DuplicateSpecialOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDuplicateWithTransformLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateWithTransformAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("evalEcho(\"duplicate -smartTransform\")")
	DuplicateWithTransform;

//	Group.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGroupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGroupAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performGroup false")
	Group;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kGroupOptionsAnnot"))
		-category   ("Menu items.Common.Edit")
		-command    ("performGroup true")
		GroupOptions;

//	Ungroup.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUngroupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUngroupAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performUngroup false")
	Ungroup;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kUngroupOptionsAnnot"))
		-category   ("Menu items.Common.Edit")
		-command    ("performUngroup true")
		UngroupOptions;

//	Create Empty Group.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateEmptyGroupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateEmptyGroupAnnot"))
	-category   ("Menu items.Common.Create")
	-command    ("group -empty")
	CreateEmptyGroup;

//	Level of Detail Group/Ungroup.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLevelOfDetailGroupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLevelOfDetailGroupAnnot"))
	-image 		"levelOfDetail.png"
	-category   ("Menu items.Common.Edit.Level of Detail")
	-command    ("performSetupLod 0")
	LevelOfDetailGroup;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kLevelOfDetailGroupOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Level of Detail")
		-command    ("performSetupLod 1")
		LevelOfDetailGroupOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLODGenerateMeshesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLODGenerateMeshesAnnot"))
	-image 		"levelOfDetail.png"
	-category   ("Menu items.Common.Edit.Level of Detail")
	-command    ("performLODGenerateMeshes 0")
	LODGenerateMeshes;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kLODGenerateMeshesOptionsAnnot"))
		-category   ("Menu items.Common.Edit.Level of Detail")
		-command    ("performLODGenerateMeshes 1")
		LODGenerateMeshesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLevelOfDetailUngroupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLevelOfDetailUngroupAnnot"))
	-image 		"levelOfDetailDelete.png"
	-category   ("Menu items.Common.Edit.Level of Detail")
	-command    ("performDeleteLod")
	LevelOfDetailUngroup;

//	Parent.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kParentLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kParentAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performParent false")
	Parent;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kParentOptionsAnnot"))
		-category   ("Menu items.Common.Edit")
		-command    ("performParent true")
		ParentOptions;

//	Unparent.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnparentLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnparentAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performUnparent false")
	Unparent;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kUnparentOptionsAnnot"))
		-category   ("Menu items.Common.Edit")
		-command    ("performUnparent true")
		UnparentOptions;

//	Sets and Partitions.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSetAnnot"))
	-category   ("Menu items.Common.Create.Sets")
	-command    ("performCreateSet false")
	CreateSet;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateSetOptionsAnnot"))
		-category   ("Menu items.Common.Create.Sets")
		-command    ("performCreateSet true")
		CreateSetOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePartitionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePartitionAnnot"))
	-category   ("Menu items.Common.Create.Sets")
	-command    ("performCreatePartition false")
	CreatePartition;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePartitionOptionsAnnot"))
		-category   ("Menu items.Common.Create.Sets")
		-command    ("performCreatePartition true")
		CreatePartitionOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAssetCentricAnnot"))
	-category   ("Other items.Selection")
	-command    ("selectPref -containerCentricSelection (!`selectPref -q -containerCentricSelection`);")
	-showInHotkeyEditor false
	ToggleContainerCentric;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAssetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAssetAnnot"))
	-category   ("Menu items.Common.Create.Asset;Editors.Asset Editor")
	-command    ("performCreateContainer 0;")
	CreateContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAssetOptAnnot"))
		-category   ("Menu items.Common.Create.Asset;Editors.Asset Editor")
		-command    ("performCreateContainer 1;")
		CreateContainerOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateDagContainerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDagContainerAnnot"))
	-category   ("Menu items.Common.Create.Asset;Editors.Asset Editor")
	-command    ("performCreateDagContainer 0;")
	CreateDagContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAssetTransformOptAnnot"))
		-category   ("Menu items.Common.Create.Asset;Editors.Asset Editor")
		-command    ("performCreateDagContainer 1;")
		CreateDagContainerOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAssignTemplateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAssignTemplateAnnot"))
	-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
	-command    ("projectViewer AssignTemplate")
	AssignTemplate;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAssignTemplateOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
		-command    ("fileOptions2 \"AssignTemplate\" \"projectViewer AssignTemplate\" false")
		AssignTemplateOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAutobindAssetAnnot"))
	-category   ("Editors.Asset Editor")
	-command    ("performAutobindContainer 0;")
	AutobindContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAutobindAssetOptAnnot"))
		-category   ("Editors.Asset Editor")
		-command    ("performAutobindContainer 1;")
		AutobindContainerOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateBindingSetAnnot"))
	-category   ("Editors.Asset Editor")
    -command    ("doCreateBindingSet 1 {\"0\", \"0\" };")
	CreateBindingSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateBindingSetAnnot"))
	-category   ("Editors.Asset Editor")
	-command    ("performUpdateBindingSet 0;")
	UpdateBindingSet;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateBindingSetOptAnnot"))
		-category   ("Editors.Asset Editor")
		-command    ("performUpdateBindingSet 1;")
		UpdateBindingSetOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveBindingSetAnnot"))
	-category   ("Editors.Asset Editor")
    -command    ("doRemoveBindingSet 1 { };")
	RemoveBindingSet;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAddToContainerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToContainerAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command    ("performAddToContainer 0;")
	AddToContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAddToContainerOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset")
		-command    ("performAddToContainer 1;")
		AddToContainerOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRemoveFromAssetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveFromAssetAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command    ("performRemoveFromContainer 0;")
	RemoveFromContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kRemoveFromAssetOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset")
		-command    ("performRemoveFromContainer 1;")
		RemoveFromContainerOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLockContainerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLockContainerAnnot"))
	-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
	-command    ("lockContainer 1")
	LockContainer;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnlockContainerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnlockContainerAnnot"))
	-category   ("Menu items.Common.Modify.Asset;Editors.Asset Editor")
	-command    ("lockContainer 0")
	UnlockContainer;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishSelTransformLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishSelTransformAnnot"))
	-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
	-command    ("performPublishRootTransform 0")
	PublishRootTransform;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPublishSelTransformOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
		-command    ("performPublishRootTransform 1")
		PublishRootTransformOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnpublishSelTransformLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpublishSelTransformAnnot"))
	-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Unpublishing")
	-command    ("doPublishRootTransform 1 {\"0\", \"0\" }")
	UnpublishRootTransform;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishAttributesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishAttributesAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command    ("performPublishAttribute 0;")
	PublishAttributes;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPublishAttributesOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset")
		-command    ("performPublishAttribute 1;")
		PublishAttributesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnpublishAttributesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpublishAttributesAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command    ("channelBoxCommand -unpublishFromContainer")
	UnpublishAttributes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishConnectionsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishConnectionsAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command    ("performPublishConnections 0;")
	PublishConnections;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPublishConnectionsOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset")
		-command    ("performPublishConnections 1;")
		PublishConnectionsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kClearCurrentContainerAnnot"))
	-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Set Current Asset")
	-command    ("if (size(`container -q -c`) > 0) {container -e -c 0 `container -q -c`;}")
	ClearCurrentContainer;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTransferAttributeValuesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTransferAttributeValuesAnnot"))
	-category   ("Menu items.Common.Edit")
	-command    ("performTransferContainer 0;")
	TransferAttributeValues;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTransferAttributeValuesOptAnnot"))
		-category   ("Menu items.Common.Edit")
		-command    ("performTransferContainer 1;")
		TransferAttributeValuesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishParentAnchorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishParentAnchorAnnot"))
	-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
	-command	("performPublishNode 0 1")
	PublishParentAnchor;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPublishParentAnchorOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
		-command    ("performPublishNode 1 1;")
		PublishParentAnchorOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishChildAnchorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishChildAnchorAnnot"))
	-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
	-command	("performPublishNode 0 0")
	PublishChildAnchor;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPublishChildAnchorOptAnnot"))
		-category   ("Menu items.Common.Modify.Asset.Advanced Assets.Node Publishing")
		-command    ("performPublishNode 1 0;")
		PublishChildAnchorOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPublishNodeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPublishNodeAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command	("doPublishNode 1 {\"1\"}")
	PublishNode;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnpublishNodeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpublishNodeAnnot"))
	-category   ("Menu items.Common.Modify.Asset")
	-command	("doPublishNode 1 {\"0\"}")
	UnpublishNode;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnpublishParentAnchorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpublishParentAnchorAnnot"))
	-category 	("Menu items.Common.Modify.Asset.Advanced Assets.Node Unpublishing")
	-command	("doUnpublishNode 1;")
	UnpublishParentAnchor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUnpublishChildAnchorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpublishChildAnchorAnnot"))
	-category 	("Menu items.Common.Modify.Asset.Advanced Assets.Node Unpublishing")
	-command	("doUnpublishNode 0;")
	UnpublishChildAnchor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectAssetContentsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAssetContentsAnnot"))
	-category 	("Menu items.Common.Modify.Asset;Editors.Asset Editor")
	-command	("selectContainerContents")
	SelectContainerContents;


//
//	Modify menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveRotateScaleToggleSnapRelativeModeAnnot"))
	-category   ("Other items.Tools")
	-command    ("manipMoveContext -e -snap (!`manipMoveContext -q -snap Move`) Move;" +
				 "manipMoveContext -e -snapRelative (!`manipMoveContext -q -snapRelative Move `) Move;" +
				 "manipRotateContext -e -snap (!`manipRotateContext -q -snap Rotate`) Rotate;" +
				 "manipRotateContext -e -snapRelative (!`manipRotateContext -q -snapRelative Rotate`) Rotate;" +
				 "manipScaleContext -e -snap (!`manipScaleContext -q -snap Scale`) Scale;" +
				 "manipScaleContext -e -snapRelative (!`manipScaleContext -q -snapRelative Scale`) Scale;"
				 )
	MoveRotateScaleToolToggleSnapRelativeMode;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMoveToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveToolAnnot"))
	-image 		"move_M.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gMove")
	MoveTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMoveToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Transformation Tools")
		-command    ("setToolTo $gMove; toolPropertyWindow")
		MoveToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRotateToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolAnnot"))
	-image 		"rotate_M.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gRotate")
	RotateTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Transformation Tools")
		-command    ("setToolTo $gRotate; toolPropertyWindow")
		RotateToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kScaleToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolAnnot"))
	-image 		"scale_M.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gScale")
	ScaleTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Transformation Tools")
		-command    ("setToolTo $gScale; toolPropertyWindow")
		ScaleToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveRotateScaleToggleSnapModeAnnot"))
	-category   ("Other items.Tools")
	-command    ("manipRotateContext -e -snap (!`manipRotateContext -q -snap Rotate`) Rotate;" +
				 "manipMoveContext -e -snap (!`manipMoveContext -q -snap Move`) Move;" +
				 "manipScaleContext -e -snap (!`manipScaleContext -q -snap Scale`) Scale;" +
				 "texMoveContext -e -snap (!`texMoveContext -q -snap texMoveContext`) texMoveContext;" +
				 "texRotateContext -e -snap (!`texRotateContext -q -snap texRotateContext`) texRotateContext;" +
				 "texScaleContext -e -snap (!`texScaleContext -q -snap texScaleContext`) texScaleContext;" +
				 "showManipCtx -e -toggleIncSnap showManip3D;")
	MoveRotateScaleToolToggleSnapMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSTRSTweakModeOn"))
	-category   ("Other items.Tools")
	-command    ("strsTweakMode(1)")
	STRSTweakModeOn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSTRSTweakModeOff"))
	-category   ("Other items.Tools")
	-command    ("strsTweakMode(0)")
	STRSTweakModeOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSTRSTweakModeToggle"))
	-category   ("Other items.Tools")
	-command    ("strsTweakMode(2)")
	STRSTweakModeToggle;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUniversalManipLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUniversalManipAnnot"))
	-image 		"globalManip.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gXformManip")
	UniversalManip;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kUniversalManipOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Transformation Tools")
		-command    ("setToolTo $gXformManip; toolPropertyWindow")
		UniversalManipOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMoveRotateScaleToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveRotateScaleToolAnnot"))
	-image 		"srt.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gTransform")
	MoveRotateScaleTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMoveNormalToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveNormalToolAnnot"))
	-image 		"moveNormal.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gMoveNormal")
	MoveNormalTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMoveNormalToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Transformation Tools")
		-command    ("setToolTo $gMoveNormal; toolPropertyWindow")
		MoveNormalToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowManipulatorToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kShowManipulatorToolAnnot"))
	-image 		"showManip.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gShowManip")
	ShowManipulatorTool;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kDefaultManipulatorNoneLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultManipulatorNoneAnnot")) 
	-category   ("Menu items.Common.Modify.Transformation Tools.Default Object Manipulator")
	-command 	"setDefaultManip 0" 
	SetDefaultManipNone;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kDefaultManipulatorMoveLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultManipulatorMoveAnnot")) 
	-category   ("Menu items.Common.Modify.Transformation Tools.Default Object Manipulator")
	-command "setDefaultManip 1" 
	SetDefaultManipMove;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kDefaultManipulatorRotateLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultManipulatorRotateAnnot")) 
	-category   ("Menu items.Common.Modify.Transformation Tools.Default Object Manipulator")
	-command 	"setDefaultManip 2" 
	SetDefaultManipRotate;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kDefaultManipulatorScaleLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultManipulatorScaleAnnot")) 
	-category   ("Menu items.Common.Modify.Transformation Tools.Default Object Manipulator")
	-command 	"setDefaultManip 3" 
	SetDefaultManipScale;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kDefaultManipulatorTransformLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultManipulatorTransformAnnot"))
	-category   ("Menu items.Common.Modify.Transformation Tools.Default Object Manipulator")
	-command 	"setDefaultManip 4" 
	SetDefaultManipTransform;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kGameExporterWndAnn"))      
    -category "Menu items.Common.File"
    -command  "gameFbxExporter"
    GameExporterWnd;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kProportionalModificationToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kProportionalModificationToolAnnot"))
	-image 		"propMod.png"
	-category   ("Menu items.Common.Modify.Transformation Tools")
	-command    ("setToolTo $gPropMod")
	ProportionalModificationTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSoftModToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSoftModToolAnnot"))
	-image  	"softMod.png"
	-category   ("Menu items.Common.Modify.Transformation Tools;Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("setToolTo ShowManips; performSoftMod 0 0 0 {0.0, 0.0, 0.0}")
	SoftModTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSoftModToolOptionsAnnot"))
	-category   ("Menu items.Common.Modify.Transformation Tools;Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performSoftMod 1 0 0 {0.0, 0.0, 0.0}")
	SoftModToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolygonNormalEditToolLbl"))
 	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonNormalEditToolAnnot"))
 	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonNormalEditToolLongAnnot"))
 	-image "vertexNormalEdit.png"
 	-category   ("Menu items.Modeling.Mesh Display")
 	-command    ("setToolTo $gPolyNormEdit")
 	PolygonNormalEditTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kResetTransformationsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kResetTransformationsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performResetTransformations(0)")
	ResetTransformations;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kResetTransformationsOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("performResetTransformations 1")
		ResetTransformationsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFreezeTransformationsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFreezeTransformationsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performFreezeTransformations(0)")
	FreezeTransformations;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFreezeTransformationsOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("performFreezeTransformations 1")
		FreezeTransformationsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSnapPointToPointLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapPointToPointAnnot"))
	-image 		"pointToPoint.png"
	-category   ("Menu items.Common.Modify.Snap Align Objects")
	-command    ("snapPointToPoint(0)")
	SnapPointToPoint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSnapPointToPointOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Snap Align Objects")
		-command    ("performSnapPtToPt 1")
		SnapPointToPointOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kSnap2PointsTo2PointsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSnap2PointsTo2PointsAnnot"))
	-image  	"twoPointToPoint.png"
	-category   ("Menu items.Common.Modify.Snap Align Objects")
	-command    ("performSnap2PtTo2Pt 0")
	Snap2PointsTo2Points;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSnap2PointsTo2PointsOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Snap Align Objects")
		-command    ("performSnap2PtTo2Pt 1")
		Snap2PointsTo2PointsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSnap3PointsTo3PointsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSnap3PointsTo3PointsAnnot"))
	-image 		"threePointToPoint.png"
	-category   ("Menu items.Common.Modify.Snap Align Objects")
	-command    ("performSnap3PtTo3Pt 0")
	Snap3PointsTo3Points;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSnap3PointsTo3PointsOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Snap Align Objects")
		-command    ("performSnap3PtTo3Pt 1")
		Snap3PointsTo3PointsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAlignObjectsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignObjectsAnnot")) 
    -image 		"alignObjects.png"
	-category   ("Menu items.Common.Modify.Snap Align Objects")
	-command 	"performAlignObjects 0" 
	AlignObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPositionAlongCurveLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPositionAlongCurveAnnot"))
	-image 		"positionAlongCurve.png"
	-category   ("Menu items.Common.Modify.Snap Align Objects")
	-command "python \"import maya.app.general.positionAlongCurve\";python \"maya.app.general.positionAlongCurve.positionAlongCurve()\""
	PositionAlongCurve;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAlignToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignToolAnnot")) 
	-image "alignTool.png"
	-category   ("Menu items.Common.Modify")
	-command "setToolTo alignToolCtx"
	SetAlignTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSnapTogetherTool")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapTogetherToolAnnot")) 
	-image "snapTogetherTool.png"
	-category   ("Menu items.Common.Modify")
	-command "setToolTo snapTogetherToolCtx"
	SetSnapTogetherTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSnapTogetherToolOptionsAnnot")) 
		-category   ("Menu items.Common.Modify")
		-command "setToolTo snapTogetherToolCtx; toolPropertyWindow"
		SetSnapTogetherToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableAllLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableAllAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true all")
	EnableAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisableAllLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableAllAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems false all")
	DisableAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableIKSolversLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableIKSolversAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true iksolver")
	EnableIKSolvers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableConstraintsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableConstraintsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true constraint")
	EnableConstraints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableExpressionsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableExpressionsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true expression")
	EnableExpressions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableFluidsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableFluidsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true fluid")
	EnableFluids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableGlobalStitchLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableGlobalStitchAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true globalstitch")
	EnableGlobalStitch;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableNClothsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableNClothsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true nCloth")
	EnableNCloths;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableNparticlesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableNparticlesAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true nParticle")
	EnableNParticles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableNRigidsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableNRigidsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true nRigid")
	EnableNRigids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableDynamicConstraintsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableDynamicConstraintsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true dynamicConstraint")
	EnableDynamicConstraints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableNucleusesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableNucleusesAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true nucleus")
	EnableNucleuses;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableParticlesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableParticlesAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true particle")
	EnableParticles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableRigidBodiesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableRigidBodiesAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true rigidbody")
	EnableRigidBodies;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableSnapshotsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableSnapshotsAnnot"))
	-category   ("Menu items.Common.Modify.Evaluate Nodes")
	-command    ("doEnableNodeItems true snapshot")
	EnableSnapshots;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableIKSolversAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false iksolver")
	-showInHotkeyEditor false
	DisableIKSolvers;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableConstraintsAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false constraint")
	-showInHotkeyEditor false
	DisableConstraints;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableExpressionsAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false expression")
	-showInHotkeyEditor false
	DisableExpressions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableFluidsAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false fluid")
	-showInHotkeyEditor false
	DisableFluids;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableGlobalStitchAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false globalstitch")
	-showInHotkeyEditor false
	DisableGlobalStitch;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableParticlesAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false particle")
	-showInHotkeyEditor false
	DisableParticles;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableRigidBodiesAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false rigidbody")
	-showInHotkeyEditor false
	DisableRigidBodies;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableSnapshotsAnnot"))
	-category   ("Other items.Modify")
	-command    ("doEnableNodeItems false snapshot")
	-showInHotkeyEditor false
	DisableSnapshots;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMakeLiveLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeLiveAnnot"))
	-image 		"makeLive.png"
	-category   ("Menu items.Common.Modify")
	-command    ("makeLive")
	MakeLive;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCenterPivotLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCenterPivotAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("xform -cpc")
	CenterPivot;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMatchTransformLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchTransformAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performMatchTransform 0")
	MatchTransform;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchTransformOptionsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performMatchTransform 1")
	MatchTransformOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMatchTranslationLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchTranslationAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performMatchTranslate 0")
	MatchTranslation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchTranslationOptionsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performMatchTranslate 1")
	MatchTranslationOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMatchRotationLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchRotationAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performMatchRotate 0")
	MatchRotation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchRotationOptionsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performMatchRotate 1")
	MatchRotationOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMatchScalingLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchScalingAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performMatchScale 0")
	MatchScaling;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchScalingOptionsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performMatchScale 1")
	MatchScalingOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMatchPivotsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchPivotsAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performMatchPivots 0")
	MatchPivots;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchPivotsOptionsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performMatchPivots 1")
	MatchPivotsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBakePivotLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kBakePivotAnnot"))
	-category   ("Menu items.Command.Modify")
	-command    ("performBakeCustomToolPivot 0")
	BakeCustomPivot;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kBakePivotOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("performBakeCustomToolPivot 1")
		BakeCustomPivotOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPrefixHierarchyNamesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPrefixHierarchyNamesAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("prefixHierarchy")
	PrefixHierarchyNames;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSearchAndReplaceNamesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSearchAndReplaceNamesAnnot")) 
	-category   ("Menu items.Common.Modify")
	-command    ("performSearchReplaceNames 1")
	SearchAndReplaceNames;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAddAttributeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddAttributeAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("dynAddAttrWin( {} )")
	AddAttribute;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenameAttributeLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRenameAttributeAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("dynRenameAttrWin( {} )")
	RenameAttribute;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteAttributeLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteAttributeAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("dynDeleteAttrWin( {} )")
	DeleteAttribute;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertInstanceToObjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertInstanceToObjectAnnot"))
	-image 		"instanceToObject.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("convertInstanceToObject")
	ConvertInstanceToObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kReplaceObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceObjectsAnnot"))
	-category   ("Menu items.Common.Modify")
	-command    ("performReplaceObjects 0")
	ReplaceObjects;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kReplaceObjectsOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("performReplaceObjects 1")
		ReplaceObjectsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kScriptPaintToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kScriptPaintToolAnnot"))
	-image 		"userPaint.png" 
	-category   ("Menu items.Common.Modify")
	-command    ("artUserPaintToolScript 4")
	ScriptPaintTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kScriptPaintToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("artUserPaintToolScript 3")
		ScriptPaintToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSToPolygonsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSToPolygonsAnnot"))
	-image 		"nurbsToPolygons.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performnurbsToPoly 0")
	NURBSToPolygons;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kNURBSToPolygonsOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performnurbsToPoly 1")
		NURBSToPolygonsOptions;
	
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGeometryToBoundingBoxLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGeometryToBoundingBoxAnnot")) 
	-image 		"geometryToBoundingBox.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performGeomToBBox 0")
	GeometryToBoundingBox;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kGeometryToBoundingBoxOptionsAnnot")) 
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performGeomToBBox 1")
		GeometryToBoundingBoxOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMeshPreviewToPolyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMeshPreviewToPolyAnnot"))
	-image 		"meshToPolygons.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performSmoothMeshPreviewToPolygon")
	CreatePolyFromPreview;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMeshToCurveLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMeshToCurveAnnot"))
	-image 		"polyEdgeToCurves.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performPolyToCurve 0")
	CreateCurveFromPoly;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshToCurveOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performPolyToCurve 1")
		CreateCurveFromPolyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTypeToCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTypeToCurvesAnnot"))
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"convertTypeCapsToCurves"
	ConvertTypeCapsToCurves;

// General Attribute Paint Tool
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kArtPaintAttrToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintAttrToolAnnot"))
	-image 		"artAttr.png"
	-category   ("Menu items.Common.Modify")
	-command    ("artAttrToolScript 4 \"\"")
	ArtPaintAttrTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintAttrToolOptionsAnnot"))
		-category   ("Menu items.Common.Modify")
		-command    ("artAttrToolScript 3 \"\" ")
		ArtPaintAttrToolOptions;


//
//	Create menu.
//
// ----------------------------------------------------------------------

//	Create NURBS primitives.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsSphereLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsSphereAnnot"))
	-image      "sphere.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsSphere 0")
	CreateNURBSSphere;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsSphereOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsSphere 1")
		CreateNURBSSphereOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsCubeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCubeAnnot"))
	-image      "cube.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsCube 0")
	CreateNURBSCube;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCubeOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsCube 1")
		CreateNURBSCubeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsCylinderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCylinderAnnot"))
	-image      "cylinder.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsCylinder 0")
	CreateNURBSCylinder;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCylinderOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsCylinder 1")
		CreateNURBSCylinderOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsConeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsConeAnnot"))
	-image      "cone.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsCone 0")
	CreateNURBSCone;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsConeOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsCone 1")
		CreateNURBSConeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsPlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsPlaneAnnot"))
	-image      "plane.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsPlane 0")
	CreateNURBSPlane;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsPlaneOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsPlane 1")
		CreateNURBSPlaneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsTorusLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsTorusAnnot"))
	-image      "torus.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsTorus 0")
	CreateNURBSTorus;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsTorusOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsTorus 1")
		CreateNURBSTorusOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsCircleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCircleAnnot"))
	-image      "circle.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsCircle 0")
	CreateNURBSCircle;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsCircleOptionsAnnot"))

		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsCircle 1")
		CreateNURBSCircleOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNurbsSquareLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsSquareAnnot"))
	-image      "square.png"
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("performNurbsSquare 0")
	CreateNURBSSquare;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNurbsSquareOptionsAnnot"))
		-category   ("Menu items.Common.Create.NURBS Primitives")
		-command    ("performNurbsSquare 1")
		CreateNURBSSquareOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kToggleCreateNurbsPrimitivesAsToolLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleCreateNurbsPrimitivesAsToolAnnot"))
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("toggleCreateNurbsPrimitiveAsTool")
	ToggleCreateNurbsPrimitivesAsTool;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kToggleNurbsPrimitivesAsToolExitOnCompleteLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleNurbsPrimitivesAsToolExitOnCompleteAnnot"))
	-category   ("Menu items.Common.Create.NURBS Primitives")
	-command    ("toggleNurbsPrimitiveAsToolExitOnComplete")
	ToggleNurbsPrimitivesAsToolExitOnComplete;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kToggleCreatePolyPrimitivesAsToolLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleCreatePolyPrimitivesAsToolAnnot"))
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("toggleCreatePolyPrimitiveAsTool")
	ToggleCreatePolyPrimitivesAsTool;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kTogglePolyPrimitivesAsToolExitOnCompleteLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyPrimitivesAsToolExitOnCompleteAnnot"))
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("togglePolyPrimitiveAsToolExitOnComplete")
	TogglePolyPrimitivesAsToolExitOnComplete;

//	Create Polygon primitives.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolySphereLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolySphereAnnot"))
	-image      "polySphere.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Sphere 0")
	CreatePolygonSphere;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolySphereOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Sphere 1")
		CreatePolygonSphereOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyCubeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyCubeAnnot"))
	-image      "polyCube.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Cube 0")
	CreatePolygonCube;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyCubeOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Cube 1")
		CreatePolygonCubeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyCylinderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyCylinderAnnot"))
	-image      "polyCylinder.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Cylinder 0")
	CreatePolygonCylinder;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyCylinderOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Cylinder 1")
		CreatePolygonCylinderOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyConeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyConeAnnot"))
	-image      "polyCone.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Cone 0")
	CreatePolygonCone;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyConeOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Cone 1")
		CreatePolygonConeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyPlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPlaneAnnot"))
	-image      "polyMesh.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Plane 0")
	CreatePolygonPlane;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPlaneOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Plane 1")
		CreatePolygonPlaneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyTorusLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyTorusAnnot"))
	-image      "polyTorus.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Torus 0")
	CreatePolygonTorus;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyTorusOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Torus 1")
		CreatePolygonTorusOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyPrismLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPrismAnnot"))
	-image      "polyPrism.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Prism 0")
	CreatePolygonPrism;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPrismOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Prism 1")
		CreatePolygonPrismOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyPyramidLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPyramidAnnot"))
	-image      "polyPyramid.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Pyramid 0")
	CreatePolygonPyramid;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPyramidOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Pyramid 1")
		CreatePolygonPyramidOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyPipeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPipeAnnot"))
	-image      "polyPipe.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Pipe 0")
	CreatePolygonPipe;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPipeOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Pipe 1")
		CreatePolygonPipeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolySweep"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySweepAnnot"))
	-image      "shelf_sweepMeshFromCurve.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performSweepMesh 0")
	CreateSweepMesh;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSweepMeshOptionsAnnot"))
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performSweepMesh 1")
	CreateSweepMeshOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyTypeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyTypeAnnot"))
	-image 		"polyType.png"
	-plugin 	"Type"
	-category	("Menu items.Common.Create.Polygon Primitives")
	-command	("typeCreateText;")
	CreatePolygonType;

runTimeCommand -default true
	-label  	(uiRes("m_defaultRunTimeCommands.kCreatePolySVGLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolySVGAnnot"))
	-image 		"polySVG.png"
	-plugin 	"Type"
	-category	("Menu items.Common.Create.Polygon Primitives")
	-command	("svgCreateTool")
	CreatePolygonSVG;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTypeManipulatorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTypeManipulatorAnnot"))
	-image 		"TypeMoveTool.png"
	-category	("Menu items.Common.Modify.Transformation Tools")
	-command	("typeMoveTool;")
	EditPolygonType;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolyHelixLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyHelixAnnot"))
	-image      "polyHelix.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Helix 0")
	CreatePolygonHelix;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyHelixOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Helix 1")
		CreatePolygonHelixOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolySoccerBallLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolySoccerBallAnnot"))
	-image      "polySoccerBall.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive Misc 0")
	CreatePolygonSoccerBall;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolySoccerBallOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive Misc 1")
		CreatePolygonSoccerBallOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPlatonicSolidAnnot"))
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPrimitive PlatonicSolid 0")
	CreatePlatonicSolid;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolyPlatonicSolidOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPrimitive PlatonicSolid 1")
		CreatePlatonicSolidOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonPlatonicLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonPlatonicAnnot"))
	-image 		"polyPlatonicSolid.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyPlatonic 0")
	CreatePolygonPlatonic;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonPlatonicOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyPlatonic 1")
		CreatePolygonPlatonicOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonDiscLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonDiscAnnot"))
	-image 		"polyDisc.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyDisc 0")
	CreatePolygonDisc;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonDiscOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyDisc 1")
		CreatePolygonDiscOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonSuperEllipseLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonSuperEllipseAnnot"))
	-image 		"polySuperEllipse.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolySuperShape SuperEllipse 0")
	CreatePolygonSuperEllipse;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonSuperEllipseOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolySuperShape SuperEllipse 1")
		CreatePolygonSuperEllipseOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonSphericalHarmonicsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonSphericalHarmonicsAnnot"))
	-image 		"polySphericalHarmonics.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolySuperShape SphericalHarmonics 0")
	CreatePolygonSphericalHarmonics;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonSphericalHarmonicsOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolySuperShape SphericalHarmonics 1")
		CreatePolygonSphericalHarmonicsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonUltraShapeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonUltraShapeAnnot"))
	-image 		"polyUltraShape.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolySuperShape UltraShape 0")
	CreatePolygonUltraShape;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonSuperShapeOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolySuperShape UltraShape 1")
		CreatePolygonUltraShapeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePolygonCogLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonCogAnnot"))
	-image 		"polyGear.png"
	-category   ("Menu items.Common.Create.Polygon Primitives")
	-command    ("performPolyGear 0")
	CreatePolygonGear;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonCogOptionsAnnot"))
		-category   ("Menu items.Common.Create.Polygon Primitives")
		-command    ("performPolyGear 1")
		CreatePolygonGearOptions;


//	Create Subdiv primitives.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSudivSphere"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivSphereAnnot"))
	-image      "subdivSphere.png"
	-category   ("Other items.Create")
	-command    ("createSubdSphere")
	-showInHotkeyEditor false
	CreateSubdivSphere;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivCubeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivCubeAnnot"))
	-image      "subdivCube.png"
	-category   ("Other items.Create")
	-command    ("createSubdCube")
	-showInHotkeyEditor false
	CreateSubdivCube;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivCylinderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivCylinderAnnot"))
	-image      "subdivCylinder.png"
	-category   ("Other items.Create")
	-command    ("createSubdCylinder")
	-showInHotkeyEditor false
	CreateSubdivCylinder;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivConeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivConeAnnot"))
	-image      "subdivCone.png"
	-category   ("Other items.Create")
	-command    ("createSubdCone")
	-showInHotkeyEditor false
	CreateSubdivCone;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivPlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivPlaneAnnot"))
	-image      "subdivPlane.png"
	-category   ("Other items.Create")
	-command    ("createSubdPlane")
	-showInHotkeyEditor false
	CreateSubdivPlane;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivTorusLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivTorusAnnot"))
	-image      "subdivTorus.png"
	-category   ("Other items.Create")
	-command    ("createSubdTorus")
	-showInHotkeyEditor false
	CreateSubdivTorus;

//	Create Volume primitives.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateVolumeSphereLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateVolumeSphereAnnot"))
	-image      "volumeSphere.png"
	-category   ("Menu items.Common.Create.Volume Primitives")
	-command    ("createImplicitVolume sphere")
	CreateVolumeSphere;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateVolumeCubeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateVolumeCubeAnnot"))
	-image      "volumeCube.png"
	-category   ("Menu items.Common.Create.Volume Primitives")
	-command    ("createImplicitVolume cube")
	CreateVolumeCube;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateVolumeConeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateVolumeConeAnnot"))
	-image      "volumeCone.png"
	-category   ("Menu items.Common.Create.Volume Primitives")
	-command    ("createImplicitVolume cone")
	CreateVolumeCone;
    

//	Create lights.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAmbientLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAmbientLightAnnot"))
	-image      "ambientlight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performAmbientLight(0)")
	CreateAmbientLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAmbientLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performAmbientLight(1)")
		CreateAmbientLightOptions;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateDirectionalLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDirectionalLightAnnot"))
	-image      "directionallight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performDirectionalLight(0)")
	CreateDirectionalLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateDirectionalLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performDirectionalLight(1)")
		CreateDirectionalLightOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePointLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePointLightAnnot"))
	-image      "pointlight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performPointLight(0)")
	CreatePointLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePointLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performPointLight(1)")
		CreatePointLightOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSpotLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpotLightAnnot"))
	-image      "spotlight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performSpotLight(0)")
	CreateSpotLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpotLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performSpotLight(1)")
		CreateSpotLightOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAreaLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAreaLightAnnot"))
	-image      "arealight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performAreaLight(0)")
	CreateAreaLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAreaLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performAreaLight(1)")
		CreateAreaLightOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateVolumeLightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateVolumeLightAnnot"))
	-image      "volumelight.png"
	-category   ("Menu items.Common.Create.Lights")
	-command    ("performVolumeLight(0)")
	CreateVolumeLight;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateVolumeLightOptionsAnnot"))
		-category   ("Menu items.Common.Create.Lights")
		-command    ("performVolumeLight(1)")
		CreateVolumeLightOptions;

//	Create NURBS objects.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCurveCVToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveCVToolAnnot"))
	-image      "curveCV.png"
	-category   ("Menu items.Common.Create.Curve Tools")
	-command    ("curveCVToolScript 4")
	CVCurveTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveCVToolOptionsAnnot"))
		-category   ("Menu items.Common.Create.Curve Tools")
		-command    ("curveCVToolScript 3")
		CVCurveToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCurveEPToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveEPToolAnnot"))
	-image      "curveEP.png"
	-category   ("Menu items.Common.Create.Curve Tools")
	-command    ("curveEPToolScript 4")
	EPCurveTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveEPToolOptionsAnnot"))
		-category   ("Menu items.Common.Create.Curve Tools")
		-command    ("curveEPToolScript 3")
		EPCurveToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateBezierCurveToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateBezierCurveToolAnnot"))
	-image		"curveBezier.png"
	-category	("Menu items.Common.Create.Curve Tools")
	-command	("curveBezierToolScript 4")
	CreateBezierCurveTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateBezierCurveToolOptionsAnnot"))
		-category	("Menu items.Common.Create.Curve Tools")
		-command	("curveBezierToolScript 3")
		CreateBezierCurveToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCurveSketchToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveSketchToolAnnot"))
	-image      "pencil.png"
	-category   ("Menu items.Common.Create.Curve Tools")
	-command    ("curveSketchToolScript 4")
	PencilCurveTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurveSketchToolOptionsAnnot"))
		-category   ("Menu items.Common.Create.Curve Tools")
		-command    ("curveSketchToolScript 3")
		PencilCurveToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateTwoPointArcToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateTwoPointArcToolAnnot"))
	-image      "twoPointArc.png"
	-category   ("Menu items.Common.Create.Curve Tools")
	-command    ("twoPointArcToolScript 4")
	TwoPointArcTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateTwoPointArcToolOptionsAnnot"))
		-category   ("Menu items.Common.Create.Curve Tools")
		-command    ("twoPointArcToolScript 3")
		TwoPointArcToolOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kCreateThreePointArcToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateThreePointArcToolAnnot"))
	-image      "threePointArc.png"
	-category   ("Menu items.Common.Create.Curve Tools")
	-command    ("threePointArcToolScript 4")
	ThreePointArcTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateThreePointArcToolOptionsAnnot"))
		-category   ("Menu items.Common.Create.Curve Tools")
		-command    ("threePointArcToolScript 3")
		ThreePointArcToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateDistanceBetweenTwoPointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDistanceBetweenTwoPointsAnnot"))
	-image      "distanceDim.png"
	-category   ("Menu items.Common.Create.Measure Tools")
	-command    ("setToolTo distanceDimContext")
	DistanceTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateDisplayCurveSurfaceParameterPointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDisplayCurveSurfaceParameterPointsAnnot"))
	-image      "paramDim.png"
	-category   ("Menu items.Common.Create.Measure Tools")
	-command    ("setToolTo paramDimContext")
	ParameterTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCurvePointDistanceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCurvePointDistanceAnnot"))
	-image      "arcLengthDim.png"
	-category   ("Menu items.Common.Create.Measure Tools")
	-command    ("setToolTo arcLenDimContext")
	ArcLengthTool;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateClosestPointOnLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateClosestPointOnAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreateClosestPointOnLongAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performClosestPointOn 0")
	ClosestPointOn;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateClosestPointOnOptions"))
		-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
		-command    ("performClosestPointOn 1")
		ClosestPointOnOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAnnotationLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAnnotationAnnot"))
	-image      "annotation.png"
	-category   ("Menu items.Common.Create")
	-command    ("annotateNode")
	CreateAnnotateNode;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAdobeCurvesSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAdobeCurvesSurfacesAnnot"))
	-image      "aiObject.png"
	-category   ("Menu items.Common.Create")
	-command    ("performCreateIllustratorCurves 0")
	CreateIllustratorCurves;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAdobeCurveSurfaceOptionsAnnot"))
		-category   ("Menu items.Common.Create")
		-command    ("performCreateIllustratorCurves 1")
		CreateIllustratorCurvesOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kCreateTextLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateTextAnnot"))
	-image      "text.png"
	-category   ("Menu items.Common.Create")
	-command    ("createPrimitive text")
	CreateText;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateTextOptionsAnnot"))
		-category   ("Menu items.Common.Create")
		-command    ("performtextCurves 1")
		CreateTextOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateConstructionPlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstructionPlaneAnnot"))
	-image      "sketchPlane.png"
	-category   ("Menu items.Common.Create")
	-command    ("performCreateConstructionPlane(0)")
	CreateConstructionPlane;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstructionPlaneOptionsAnnot"))
		-category   ("Menu items.Common.Create")
		-command    ("performCreateConstructionPlane 1")
		CreateConstructionPlaneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateImagePlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateImagePlaneAnnot"))
	-category   ("Menu items.Common.Create")
	-command    ("performCreateImagePlane 0")
	CreateImagePlane;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateImagePlaneOptionsAnnot"))
		-category   ("Menu items.Common.Create")
		-command    ("performCreateImagePlane 1")
		CreateImagePlaneOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateLocatorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateLocatorAnnot"))
	-image      "locator.png"
	-category   ("Menu items.Common.Create")
	-command    ("createPrimitive nullObject")
	CreateLocator;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCameraAnnot"))
	-image      "view.png"
	-category   ("Menu items.Common.Create.Cameras")
	-command    ("performCameraOnly false")
	CreateCameraOnly;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateCameraOptionsAnnot"))
		-category   ("Menu items.Common.Create.Cameras")
		-command    ("performCameraOnly true")
		CreateCameraOnlyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateAimCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAimCameraAnnot"))
	-image      "cameraAim.png"
	-category   ("Menu items.Common.Create.Cameras")
	-command    ("performCameraAim false")
	CreateCameraAim;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAimCameraOptionsAnnot"))
		-category   ("Menu items.Common.Create.Cameras")
		-command    ("performCameraAim true")
		CreateCameraAimOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kCreateAimUpCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateAimUpCameraAnnot"))
	-image      "cameraAimUp.png"
	-category   ("Menu items.Common.Create.Cameras")
	-command    ("performCameraAimUp false")
	CreateCameraAimUp;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateAimUpCameraOptionsAnnot"))
		-category   ("Menu items.Common.Create.Cameras")
		-command    ("performCameraAimUp true")
		CreateCameraAimUpOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateQuickSelectSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateQuickSelectSetAnnot"))
	-category   ("Menu items.Common.Create.Sets")
	-command    ("defineCharacter")
	CreateQuickSelectSet;

//
//	Display menu.
//
// ----------------------------------------------------------------------

//	Grid and Heads Up Display options.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleGridLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleGridAnnot"))
	-category   ("Menu items.Common.Display")
	-command    ("optionVar -intValue showGrid (!`optionVar -query showGrid`); grid -toggle (`optionVar -query showGrid`);")
	ToggleGrid;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kGridOptionsAnnot"))
		-category   ("Menu items.Common.Display")
		-command    ("performGridOptions 1")
		GridOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleObjectDetailsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleObjectDetailsAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setObjectDetailsVisibility(!`optionVar -q objectDetailsVisibility`);")
	ToggleObjectDetails;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyCountLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kTogglePolyCountAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setPolyCountVisibility(!`optionVar -q polyCountVisibility`);")
	TogglePolyCount;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleParticleCountLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kToggleParticleCountAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setParticleCountVisibility(!`optionVar -q particleCountVisibility`);")
	ToggleParticleCount;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSubdDetailsLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kToggleSubdDetailsAnnot"))
	-category	("Other items.Display")
	-command	("setSubdDetailsVisibility(!`optionVar -q subdDetailsVisibility`);")
	-showInHotkeyEditor false
	ToggleSubdDetails;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleViewportRendererLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleViewportRendererAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setViewportRendererVisibility(!`optionVar -q viewportRendererVisibility`);")
	ToggleViewportRenderer;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kInViewMessagingLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInViewMessagingAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command 	"optionVar -iv inViewMessageEnable (!`optionVar -q inViewMessageEnable`)"
	ToggleInViewMessage;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kInViewEditorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInViewEditorAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command 	"optionVar -iv inViewEditorVisible (!`optionVar -q inViewEditorVisible`)"
	ToggleInViewEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSymmetryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetryAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setSymmetryVisibility(!`optionVar -q symmetryVisibility`);")
	ToggleSymmetryDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCapsLockWarnLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCapsLockWarnAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setCapsLockVisibility(!`optionVar -q capsLockVisibility`);")
	ToggleCapsLockDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCameraNamesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCameraNamesAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setCameraNamesVisibility(!`optionVar -q cameraNamesVisibility`);")
	ToggleCameraNames;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleFocalLengthLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFocalLengthAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setFocalLengthVisibility(!`optionVar -q focalLengthVisibility`);")
	ToggleFocalLength;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleFrameRateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFrameRateAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setFrameRateVisibility(!`optionVar -q frameRateVisibility`);")
	ToggleFrameRate;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCurrentFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCurrentFrameAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setCurrentFrameVisibility(!`optionVar -q currentFrameVisibility`);")
	ToggleCurrentFrame;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEMModeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEMModeAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("ToggleEvaluationManagerHUDVisibility")
	ToggleEvaluationManagerVisibility;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMLModeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMLModeAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("ToggleMaterialLoadingDetailsHUDVisibility(!`optionVar -q materialLoadingDetailsVisibility`);")
	ToggleMaterialLoadingDetailsVisibility;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSceneTimeCodeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSceneTimeCodeAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setSceneTimecodeVisibility(!`optionVar -q sceneTimecodeVisibility`);")
	ToggleSceneTimecode;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCurrentAssetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCurrentAssetAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setCurrentContainerVisibility(!`optionVar -q currentContainerVisibility`);")
	ToggleCurrentContainerHud;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleViewAxisLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kToggleViewAxisAnnot"))
	-category	("Menu items.Common.Display.Heads Up Display")
	-command	("setViewAxisVisibility(!`optionVar -q viewAxisVisibility`);")
	ToggleViewAxis;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleOriginAxisLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleOriginAxisAnnot"))
	-category   ("Menu items.Common.Display.Heads Up Display")
	-command    ("toggleAxis -o (!`toggleAxis -q -o`);")
	ToggleOriginAxis;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleAnimationDetailsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAnimationDetailsAnnot"))
	-category   ("Menu items.Common.Display.Heads Up Display")
	-command    ("setAnimationDetailsVisibility(!`optionVar -q animationDetailsVisibility`);")
	ToggleAnimationDetails;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleHikDetailsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHikDetailsAnnot"))
	-category   ("Menu items.Common.Display.Heads Up Display")
	-command    ("setHikDetailsVisibility(!`optionVar -q hikDetailsVisibility`);")
	ToggleHikDetails;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleGradientDislpay"))
	-category   ("Other items.Miscellaneous")
	-command	("displayPref -displayGradient (!`displayPref -q -displayGradient `);")
	ToggleDisplayGradient;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCycleBackgroundColorAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("cycleBackgroundColor;")
	CycleBackgroundColor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSelectDetailsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSelectDetailsAnnot"))
	-category   ("Menu items.Common.Display.Heads Up Display")
	-command    ("setSelectDetailsVisibility(!`optionVar -q selectDetailsVisibility`);")
	ToggleSelectDetails;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleViewCubeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleViewCubeAnnot"))
	-category   ("Menu items.Common.Display.Heads Up Display")
	-command    ("viewManip -v (! `viewManip -q -v`);")
	ToggleViewCube;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivatePanZoom"))
	-category   ("Other items.Viewport items")
	-command    ("activatePanZoom;")
	TogglePanZoomPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivatePanZoom"))
	-category   ("Other items.Viewport items")
	-command    ("deactivatePanZoom;")
	TogglePanZoomRelease;

//	UI Elements.
//
runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Status Line"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleStatusLineAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Status Line\"; " +
	             "updateMainWindowComponentState()")
	ToggleStatusLine;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Shelf"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSelfAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Shelf\"; changeToolIcon; " +
	             "updateMainWindowComponentState()")
	ToggleShelf;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Time Slider"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleTimeSliderAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Time Slider\"; " +
	             "updateMainWindowComponentState()")
	ToggleTimeSlider;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Range Slider"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleRangeSliderAnnot"))
	-category   ("Menu items.Common.Display.UI Elements;Menu items.Animation.Playback")
	-command	("toggleUIComponentVisibility \"Range Slider\"; " +
	             "updateMainWindowComponentState()")
	ToggleRangeSlider;

runTimeCommand -default true
    -label 		(localizedUIComponentLabel("Command Line"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCommandLineAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Command Line\"; " +
	             "updateMainWindowComponentState()")
	ToggleCommandLine;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Help Line"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHelpLineAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Help Line\"; " +
	             "updateMainWindowComponentState()")
	ToggleHelpLine;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Tool Box"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleToolboxAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Tool Box\"; " +
	             "updateMainWindowComponentState()")
	ToggleToolbox;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleModelingToolkitLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleModelingToolkitAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kToggleModelingToolkitLongAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command	("MTtoggleCmd; MTsetToggleMenuItem;")
	ToggleModelingToolkit;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Attribute Editor"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAttributeEditorAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Attribute Editor\"; ")
	ToggleAttributeEditor;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleOutlinerAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("toggleUIComponentVisibility \"Outliner\"; " +
	             "updateDefaultOutlinerState()")
	ToggleOutliner;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Tool Settings"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleToolSettingsAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("if (`isUIComponentVisible(\"Tool Settings\")`) {\r\n\ttoggleUIComponentVisibility(\"Tool Settings\");\r\n} else {\r\n\ttoolPropertyWindow -inMainWindow true;\r\n}\r\n; ")
	ToggleToolSettings;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleChannelBoxLayerEditorAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("if (`isUIComponentVisible(\"Channel Box / Layer Editor\")`) {\r\n\ttoggleUIComponentVisibility(\"Channel Box / Layer Editor\");\r\n} else {\r\n\tsetChannelsLayersVisible( true );\r\n}\r\n; ")
	ToggleChannelsLayers;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Channel Box"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleChannelBoxAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("if (`isUIComponentVisible(\"Channel Box\")`) {\r\n\ttoggleUIComponentVisibility(\"Channel Box\");\r\n} else {\r\n\tsetChannelsVisible( true );;\r\n}\r\n; ")
	ToggleChannelBox;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Layer Editor"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleLayerEditorAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command	("if (`isUIComponentVisible(\"Layer Editor\")`) {\r\n\ttoggleUIComponentVisibility(\"Layer Editor\");\r\n} else {\r\n\tsetLayersVisible( true );\r\n}\r\n; ")
	ToggleLayerBar;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisplayViewportLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kDisplayViewportAnnot"))
	-category	("Menu items.Common.Display.UI Elements")
	-command	("{global string $gViewportWorkspaceControl; setUIComponentVisibility($gViewportWorkspaceControl, true);}" +
				"updateMainWindowComponentState()")
	DisplayViewport;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleHideUIElementsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHideUIElementsAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command    ("setAllMainWindowComponentsVisible 0")
	HideUIElements;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowUIElementsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowUIElementsAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command    ("setAllMainWindowComponentsVisible 1")
	ShowUIElements;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUIElementsAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("toggleMainWindowComponents")
	ToggleUIElements;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFullScreenModeAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("toggleMainWindowFullScreenMode")
	ToggleFullScreenMode;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kZoomInModeAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("toggleMainWindowZoomInMode")
	ToggleZoomInMode;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRestoreUIElementsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRestoreUIElementsAnnot"))
	-category   ("Menu items.Common.Display.UI Elements")
	-command    ("restoreMainWindowComponents")
	RestoreUIElements;

//	Hide.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideSelectedObjectsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHideSelectedObjectsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("doHideObjects true")
	HideSelectedObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideUnselectedObjectsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHideUnselectedObjectsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("doHideObjects false")
	HideUnselectedObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideUnselectedCVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideUnselectedCVsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("selectiveCvsDisplay 1")
	HideUnselectedCVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideAllLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideAllAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideKeepSelection `ls -dag` 0")
	HideAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideControllerSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideControllerSurfacesAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -controllers -hide")
	HideControllers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideGeometryAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -geometry -hide")
	HideGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNURBSSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNURBSSurfacesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -nurbsSurfaces -hide")
	HideNURBSSurfaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNURBSCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNURBSCurvesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -nurbsCurves -hide")
	HideNURBSCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHidePolygonSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHidePolygonSurfacesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -polySurfaces -hide")
	HidePolygonSurfaces;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideDeformingGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideDeformingGeometryAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShowDeformingGeom hide")
	HideDeformingGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideSubdivSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideSubdivSurfacesAnnot"))
	-category   ("Other items.Display")
	-command    ("hideShow -subdiv -hide")
	-showInHotkeyEditor false
	HideSubdivSurfaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideStrokesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideStrokesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -strokes -hide")
	HideStrokes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideStrokePathCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideStrokePathCurvesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -strokeCurves -hide")
	HideStrokePathCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideStrokeControlCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideStrokeControlCurvesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Geometry")
	-command    ("hideShow -strokeControlCurves -hide")
	HideStrokeControlCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideKinematicsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideKinematicsAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Kinematics")
	-command    ("hideShow -kinematics -hide")
	HideKinematics;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideJointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideJointsAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Kinematics")
	-command    ("hideShow -joints -hide")
	HideJoints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideIKHandlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideIKHandlesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Kinematics")
	-command    ("hideShow -ikHandles -hide")
	HideIKHandles;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideLatticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideLatticesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -lattices -hide")
	HideLattices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideClustersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideClustersAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -clusters -hide")
	HideClusters;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideWrapInfluencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideWrapInfluencesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -wraps -hide")
	HideWrapInfluences;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideDeformersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideDeformersAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -deformers -hide")
	HideDeformers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideSculptObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideSculptObjectsAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -sculptObjects -hide")
	HideSculptObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideSmoothSkinInfluencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideSmoothSkinInfluencesAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -skinClusters -hide")
	HideSmoothSkinInfluences;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNonlinearsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNonlinearsAnnot"))
	-category   ("Menu items.Common.Display.Hide.Hide Deformers")
	-command    ("hideShow -nonlinears -hide")
	HideNonlinears;
    
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideFluidsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideFluidsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -fluids -hide")
	HideFluids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideHairSystemsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideHairSystemsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -hairSystems -hide")
	HideHairSystems;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideFolliclesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideFolliclesAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -follicles -hide")
	HideFollicles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideFurLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideFurAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -fur -hide")
	HideFur;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNClothsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNClothsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -nCloth -hide")
	HideNCloths;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNParticlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNParticlesAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -nParticle -hide")
	HideNParticles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideNRigidsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideNRigidsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -nRigid -hide")
	HideNRigids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideDynamicConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideDynamicConstraintsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -dynamicConstraint -hide")
	HideDynamicConstraints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideLightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideLightsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -lights -hide")
	HideLights;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideCamerasLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideCamerasAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -cameras -hide")
	HideCameras;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideTexturePlacementsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideTexturePlacementsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -place3dTexture -hide")
	HideTexturePlacements;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHidePlanesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHidePlanesAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -planes -hide")
	HidePlanes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideMarkersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideMarkersAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("hideShow -posMarker -hide")
	HideMarkers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideLightManipulatorsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideLightManipulatorsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("renderManip -lt false false false; " +
		         "renderManip -slt false false false false false false false")
	HideLightManipulators;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideCameraManipulatorsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideCameraManipulatorsAnnot"))
	-category   ("Menu items.Common.Display.Hide")
	-command    ("renderManip -camera false false false false false")
	HideCameraManipulators;

//	Show.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowSelectedObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowSelectedObjectsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("evalEcho \"showHidden -a\"")
	ShowSelectedObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowLastHiddenLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowLastHiddenAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showLastHidden")
	ShowLastHidden;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowSurfaceCVsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowSurfaceCVsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("selectiveCvsDisplay 0")
	ShowSurfaceCVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowAllPolyComponentsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllPolyComponentsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showAllComponents")
	ShowAllPolyComponents;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowAllLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("evalEcho \"showHidden -all\"")
	ShowAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowControllersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowControllersAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -controllers -show")
	ShowControllers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowGeometryAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -geometry -show")
	ShowGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNURBSSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNURBSSurfacesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -nurbsSurfaces -show")
	ShowNURBSSurfaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNURBSCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNURBSCurvesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -nurbsCurves -show")
	ShowNURBSCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowPolygonSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowPolygonSurfacesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -polySurfaces -show")
	ShowPolygonSurfaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowDeformingGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowDeformingGeometryAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShowDeformingGeom show")
	ShowDeformingGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowSubdivSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowSubdivSurfacesAnnot"))
	-category   ("Other items.Display")
	-command    ("hideShow -subdiv -show")
	-showInHotkeyEditor false
	ShowSubdivSurfaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowStrokesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowStrokesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -strokes -show")
	ShowStrokes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowStrokePathCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowStrokePathCurvesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -strokeCurves -show")
	ShowStrokePathCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowStrokeControlCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowStrokeControlCurvesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Geometry")
	-command    ("hideShow -strokeControlCurves -show")
	ShowStrokeControlCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowKinematicsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowKinematicsAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Kinematics")
	-command    ("hideShow -kinematics -show")
	ShowKinematics;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowJointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowJointsAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Kinematics")
	-command    ("hideShow -joints -show")
	ShowJoints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowIKHandlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowIKHandlesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Kinematics")
	-command    ("hideShow -ikHandles -show")
	ShowIKHandles;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowLatticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowLatticesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -lattices -show")
	ShowLattices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowClustersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowClustersAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -clusters -show")
	ShowClusters;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowWrapInfluencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowWrapInfluencesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -wraps -show")
	ShowWrapInfluences;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowDeformersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowDeformersAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -deformers -show")
	ShowDeformers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowSculptObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowSculptObjectsAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -sculptObjects -show")
	ShowSculptObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowSmoothSkinInfluencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowSmoothSkinInfluencesAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -skinClusters -show")
	ShowSmoothSkinInfluences;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNonLinearsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNonlinearsAnnot"))
	-category   ("Menu items.Common.Display.Show.Show Deformers")
	-command    ("hideShow -nonlinears -show")
	ShowNonlinears;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowFluidsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowFluidsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -fluids -show")
	ShowFluids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowHairSystemsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowHairSystemsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -hairSystems -show")
	ShowHairSystems;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowFolliclesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowFolliclesAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -follicles -show")
	ShowFollicles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowFurLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowFurAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -fur -show")
	ShowFur;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNClothsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNClothsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -nCloth -show")
	ShowNCloths;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNParticlesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNParticlesAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -nParticle -show")
	ShowNParticles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowNRigidsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowNRigidsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -nRigid -show")
	ShowNRigids;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowDynamicConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowDynamicConstraintsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -dynamicConstraint -show")
	ShowDynamicConstraints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowLightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowLightsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showHidden -a `ls -lights`")
	ShowLights;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowCamerasLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowCamerasAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showHidden -a `ls -ap -cameras`")
	ShowCameras;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowTexturePlacementsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowTexturePlacementsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showHidden -a `ls -type place3dTexture`")
	ShowTexturePlacements;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowPlanesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowPlanesAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("showHidden -a `ls -planes`")
	ShowPlanes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowMarkersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowMarkersAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("hideShow -posMarker -show")
	ShowMarkers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowLightManipulatorsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowLightManipulatorsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("renderManip -lt true true true; renderManip -slt true true true true true true true")
	ShowLightManipulators;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowCameraManipulatorsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowCameraManipulatorsAnnot"))
	-category   ("Menu items.Common.Display.Show")
	-command    ("renderManip -cam true true true true true")
	ShowCameraManipulators;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kWireframeColorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWireframeColorAnnot"))
	-category   ("Menu items.Common.Display")
	-command 	"objectColorPalette ()"
	SetWireframeColor;

//  Display->Per Camera Visibility
//
runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kExclusiveToCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExclusiveToCameraAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 0" 
	SetExclusiveToCamera;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kHiddenFromCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHiddenFromCameraAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 1" 
	SetHiddenFromCamera;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kRemoveFromExclusiveLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveFromExclusiveAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 2" 
	CameraRemoveFromExclusive;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kRemoveFromHiddenLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveFromHiddenAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 3" 
	CameraRemoveFromHidden;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kRemoveAllForCameraLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveAllForCameraAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 4" 
	CameraRemoveAll;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kRemoveAllLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveAllAnnot"))
	-category   ("Menu items.Common.Display.Per Camera Visibility")
	-command 	"doPerCameraVisibility 5" 
	CameraRemoveAllForAll;

//	Object Display.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTemplateObjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTemplateObjectAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("toggle -state on -template")
	TemplateObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUntemplateObjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUntemplateObjectAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("toggle -state off -template")
	UntemplateObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowBoundingBoxLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowBoundingBoxAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("boundingBoxDisplayCtrl 1 \"\"")
	ShowBoundingBox;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideBoundingBoxLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideBoundingBoxAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("boundingBoxDisplayCtrl 0 \"\"")
	HideBoundingBox;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowObjectGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowObjectGeometryAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("toggle -state on -geometry")
	ShowObjectGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHideObjectGeometryLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kHideObjectGeometryAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command    ("toggle -state off -geometry")
	HideObjectGeometry;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kIgnoreHardwareShaderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kIgnoreHardwareShaderAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command 	"ignoreHardwareShader 1"
	IgnoreHardwareShader;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kUseHardwareShaderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUseHardwareShaderAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command 	"ignoreHardwareShader 0"
	UseHardwareShader;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kFastInteractionLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFastInteractionAnnot"))
	-category   ("Menu items.Common.Display.Object Display")
	-command 	"doFastInteractionItem (!`displayLevelOfDetail -q -lod`)" 
	ToggleFastInteraction;

//	Component Display.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleBackfaceGeometryLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleBackfaceGeometryAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"culling\")")
	ToggleBackfaceGeometry;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleFaceNormalDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFaceNormalDisplayAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"fNormal\")")
	ToggleFaceNormalDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleVertexNormalDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVertexNormalDisplayAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"vNormal\")")
	ToggleVertexNormalDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kChangeNormalSizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kChangeNormalSizeAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"normalSize\")")
	ChangeNormalSize;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleTangentDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleTangentDisplayAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"tangent\")")
	ToggleTangentDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayEdgesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"dispEdge\")")
	TogglePolyDisplayEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyDisplaySoftEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyDisplaySoftEdgesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"dispSoftEdge\")")
	TogglePolyDisplaySoftEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayHardEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayHardEdgesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"dispHardEdge\")")
	TogglePolyDisplayHardEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayHardEdgesColorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayHardEdgesColorAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"dispHardEdgeColor\")")
	TogglePolyDisplayHardEdgesColor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleLatticePointsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleLatticePointsAnnot"))
	-category   ("Menu items.Common.Display.Animation")
	-command    ("toggle -latticePoint")
	ToggleLatticePoints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleLatticeShapeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleLatticeShapeAnnot"))
	-category   ("Menu items.Common.Display.Animation")
	-command    ("toggle -latticeShape")
	ToggleLatticeShape;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kAnimJointSizeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimJointSizeAnnot")) 
	-category   ("Menu items.Common.Display.Animation")
	-command 	"jdsWin" 
	JdsWin;


runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kAnimIKFKJointSizeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimIKFKJointSizeAnnot")) 
	-category   ("Menu items.Common.Display.Animation")
	-command 	"ikfkjdsWin" 
	IkfkjdsWin;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kAnimIKHandleSizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimIKHandleSizeAnnot"))
	-category   ("Menu items.Common.Display.Animation")
	-command 	"ikHdsWin" 
	IkHdsWin;



runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kAnimJointLabelsLbl")) 
    -annotation (uiRes("m_defaultRunTimeCommands.kAnimJointLabelsAnnot"))
    -category   ("Menu items.Common.Display.Animation")
    -command 	"displayJointLabels 2" 
    ToggleJointLabels;


	
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintEffectMeshDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectMeshDisplayAnnot")) 
	-category   ("Menu items.Common.Display.Rendering")
	-command 	"TogglePaintEffectsMeshDisplay" 
	ToggleEffectsMeshDisplay;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleLocalRotationAxesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleLocalRotationAxesAnnot"))
	-category   ("Menu items.Common.Display.Transform Display")
	-command    ("toggle -localAxis")
	ToggleLocalRotationAxes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleRotationPivotsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleRotationPivotsAnnot"))
	-category   ("Menu items.Common.Display.Transform Display")
	-command    ("toggle -rotatePivot")
	ToggleRotationPivots;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleScalePivotsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleScalePivotsAnnot"))
	-category   ("Menu items.Common.Display.Transform Display")
	-command    ("toggle -scalePivot")
	ToggleScalePivots;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSelectionHandlesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSelectionHandlesAnnot"))
	-category   ("Menu items.Common.Display.Transform Display")
	-command    ("toggle -selectHandle")
	ToggleSelectionHandles;

//	NURBS Components.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCVsAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -controlVertex")
	ToggleCVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleEditPointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleEditPointsAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -editPoint")
	ToggleEditPoints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleHullsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHullsAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -hull")
	ToggleHulls;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleNormalsAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -normal")
	ToggleNormals;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSurfaceFaceCentersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSurfaceFaceCentersAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -surfaceFace")
	ToggleSurfaceFaceCenters;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleSurfaceOriginLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSurfaceOriginAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("toggle -origin")
	ToggleSurfaceOrigin;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCustomNURBSComponentsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCustomNURBSComponentsAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplayControl 0")
	ToggleCustomNURBSComponents;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCustomNURBSComponentsOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplayControl 1")
		CustomNURBSComponentsOptions;

//	NURBS Smoothness.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessHullLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessHullAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplaySmoothnessHull 0")
	NURBSSmoothnessHull;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessHullOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplaySmoothnessHull 1")
		NURBSSmoothnessHullOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessRoughLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessRoughAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplaySmoothnessRough 0")
	NURBSSmoothnessRough;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessRoughOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplaySmoothnessRough 1")
		NURBSSmoothnessRoughOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessMediumLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessMediumAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplaySmoothnessMedium 0")
	NURBSSmoothnessMedium;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessMediumOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplaySmoothnessMedium 1")
		NURBSSmoothnessMediumOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessFineLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessFineAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplaySmoothnessFine 0")
	NURBSSmoothnessFine;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kNURBSSmoothnessFineOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplaySmoothnessFine 1")
		NURBSSmoothnessFineOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCustomNURBSSmoothnessLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCustomNURBSSmoothnessAnnot"))
	-category   ("Menu items.Common.Display.NURBS")
	-command    ("performDisplaySmoothnessCustom 0")
	CustomNURBSSmoothness;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCustomNURBSSmoothnessOptionsAnnot"))
		-category   ("Menu items.Common.Display.NURBS")
		-command    ("performDisplaySmoothnessCustom 1")
		CustomNURBSSmoothnessOptions;

//	Polygon Components.
//

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayLimitToSelectedLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyDisplayLimitToSelectedAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command	("setPolyDisplayLimitedToSelected;")
	TogglePolyDisplayLimitToSelected;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleVertexBackCullingLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVertexBackCullingAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Culling Options")
	-command	("setPolygonDisplaySettings(\"vertexCulling\");")
	ToggleCullingVertices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kChangeVertexSizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kChangeVertexSizeAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"vertexSize\")")
	ChangeVertexSize;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleWireBackCullingLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleWireBackCullingAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Culling Options")
	-command	("setPolygonDisplaySettings(\"keepWire\");")
	ToggleKeepWireCulling;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleHardEdgeBackCullingLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHardEdgeBackCullingAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Culling Options")
	-command	("setPolygonDisplaySettings(\"keepHardEdge\");")
	ToggleKeepHardEdgeCulling;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyDisplayResetAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"reset\")")
	PolyDisplayReset;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleVerticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVerticesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"verts\")")
	ToggleVertices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleBorderEdgesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleBorderEdgesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"borderEdge\")")
	ToggleBorderEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCreasesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCreasesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"creaseEdge\")")
	ToggleCreaseEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleHoleFacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleHoleFacesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"invisibleFaces\")")
	ToggleHoleFaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCreaseVertexLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCreaseVertexAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"creaseVertex\")")
	ToggleCreaseVertices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleTextureBorderEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleTextureBorderEdgesAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"textBorderEdge\")")
	ToggleTextureBorderEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kChangeEdgeWidthLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kChangeEdgeWidthAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"edgeWidth\")")
	ChangeEdgeWidth;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSoftEdgesAnnot"))
	-category   ("Other items.Display")
	-command    ("int $cond[1]=`polyOptions -q -ae`; " +
	             "if ($cond[0]) polyOptions -se; else polyOptions -ae;")
	-showInHotkeyEditor false
	ToggleSoftEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolygonFaceCentersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolygonFaceCentersAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"faceCenter\")")
	TogglePolygonFaceCenters;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolygonFaceTrianglesAnnot"))
	-category   ("Other items.Display")
	-command    ("setPolygonDisplaySettings(\"faceTriangles\")")
	-showInHotkeyEditor false
	TogglePolygonFaceTriangles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolygonFaceTrianglesDisplayLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kTogglePolygonFaceTrianglesDisplayAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("TogglePolygonFaceTriangles       polyOptions -r -dt 1")
	TogglePolygonFaceTrianglesDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTogglePolyNonPlanarLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePolyNonPlanarAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"nonPlanar\")")
	TogglePolyNonPlanarFaceDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleUVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUVsAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"UVs\")")
	ToggleUVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleUnsharedUVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUnsharedUVsAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"unsharedUVs\")")
	ToggleUnsharedUVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kChangeUVSizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kChangeUVSizeAnnot"))
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("setPolygonDisplaySettings(\"uvSize\")")
	ChangeUVSize;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kResetDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kResetDisplayAnnot"))
	-image 		"commandButton.png" 
	-category   ("Menu items.Common.Display.Polygons")
	-command    ("PolyDisplayReset")
	ResetDisplay;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowMetadataLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowMetadataAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Metadata")
	-command    ("toggleMetadata;")
	ToggleMetadata;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleVertIDsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVertIDsAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Component IDs")
	-command    ("setPolygonDisplaySettings(\"vertIDs\")")
	ToggleVertIDs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleEdgeIDsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleEdgeIDsAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Component IDs")
	-command    ("setPolygonDisplaySettings(\"edgeIDs\")")
	ToggleEdgeIDs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleFaceIDsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFaceIDsAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Component IDs")
	-command    ("setPolygonDisplaySettings(\"faceIDs\")")
	ToggleFaceIDs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleCompIDsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleCompIDsAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Component IDs")
	-command    ("setPolygonDisplaySettings(\"compIDs\")")
	ToggleCompIDs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFaceNormalsAnnot"))
	-category   ("Other items.Display")
	-command    ("polyOptions -r -dn true -facet")
	-showInHotkeyEditor false
	ToggleFaceNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVertMetadataAnnot"))
	-category   ("Other items.Display")
	-command    ("setPolygonDisplaySettings(\"vertMetadata\")")
	-showInHotkeyEditor false
	ToggleVertMetadata;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleEdgeMetadataAnnot"))
	-category   ("Other items.Display")
	-command    ("setPolygonDisplaySettings(\"edgeMetadata\")")
	-showInHotkeyEditor false
	ToggleEdgeMetadata;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleFaceMetadataAnnot"))
	-category   ("Other items.Display")
	-command    ("setPolygonDisplaySettings(\"faceMetadata\")")
	-showInHotkeyEditor false
	ToggleFaceMetadata;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLongPolygonNormalsAnnot"))
	-category   ("Other items.Display")
	-command    ("setNormalsSize 1.0")
	-showInHotkeyEditor false
	LongPolygonNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMediumPolygonNormalsAnnot"))
	-category   ("Other items.Display")
	-command    ("setNormalsSize .4")
	-showInHotkeyEditor false
	MediumPolygonNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShortPolygonNormalsAnnot"))
	-category   ("Other items.Display")
	-command    ("setNormalsSize .16")
	-showInHotkeyEditor false
	ShortPolygonNormals;

//	Visualize metadata option box
//	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kVisualizeMetadataOptionsAnnot"))
	-category   ("Menu items.Common.Display.Polygons.Metadata")
	-command    ("performVisualizeMetadataOptions 1")
	VisualizeMetadataOptions;	

//	Custom Polygon Display.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCustomPolygonDisplayLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCustomPolygonDisplayAnnot"))
	-category   ("Other items.Display")
	-command    ("polysDisplaySetup 0")
	-showInHotkeyEditor false
	CustomPolygonDisplay;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCustomPolygonDisplayOptionsAnnot"))
		-category   ("Menu items.Common.Display.Polygons")
		-command    ("polysDisplaySetup 1")
		CustomPolygonDisplayOptions;

//	Subdiv Surface Components.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleMeshPointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMeshPointsAnnot"))
	-category   ("Other items.Display")
	-command    ("subdivToggle 1")
	-showInHotkeyEditor false
	ToggleMeshPoints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleMeshEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMeshEdgesAnnot"))
	-category   ("Other items.Display")
	-command    ("subdivToggle 2")
	-showInHotkeyEditor false
	ToggleMeshEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleMeshFacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMeshFacesAnnot"))
	-category   ("Other items.Display")
	-command    ("subdivToggle 3")
	-showInHotkeyEditor false
	ToggleMeshFaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleMeshMapsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMeshMapsAnnot"))
	-category   ("Other items.Display")
	-command    ("subdivToggle 4")
	-showInHotkeyEditor false
	ToggleMeshMaps;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleMeshUVBordersLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMeshUVBordersAnnot"))
	-category   ("Other items.Display")
	-command    ("subdivToggle 5")
	-showInHotkeyEditor false
	ToggleMeshUVBorders;

//	Subdiv Surface Smoothness.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessHullLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessHullAnnot"))
	-category   ("Other items.Display")
	-command    ("performSubdivDisplaySmoothnessHull 0")
	-showInHotkeyEditor false
	SubdivSmoothnessHull;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessHullOptionsAnnot"))
		-category   ("Other items.Display")
		-command    ("performSubdivDisplaySmoothnessHull 1")
		-showInHotkeyEditor false
		SubdivSmoothnessHullOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessRoughLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessRoughAnnot"))
	-category   ("Other items.Display")
	-command    ("performSubdivDisplaySmoothnessRough 0")
	-showInHotkeyEditor false
	SubdivSmoothnessRough;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessRoughOptionsAnnot"))
		-category   ("Other items.Display")
		-command    ("performSubdivDisplaySmoothnessRough 1")
		-showInHotkeyEditor false
		SubdivSmoothnessRoughOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessMediumLbl"))	
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessMediumAnnot"))
	-category   ("Other items.Display")
	-command    ("performSubdivDisplaySmoothnessMedium 0")
	-showInHotkeyEditor false
	SubdivSmoothnessMedium;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessMediumOptionsAnnot"))
		-category   ("Other items.Display")
		-command    ("performSubdivDisplaySmoothnessMedium 1")
		-showInHotkeyEditor false
		SubdivSmoothnessMediumOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessFineLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessFineAnnot"))
	-category   ("Other items.Display")
	-command    ("performSubdivDisplaySmoothnessFine 0")
	-showInHotkeyEditor false
	SubdivSmoothnessFine;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSmoothnessFineOptionsAnnot"))
		-category   ("Other items.Display")
		-command    ("performSubdivDisplaySmoothnessFine 1")
		-showInHotkeyEditor false
		SubdivSmoothnessFineOptions;

//	Fast Interaction.
//

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSmoothingDisplayToggleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothingDisplayToggleAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSmoothingDisplayToggleLongAnnot"))
	-image 		"polyToggleProxy.png"
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("smoothingDisplayToggle 1")
	SmoothingDisplayToggle;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSmoothingDisplayShowBothLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothingDisplayShowBothAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSmoothingDisplayShowBothLongAnnot"))
	-image 		"polyToggleProxySubdiv.png"
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("smoothingDisplayToggle 0")
	SmoothingDisplayShowBoth;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothingLevelIncreaseAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("changeSmoothingLevel 1")
	SmoothingLevelIncrease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothingLevelDecreaseAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("changeSmoothingLevel 0")
	SmoothingLevelDecrease;

//
//	Window menu.
//
// ----------------------------------------------------------------------

//	General Editors.
//
string $componentEditorTitle = localizedPanelLabel("Component Editor" );
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kComponentEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kComponentEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ( "tearOffRestorePanel \"" + $componentEditorTitle + "\" \"componentEditorPanel\" true;" )
	ComponentEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSpreadSheetEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSpreadSheetEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("SpreadSheetWindow")
	SpreadSheetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAssetEditorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAssetEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("assetWindow 0")
	AssetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNamespaceEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNamespaceEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("namespaceEditor")
	NamespaceEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFilePathEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFilePathEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("filePathEditorWin")
	FilePathEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConnectionEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kConnectionEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("optionVar -iv \"connectWindowActive\" 1; connectWindow 0 \"\" \"\"")
	ConnectionEditor;
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderLayerEditorWindowLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderLayerEditorWindowAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("if (`optionVar -q channelsLayersSeparate`) {" +
				 "\r\n\tif (!`isUIComponentVisible(\"Layer Editor\")`) {\r\n\t\tsetLayersVisible( true );\r\n\t} else {\r\n\t\traiseLayers();\r\n\t}" +
				 "\r\n} else {" +
				 "\r\n\tif (!`isUIComponentVisible(\"Channel Box / Layer Editor\")`) {\r\n\t\tsetChannelsLayersVisible( true );\r\n\t} else {\r\n\t\traiseChannelsLayers();\r\n\t}" +
				 "\r\n}\r\n; " +
				 "\r\n\t setParent $gCurrentLayerEditor; " +
				 "\r\n\t tabLayout -edit -selectTabIndex 2 DisplayLayerUITabLayout; "+
				 "\r\n\t layerEditorDisplayTypeChange")
	RenderLayerEditorWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisplayLayerEditorWindowLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayLayerEditorWindowAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("if (`optionVar -q channelsLayersSeparate`) {" +
				 "\r\n\tif (!`isUIComponentVisible(\"Layer Editor\")`) {\r\n\t\tsetLayersVisible( true );\r\n\t} else {\r\n\t\traiseLayers();\r\n\t}" +
				 "\r\n} else {" +
				 "\r\n\tif (!`isUIComponentVisible(\"Channel Box / Layer Editor\")`) {\r\n\t\tsetChannelsLayersVisible( true );\r\n\t} else {\r\n\t\traiseChannelsLayers();\r\n\t}" +
				 "\r\n}\r\n; " +
				 "\r\n\t setParent $gCurrentLayerEditor; " +
				 "\r\n\t tabLayout -edit -selectTabIndex 1 DisplayLayerUITabLayout; "+
				 "\r\n\t layerEditorDisplayTypeChange")
	DisplayLayerEditorWindow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBlindDataEditorAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("blindDataEditor")
	BlindDataEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToolSettingsWindowLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kToolSettingsWindowAnnot"))
	-image 		"toolSettings.png"
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("toolPropertyWindow -restore -inMainWindow false;")
	ToolSettingsWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kChannelControlEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kChannelControlEditorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("lockingKeyableWnd")
	ChannelControlEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPerformanceSettingsWindowLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPerformanceSettingsWindowAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("performanceSettingsWin")
	PerformanceSettingsWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCommandWindowLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCommandWindowAnnot"))
	-category   ("Other items.Miscellaneous")
	-command	("showWindow $gCommandWindow")
	CommandWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDGProfilerLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDGProfilerAnnot")) 
	-category   ("Other items.Miscellaneous")
	-command	("dgProfiler")
	OpenDGProfiler;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kScriptEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kScriptEditorAnnot"))
	-image 		"cmdWndIcon.png"
	-category   ("Menu items.Common.Windows.General Editors")
	-command	("if (`scriptedPanel -q -exists scriptEditorPanel1`) { scriptedPanel -e -tor scriptEditorPanel1; showWindow scriptEditorPanel1Window; selectCurrentExecuterControl; }else { CommandWindow; }")
	ScriptEditor;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSaveScriptEditorTabsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveScriptEditorTabsAnnot"))
	-category   ("Other items.Miscellaneous")
	-command	("saveScriptEditorTabs")
	SaveScriptEditorTabs;

runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCommandShellLbl"))  
		-annotation (uiRes("m_defaultRunTimeCommands.kCommandShellAnnot"))
		-category   ("Menu items.Common.Windows.General Editors")
		-command    ("shellWnd")
		CommandShell;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPluginManagerLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPluginManagerAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("pluginWin")
	PluginManager;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMrShaderManagerAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors.mental ray")
	-command    ("mrFactoryWin")
	mrShaderManager;

string $ProfilerTitle = localizedPanelLabel("Profiler Tool" );
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kProfilerLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ( "tearOffRestorePanel \"" + $ProfilerTitle + "\" \"ProfilerPanel\" true;" )
	ProfilerTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToggleRecord"))
	-category	("Editors.Profiler")
	-command	("profiler -sampling (!`profiler -q -sampling`);")
	-hotkeyCtx "profilerPanel"
	ProfilerToolToggleRecording;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerReset"))
	-category	("Editors.Profiler")
	-command	("profiler -reset;")
	-hotkeyCtx "profilerPanel"
	ProfilerToolReset;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolCategoryView"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -categoryView")
	-hotkeyCtx "profilerPanel"
	ProfilerToolCategoryView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolCpuView"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -cpuView")
	-hotkeyCtx "profilerPanel"
	ProfilerToolCpuView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolThreadView"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -threadView")
	-hotkeyCtx "profilerPanel"
	ProfilerToolThreadView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolShowSelected"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -showSelectedEvents true")
	-hotkeyCtx "profilerPanel"
	ProfilerToolShowSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolHideSelected"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -showSelectedEvents false")
	-hotkeyCtx "profilerPanel"
	ProfilerToolHideSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolShowSelectedRepetition"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -showSelectedEventsRepetition true")
	-hotkeyCtx "profilerPanel"
	ProfilerToolShowSelectedRepetition;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolHideSelectedRepetition"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -showSelectedEventsRepetition false")
	-hotkeyCtx "profilerPanel"
	ProfilerToolHideSelectedRepetition;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProfilerToolShowAll"))
	-category	("Editors.Profiler")
	-command	("profilerTool -e -showAllEvent true")
	-hotkeyCtx "profilerPanel"
	ProfilerToolShowAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEvaluationToolkitLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEvaluationToolkitAnnot"))
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("openEvaluationToolkit();")
	EvaluationToolkit;

//	Rendering Editors.
//
string $renderView = localizedPanelLabel("Render View");

runTimeCommand -default true
	-label 		(localizedPanelLabel("Render View"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderViewWindowAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-image 		"rvOpenWindow.png"
	-command    ("tearOffRestorePanel \""+$renderView + "\" \"renderWindowPanel\" true;")
	RenderViewWindow;

// NOTE: RenderViewPrevImage and RenderViewNextImage have reversed
// change by relative values. The Graph Editor Retimer manip is
// piggy backing onto these hotkeys for moving the selected retime
// bar to the left or right.  At some point, the naming below
// should be cleaned up.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderViewPrevImageAnnot"))
	-category   ("Other items.Render View")
	-command    ("renderWindowChangeImage(1);retimeMoveByFrame(1);")
	RenderViewPrevImage;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderViewNextImageAnnot"))
	-category   ("Other items.Render View")
	-command    ("renderWindowChangeImage(-1);retimeMoveByFrame(-1);")
	RenderViewNextImage;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHardwareRenderBufferLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kHardwareRenderBufferAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("glRenderWin")
	HardwareRenderBuffer;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderFlagsWindowLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderFlagsWindowAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("renderFlagsWindow")
	RenderFlagsWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShadingGroupAttributeEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShadingGroupAttributeEditorAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("showShadingGroupAttrEditor")
	ShadingGroupAttributeEditor;

//	Animation Editors.
//
string $graphEditorTitle = localizedPanelLabel("Graph Editor");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGraphEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorAnnot"))
	-image  	"teGraphEditor.png"
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $graphEditorTitle + "\" \"graphEditor\" true;")
	GraphEditor;

//
//	Time Editor
//
// ----------------------------------------------------------------------

	string $timeEd = "timeEditorPanel1TimeEd";

	string $teEditorTitle = localizedPanelLabel("Time Editor");
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCTEEditorLbl"))  
		-annotation (uiRes("m_defaultRunTimeCommands.kCTEEditorAnnot"))
		-image 		"getCTE.png"
		-category   ("Menu items.Common.Windows.Animation Editors")
		-command    ("tearOffRestorePanel \"" + $teEditorTitle + "\" \"timeEditorPanel\" true;")
		TimeEditorWindow;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorSceneAuthoringToggleAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	$isTEMuted = `timeEditor -q -mute`;\n" +
							 "	teToggleEditorMute(!$isTEMuted);\n" +
							 "}\n")
		TimeEditorSceneAuthoringToggle;
    
    runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorRealTimeRefreshToggleAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	$isRefreshing = teIseRealTimeRefreshing();\n" +
							 "	teToggleRealTimeRefresh(!$isRefreshing);\n" +
							 "}\n")
		TimeEditorRealTimeRefreshToggle;
	
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorFrameAllAnnot"))
		-category			("Editors.Time Editor.View")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timeEditorPanel -edit -lookAt all " + $timeEd + ";\n" +
							 "}\n")
		TimeEditorFrameAll;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorFrameSelectedAnnot"))
		-category			("Editors.Time Editor.View")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timeEditorPanel -edit -lookAt selected " + $timeEd + ";\n" +
							 "}\n")
		TimeEditorFrameSelected;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorFramePlaybackRangeAnnot"))
		-category			("Editors.Time Editor.View")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	teFramePlaybackRange " + $timeEd + ";\n" +
							 "}\n")
		TimeEditorFramePlaybackRange;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorFrameCenterViewAnnot"))
		-category			("Editors.Time Editor.View")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timeEditorPanel -edit -lookAt currentTime " + $timeEd + ";\n" +
							 "}\n")
		TimeEditorFrameCenterView;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorPasteClipsAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	tePasteClip(); \n" +
							 "}")
		TimeEditorPasteClips;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipRazorAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 0);\n" +
							 "}\n")
		TimeEditorClipRazor;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipTrimStartAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 1);\n" +
							 "}\n")
		TimeEditorClipTrimStart;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipTrimEndAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 2);\n" +
							 "}\n")
		TimeEditorClipTrimEnd;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipScaleStartAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 3);\n" +
							 "}\n")
		TimeEditorClipScaleStart;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipScaleEndAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 4);\n" +
							 "}\n")
		TimeEditorClipScaleEnd;
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipResetTimingAnnoation"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "tePerformClipEditOnSelectedClips(-1, 5);\n" +
							 "}\n")
		TimeEditorClipResetTiming;
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCutClipsAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	teCutClip(-1);\n" +
							 "}\n")
		TimeEditorCutClips;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorDeleteClipsAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "teDeleteClip(-1);\n" +
							 "}\n")
		TimeEditorDeleteClips;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCopyClipsAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timeEditorClip -e -copyClip;\n" +
							 "}\n")
		TimeEditorCopyClips;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorSetKeyAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("performSetKeyframeArgList 1 {\"3\", \"animationList\"}")
		TimeEditorSetKey;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorSetZeroKeyAnnot"))
		-category			("Editors.Time Editor.Edit")
		-hotkeyCtx			("timeEditorPanel")
		-command			("teSetKeyFrameOnActiveLayerOrClip 1")
		TimeEditorSetZeroKey;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreateAnimTracksAtEndAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" + 
							 "	if(!`exists teCreateTrackAtEnd`) source teTrackFunctions; \n" +
							 "	teCreateTrackAtEnd(0); \n" +
							 "} \n")
		TimeEditorCreateAnimTracksAtEnd;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreateTracksAudioAtEndAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" + 
							 "	if(!`exists teCreateTrackAtEnd`) source teTrackFunctions; \n" +
							 "	teCreateTrackAtEnd(1); \n" +
							 "} \n")
		TimeEditorCreateAudioTracksAtEnd;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorDeleteSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teDeleteSelectedTracks`) source teTrackFunctions; teDeleteSelectedTracks(\"\", -1);")
		TimeEditorDeleteSelectedTracks;
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorMuteSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teMuteUnmuteSelectedTracks`) source teTrackFunctions; teMuteUnmuteSelectedTracks(1, \"\", -1);")
		TimeEditorMuteSelectedTracks;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorUnmuteSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teMuteUnmuteSelectedTracks`) source teTrackFunctions; teMuteUnmuteSelectedTracks(0, \"\", -1);")
		TimeEditorUnmuteSelectedTracks;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorUnmuteAllTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("timeEditorTracks -resetMute;")
		TimeEditorUnmuteAllTracks;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorSoloSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teSoloUnsoloSelectedTracks`) source teTrackFunctions; teSoloUnsoloSelectedTracks(0, 1, \"\", -1);")
		TimeEditorSoloSelectedTracks;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorAddToSoloSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teSoloUnsoloSelectedTracks`) source teTrackFunctions; teSoloUnsoloSelectedTracks(1, 1, \"\", -1);")
		TimeEditorAddToSoloSelectedTracks;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorUnsoloAllTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("timeEditorTracks -resetSolo;")
		TimeEditorUnsoloAllTracks;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreateClipAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teCreateContainer`) source teCreateContainer.mel; teCreateContainer(1, 0, \"\");")
		TimeEditorCreateClip;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreateClipOptionsAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teCreateContainer`) source teCreateContainer.mel; teCreateContainer(2, 0, \"\");")
		TimeEditorCreateClipOptions;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreatePoseClipAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teCreatePoseClip`) source teCreateContainer.mel; teCreatePoseClip(1, \"\" );")
		TimeEditorCreatePoseClip;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreatePoseClipOptionsAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teCreateContainer`) source teCreateContainer.mel; teCreatePoseClip(2, \"\");")
		TimeEditorCreatePoseClipOptions;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorCreateAudioClipAnnot"))
		-category			("Editors.Time Editor.File")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teCreateAudioContainer`) source teCreateContainer.mel; teCreateAudioContainer( \"\" );")
		TimeEditorCreateAudioClip;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipTrimPressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	evalEcho(\"timeEditorPanel -e -activeClipEditMode 1 " + $timeEd + "\"); \n" +
							 "}\n")
		TimeEditorClipTrimToggle;
			
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipScalePressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	evalEcho(\"timeEditorPanel -e -activeClipEditMode 2 " + $timeEd + "\"); \n" +
							 "}\n")
		TimeEditorClipScaleToggle;
				
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipLoopPressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	evalEcho(\"timeEditorPanel -e -activeClipEditMode 3 " + $timeEd + "\"); \n" +
							 "}\n")
		TimeEditorClipLoopToggle;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorClipHoldPressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	evalEcho(\"timeEditorPanel -e -activeClipEditMode 4 " + $timeEd + "\"); \n" +
							 "}\n")
		TimeEditorClipHoldToggle;
			
	//runTimeCommand -default true
	//	-annotation			_L10N(kTimeEditorClipSelectMoveAnnot, "Select and move clips in Time Editor")
	//	-category			("Editors.Time Editor.Mode")
	//	-hotkeyCtx			("timeEditorPanel")
	//	-command			("{\n" +
	//						 " timeEditorPanel -e -activeClipEditMode 0 " + $timeEd + "; \n" +
	//						 "}\n")
	//	TimeEditorClipSelectMove;
	
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleSnapToClipPressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{ \n" + 
							 "	timer -s -name \"toggleSnapToClipHotkeyTimer\";\n" +
							 "	int $snap = `timeEditorPanel -q -snapToClip " + $timeEd + "`;\n" +
							 "	timeEditorPanel -e -snapToClip (!$snap) " + $timeEd + ";\n" +
							 "}\n")
		TimeEditorToggleSnapToClipPress;
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleSnapToClipReleaseAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{ \n" + 
							 "	float $totalTime = `timer -e -name \"toggleSnapToClipHotkeyTimer\"`;\n" +
							 "	if ($totalTime > 0.20) {\n" +
							 "		int $snap = `timeEditorPanel -q -snapToClip " + $timeEd + "`; \n" +
							 "		timeEditorPanel -e -snapToClip (!$snap) " + $timeEd + "; \n" +
							 "	}\n" + 
							 "}\n")
		TimeEditorToggleSnapToClipRelease;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleTimeCursorPressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("timeEditorPanel -e -timeCursor true " + $timeEd + ";")
		TimeEditorToggleTimeCursorPress;
		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleTimeCursorReleaseAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("timeEditorPanel -e -timeCursor false " + $timeEd + ";")
		TimeEditorToggleTimeCursorRelease;
	
	// Start a timer during hotkey press, to determine whether the hotkey is pressed and released immediately
	// or pressed and hold (sticky hotkey).
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorRippleEditTogglePressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timer -s -name \"rippleHotkeyTimer\";\n" +
							 "	int $ripple = teGetRippleStatus();\n" +
							 "	teToggleRipple(!$ripple);\n" +
							 "}\n")
		TimeEditorRippleEditTogglePress;

	// Stop timer and get the duration of the keypress
	// If the duration is more than 0.2 second, then consider it as press and hold and toggle the ripple state
	// If the duration is less than 0.2 second, do nothing
	// the 0.2 duration is obtained from the default sticky hotkey timer in Maya (200 milliseconds)
	//		/src/NEX/nexOpts.cpp
	//			pInstance->options[nOptIds::kStickyKeyTime] = nexOpt("stickyKeyTime", (int)200,true, NULL);
	// Used the default duration above to measure sticky keys, for example:
	//		/src/NEX/dRasterMayaCmd.cpp
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorRippleEditToggleReleaseAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	float $totalTime = `timer -e -name \"rippleHotkeyTimer\"`;\n" +
							 "	if ($totalTime > 0.20) {\n" +
							 "		int $ripple = teGetRippleStatus();\n" +
							 "		teToggleRipple(!$ripple);\n" +
							 "	}\n" +
							 "}\n")
		TimeEditorRippleEditToggleRelease;

	// Start a timer during hotkey press, to determine whether the hotkey is pressed and released immediately
	// or pressed and hold (sticky hotkey).
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorKeepTransitionsTogglePressAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	timer -s -name \"keepTransitionsHotkeyTimer\";\n" +
							 "	int $keepTransitions = teGetKeepTransitionsMode();\n" +
							 "	teSetKeepTransitionsMode(!$keepTransitions);\n" +
							 "}\n")
		TimeEditorKeepTransitionsTogglePress;
		
	// Stop timer and get the duration of the keypress
	// If the duration is more than 0.2 second, then consider it as press and hold and toggle the keepTransitions state
	// If the duration is less than 0.2 second, do nothing
	// the 0.2 duration is obtained from the default sticky hotkey timer in Maya (200 milliseconds)
	//		/src/NEX/nexOpts.cpp
	//			pInstance->options[nOptIds::kStickyKeyTime] = nexOpt("stickyKeyTime", (int)200,true, NULL);
	// Used the default duration above to measure sticky keys, for example:
	//		/src/NEX/dRasterMayaCmd.cpp
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorKeepTransitionsToggleReleaseAnnot"))
		-category			("Editors.Time Editor.Mode")
		-hotkeyCtx			("timeEditorPanel")
		-command			("{\n" +
							 "	float $totalTime = `timer -e -name \"keepTransitionsHotkeyTimer\"`;\n" +
							 "	if ($totalTime > 0.20) {\n" +
							 "		int $keepTransitions = teGetKeepTransitionsMode();\n" +
							 "		teSetKeepTransitionsMode(!$keepTransitions);\n" +
							 "	}\n" +
							 "}\n")
		TimeEditorKeepTransitionsToggleRelease;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTEExportSelectAnnot"))
			-category			("Editors.Time Editor.File")
			-hotkeyCtx			("timeEditorPanel")
			-command			("performTEExport(0);")
			TimeEditorExportSelection;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTEExportSelectOptAnnot"))
			-category			("Editors.Time Editor.File")
			-hotkeyCtx			("timeEditorPanel")
			-command			("performTEExport(1);")
			TimeEditorExportSelectionOpt;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTEFbxExportAllAnnot"))
			-category			("Editors.Time Editor.File")
			-hotkeyCtx			("timeEditorPanel")
			-command			("if(!`exists performTEExportFbxAll`) source performTEExport.mel; performTEExportFbxAll;")
			TimeEditorFbxExportAll;


	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleMuteSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teMuteUnmuteSelectedTracks`) source teTrackFunctions.mel; teMuteUnmuteSelectedTracks(teIsSelectedTracksMuted(\"\",-1)?0:1, \"\", -1);")
		TimeEditorToggleMuteSelectedTracks;

	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorToggleSoloSelectedTracksAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teSoloUnsoloSelectedTracks`) source teTrackFunctions.mel; teSoloUnsoloSelectedTracks(0,teIsSelectedTracksSoloed(\"\",-1)?0:1, \"\", -1);")
		TimeEditorToggleSoloSelectedTracks;

		
	runTimeCommand -default true
		-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorGhostTrackToggleAnnot"))
		-category			("Editors.Time Editor.Tracks")
		-hotkeyCtx			("timeEditorPanel")
		-command			("if(!`exists teGhostSelectedTrack`) source teGhostFunctions.mel; teGhostSelectedTrack(!teGhostSelectedTrackState());")
		TimeEditorGhostTrackToggle;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTECreateOverrideLayerAnnot"))
			-category			("Editors.Time Editor.Clip")
			-hotkeyCtx			("timeEditorPanel")
			-command			("if(!`exists teCreateClipLayerBySelection`) source teCreateClipLayer.mel; teCreateClipLayerBySelection(-1,2);")
			TimeEditorCreateOverrideLayer;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTECreateAdditiveLayerAnnot"))
			-category			("Editors.Time Editor.Clip")
			-hotkeyCtx			("timeEditorPanel")
			-command			("if(!`exists teCreateClipLayerBySelection`) source teCreateClipLayer.mel; teCreateClipLayerBySelection(-1,0);")
			TimeEditorCreateAdditiveLayer;	
	
	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTimeEditorImportAnimationAnnot"))
			-category			("Editors.Time Editor.File")
			-hotkeyCtx			("timeEditorPanel")
			-command			("if(!`exists teImportAnimationClip`) source teCreateContainer.mel; teImportAnimationClip(\"\");")
			TimeEditorImportAnimation;

	runTimeCommand -default true
			-annotation			(uiRes("m_defaultRunTimeCommands.kTEOpenContentBrwAnnot"))
			-category			("Editors.Time Editor.File")
			-hotkeyCtx			("timeEditorPanel")
			-command			("if(!`exists teOpenContentBrowser`) source teCreateContainer.mel; teOpenContentBrowser;")
			TimeEditorOpenContentBrowser;

	runTimeCommand -default true
            -annotation         (uiRes("m_defaultRunTimeCommands.kTECreateGroupFromSelection"))
            -category           ("Editors.Time Editor.Clip")
            -hotkeyCtx          ("timeEditorPanel")
            -command            ("if(!`exists teCreateGroupBySelection`) source teClipEditFunctions.mel; teCreateGroupBySelection(-1);")
            TimeEditorCreateGroupFromSelection;

    runTimeCommand -default true
            -annotation         (uiRes("m_defaultRunTimeCommands.kTEExplodeGroup"))
            -category           ("Editors.Time Editor.Clip")
            -hotkeyCtx          ("timeEditorPanel")
            -command            ("if(!`exists teExplodeSelectedGroup`) source teClipEditFunctions.mel; teExplodeSelectedGroup(-1);")
            TimeEditorExplodeGroup;


string $dopeSheetTitle = localizedPanelLabel("Dope Sheet");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDopeSheetEditorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDopeSheetEditorAnnot"))
	-image 		"getDopeSheet.png"
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $dopeSheetTitle + "\" \"dopeSheetPanel\" true;")
	DopeSheetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kQuickRigEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kQuickRigEditorAnnot"))
	-image 		"QR_QuickRigTool.png"
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("openQuickRigUI();")
	QuickRigEditor;

string $blendShapeTitle = localizedPanelLabel("Blend Shape");
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBlendShapeEditorAnnot"))
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $blendShapeTitle + "\" \"blendShapePanel\" false;")
	BlendShapeEditor;

string $shapeTitle = localizedPanelLabel("Shape Editor");
runTimeCommand -default true
	-label 		$shapeTitle
	-annotation (uiRes("m_defaultRunTimeCommands.kShapeEditorAnnot"))
	-image 		"blendShapeEditor.png"
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $shapeTitle + "\" \"shapePanel\" false;")
	ShapeEditor;

string $poseTitle = localizedPanelLabel("Pose Editor");
runTimeCommand -default true
	-label 		$poseTitle  
	-annotation (uiRes("m_defaultRunTimeCommands.kPoseEditorAnnot"))
	-image 		"poseEditor.png" 
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $poseTitle + "\" \"posePanel\" false;")
	PoseEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExpressionEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kExpressionEditorAnnot"))
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("expressionEditor EE \"\" \"\"")
	ExpressionEditor;

string $devicesTitle = localizedPanelLabel("Devices");
runTimeCommand -default true
	-label 		$devicesTitle
	-annotation (uiRes("m_defaultRunTimeCommands.kDeviceEditorAnnot"))
	-category   ("Other items.Window")
	-command    ("tearOffRestorePanel \"" + $devicesTitle + "\" \"devicePanel\" false;")
	-showInHotkeyEditor false
	DeviceEditor;

//	Relationship Editors.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("setMembershipEditor")
	SetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeformerSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDeformerSetEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("deformerSetEditor")
	DeformerSetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCharacterSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCharacterSetEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("characterEditor 0")
	CharacterSetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPartitionEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPartitionEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("partitionEditor")
	PartitionEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLayerRelationshipEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLayerRelationshipEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("displayLayerEditor")
	LayerRelationshipEditor;
    
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCameraSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCameraSetEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("cameraSetEditor")
	CameraSetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderLayerRelationshipEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderLayerRelationshipEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("renderLayerEditor")
	RenderLayerRelationshipEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderPassSetEditorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderPassSetEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("renderPassSetEditor")
	RenderPassSetEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAnimLayerRelationshipEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimLayerRelationshipEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("animLayerEditor")
	AnimLayerRelationshipEditor;

string $dynamicRelationshipTitle = localizedPanelLabel("Dynamic Relationships");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDynamicRelationshipEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDynamicRelationshipEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors")
	-command    ("tearOffRestorePanel \""+ $dynamicRelationshipTitle +"\" \"dynRelEdPanel\" true;")
	DynamicRelationshipEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLightCentricLightLinkingEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLightCentricLightLinkingEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.Light Linking;Menu items.Rendering.Lighting/Shading.Light Linking Editor")
	-command    ("lightLinkingEditor")
	LightCentricLightLinkingEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kObjectCentricLightLinkingEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kObjectCentricLightLinkingEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.Light Linking;Menu items.Rendering.Lighting/Shading.Light Linking Editor")
	-command    ("objectLightLinkingEditor")
	ObjectCentricLightLinkingEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTextureCentricUVLinkingEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTextureCentricUVLinkingEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.UV Linking")
	-command    ("textureCentricUvLinkingEditor")
	TextureCentricUVLinkingEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUVCentricUVLinkingEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCentricUVLinkingEditorAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.UV Linking")
	-command    ("uvCentricUvLinkingEditor")
	UVCentricUVLinkingEditor;

//	Miscellaneous editors and windows.
//
runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Attribute Editor"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAttributeEditorAnnot"))
	-image 		"attributes.png"
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("openAEWindow")
	AttributeEditor;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Channel Box / Layer Editor"))
	-annotation (localizedUIComponentLabel("Channel Box / Layer Editor"))
	-image 		"channelLayers.png"
	-category   ("Menu items.Common.Windows.General Editors")
	-command    "setChannelsLayersVisible(true); raiseChannelsLayers;"
	OpenChannelsLayers;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Channel Box"))
	-annotation (localizedUIComponentLabel("Channel Box"))
	-image 		"channelBox.png"
	-category   ("Menu items.Common.Windows.General Editors")
	-command    "setChannelsVisible(true); raiseChannels;"
	OpenChannelBox;

runTimeCommand -default true
	-label 		(localizedUIComponentLabel("Layer Editor"))
	-annotation (localizedUIComponentLabel("Layer Editor"))
	-image 		"layerEditor.png"
	-category   ("Menu items.Common.Windows.General Editors")
	-command    "setLayersVisible(true); raiseLayers;"
	OpenLayerEditor;

string $outlinerTitle = localizedPanelLabel("Outliner");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kOutlinerLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerAnnot"))
	-category   ("Menu items.Common.Windows")
	-command	("if(!`workspaceControl -exists \"Outliner\"`){ global int $gOutlinerPanelNeedsInit;$gOutlinerPanelNeedsInit = true;initOutlinerPanel();} workspaceControl -edit -restore \"Outliner\";")
	OutlinerWindow;

// Content Browser
//
runTimeCommand -default true
	-category ("Menu items.Common.Windows.General Editors")
	-command ( "contentBrowserRaisePanel()" )
	ContentBrowserWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kContentBrowserLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kContentBrowserAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    "ContentBrowserWindow;contentBrowserSetContext(\"WindowsMenu\", \"examples\", \"Examples/Modeling/Sculpting Base Meshes/Bipeds\");"
	OpenContentBrowser;

string $hypergraphTitle = localizedPanelLabel("Hypergraph");
runTimeCommand -default true
	-label      $hypergraphTitle
	-annotation (uiRes("m_defaultRunTimeCommands.kHypergraphAnnot"))
	-category   ("Other items.Window")
	-command    ("tearOffRestorePanel \"" + $hypergraphTitle + "\" \"hyperGraphPanel\" true;")
	-showInHotkeyEditor false
	HypergraphWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHypergraphHierarchyLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHypergraphHierarchyAnnot"))
	-image 		"hypergraph.png"
	-category   ("Menu items.Common.Editors")
	-command    ("hyperGraphWindow \"\" \"DAG\"")
	HypergraphHierarchyWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHypergraphDGLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHypergraphDGAnnot"))
	-image 		"hypergraph.png"
	-category   ("Menu items.Common.Editors")
	-command    ("hyperGraphWindow \"\" \"DG\"")
	HypergraphDGWindow;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kHypergraphIncreaseDepthAnnot"))
    -category   ("Editors.HyperGraph Panel")
    -command    ("hyperGraphDepthControl 1")
	-hotkeyCtx  ("hyperGraphPanel")
    HypergraphIncreaseDepth;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kHypergraphDecreaseDepthAnnot"))
    -category   ("Editors.HyperGraph Panel")
    -command    ("hyperGraphDepthControl -1")
	-hotkeyCtx  ("hyperGraphPanel")
    HypergraphDecreaseDepth;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMapVisualizerAnnot"))
		-category   ("Menu items.Common.Windows.Rendering Editors.mental ray")
		-command    ("mrMapVizWin")
		mrMapVisualizer;      

runTimeCommand -default true
	-label 		(localizedUIMisc("Render Settings"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderSettingsAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("unifiedRenderGlobalsWindow")
	RenderGlobalsWindow;

string $hypershadeTitle = localizedPanelLabel("Hypershade");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHypershadeLbl")) 
	-image 		"hypershadeIcon.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kHypershadeAnnot"))
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("tearOffRestorePanel \"" + $hypershadeTitle + "\" \"hyperShadePanel\" true;")
	HypershadeWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderSetupLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderSetupAnnot"))
	-image      "render_setup.png"
	-category   ("Menu items.Common.Windows.Rendering Editors")
	-command    ("python(\"import maya.cmds\\nif not maya.cmds.pluginInfo(\\\"renderSetup.py\\\", loaded=True, query=True):\\n    maya.cmds.loadPlugin(\\\"renderSetup.py\\\")\\nimport maya.app.renderSetup.views.renderSetup\\nmaya.app.renderSetup.views.renderSetup.createUI()\")")
	RenderSetupWindow;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kOpenLightEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenLightEditorAnnot"))
    -image      "light_manager.png"
    -category   ("Menu items.Common.Windows.Rendering Editors")
	-command 	("callPython \"maya.app.renderSetup.lightEditor.views.editorUI\" \"createLightEditorWindow\" {}")
	OpenLightEditor;
runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kStereoRigManagerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kStereoRigManagerAnnot"))
    -image      "viewStereoEditor.png"
    -category   ("Menu items.Common.Windows.Rendering Editors")
	-command 	("stereoCameraCBwrapper(\"stereoRigToolEditor\",\"customRigEditor()\")")
	OpenStereoRigManager;

	
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNodeEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAnnot"))
	-category   ("Menu items.Common.Editors")
	-command    ("nodeEditorWindow")
	NodeEditorWindow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNodeAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("createNodeWindow")
	-hotkeyCtx	("nodeEditorPanel")
	CreateNodeWindow;

string $visorTitle = localizedPanelLabel("Visor");
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kVisorAnnot"))
	-category   ("Menu items.Common.Windows.General Editors")
	-command    ("tearOffRestorePanel \""+ $visorTitle +"\" \"VisorPanel\" true;")
	VisorWindow;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kModelingToolkitLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kModelingToolkitAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kModelingToolkitLongAnnot"))
	-image 		"modelToolkit.png"
	-category   ("Menu items.Common.Editors")
	-command	"showModelingToolkit"
	OpenModelingToolkit;


// Different annotation depending on the license
$annotation = (uiRes("m_defaultRunTimeCommands.kPaintEffects2DAnnot"));
	$annotation = (uiRes("m_defaultRunTimeCommands.kPaintEffects3DAnnot"));

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintEffectsLbl"))
	-annotation $annotation
	-category   ("Menu items.Common.Editors")
	-command    ("scriptedPanel -e -tor dynPaintScriptedPanel")
	PaintEffectsWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPFXUVLinkingLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPFXUVLinkingAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.UV Linking")
	-command    ("pfxUVLinkingEditor")
	PFXUVSetLinkingEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHairUVLinkingLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kHairUVLinkingAnnot"))
	-category   ("Menu items.Common.Windows.Relationship Editors.UV Linking")
	-command    ("hairUVLinkingEditor")
	HairUVSetLinkingEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUVTextureEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kUVTextureEditorAnnot"))
	-image 		"textureEditor.png"
	-category   ("Menu items.Common.Editors;Menu items.Modeling.UV")
	-command    ( "texturePanelShow" )
	TextureViewWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kXGenEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kXGenEditorAnnot"))
	-image 		"xgDEditor.png"
	-category   ("Menu items.Common.Editors")
	-command    ( "XgCreateDescriptionEditor" )
	OpenXGenEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreaseSetsRelEdLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreaseSetsRelEdAnnot"))
	-image 		"polyCrease.png" 
	-category   ("Menu items.Common.Editors")
	-command 	"python \"from maya.app.general import creaseSetEditor; creaseSetEditor.showCreaseSetEditor()\"" 
	OpenCreaseEditor;

string $traxEditorTitle = localizedPanelLabel("Trax Editor");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTraxEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTraxEditorAnnot"))
	-image 		"getTrax.png"
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $traxEditorTitle + "\" \"clipEditorPanel\" true;")
	CharacterAnimationEditor;

string $sequenceEditorTitle = localizedPanelLabel("Camera Sequencer");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSequenceEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSequenceEditorAnnot"))
	-category   ("Menu items.Common.Windows.Animation Editors")
	-command    ("tearOffRestorePanel \"" + $sequenceEditorTitle + "\" \"sequenceEditorPanel\" true;")
	SequenceEditor;

string $shotPlaylistEditorTitle = localizedPanelLabel("Shot Playlist");
runTimeCommand -default true
	-label 		$shotPlaylistEditorTitle
	-annotation (uiRes("m_defaultRunTimeCommands.kShotPlaylistAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("tearOffRestorePanel \"" + $shotPlaylistEditorTitle + "\" \"shotPlaylistPanel\" true;")
	ShotPlaylistEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPlayblastLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlayblastAnnot"))
	-image 		"playblast.png"
	-category   ("Menu items.Common.Editors;Menu items.Animation.Playback")
	-command    ("performPlayblast false")
	PlayblastWindow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPlayblastWindowOptionsAnnot"))
	-category   ("Menu items.Common.Editors;Menu items.Animation.Playback")
	-command    ("performPlayblast true")
	PlayblastWindowOptions;

// TODO: this one should be refactored and removed
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPlayblastOptionsAnnot"))
	-category   ("Menu items.Common.Editors;Menu items.Animation.Playback")
	-command    ("performPlayblast true")
	PlayblastOptions;

//	View Arrangements.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFourPanesAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes quad 0; updateToolbox();")
	FourViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kThreeSplitTopAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes top3 0; updateToolbox();")
	ThreeTopSplitViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kThreeSplitLeftAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes left3 0; updateToolbox();")
	ThreeLeftSplitViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kThreeSplitRightAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes right3 0; updateToolbox();")
	ThreeRightSplitViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kThreeSplitBottomAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes bottom3 0; updateToolbox();")
	ThreeBottomSplitViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTwoStackedAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes horizontal2 0; updateToolbox();")
	TwoStackedViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTwoSideBySideAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes vertical2 0; updateToolbox();")
	TwoSideBySideViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSinglePaneAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes single 0; updateToolbox();")
	SingleViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreviousViewArrangementAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("switchPanes goBack 0; updateToolbox();")
	PreviousViewArrangement;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNextViewArrangementAnnot"))
	-category   ("Menu items.Common.Windows.View Arrangement")
	-command    ("panelHistory -e -f mainPanelHistory; updateToolbox();")
	NextViewArrangement;

//	Panel layouts.
//
string $contentBrowserPersp			= localizedPanelLabel("Content Browser/Persp");
runTimeCommand -default true
	-annotation 		$contentBrowserPersp
	-category 			("Other items.Window")
	-command			("setNamedPanelLayout \"" + $contentBrowserPersp + "\"")
	-showInHotkeyEditor false
	ContentBrowserLayout;


string $singlePerspView = localizedPanelLabel("Single Perspective View");
runTimeCommand -default true
	-annotation $singlePerspView
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $singlePerspView + "\"")
	-showInHotkeyEditor false
	SinglePerspectiveViewLayout;
	
string $frontPerspView = localizedPanelLabel("Front/Persp");
runTimeCommand -default true
	-annotation $frontPerspView
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $frontPerspView + "\"")
	-showInHotkeyEditor false
	FrontPerspViewLayout;

string $fourView = localizedPanelLabel("Four View");
runTimeCommand -default true
	-annotation $fourView
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $fourView + "\"")
	-showInHotkeyEditor false
	FourViewLayout;

string $perspGraphHyperGraph = localizedPanelLabel("Persp/Graph/Hypergraph");
runTimeCommand -default true
	-annotation $perspGraphHyperGraph
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $perspGraphHyperGraph + "\"")
	-showInHotkeyEditor false
	PerspGraphHypergraphLayout;

string $hypershadeRenderPersp = localizedPanelLabel("Hypershade/Render/Persp");
runTimeCommand -default true
	-annotation $hypershadeRenderPersp
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $hypershadeRenderPersp + "\"")
	-showInHotkeyEditor false
	HypershadeRenderPerspLayout;

string $hypershadeOutlinerPersp = localizedPanelLabel("Hypershade/Outliner/Persp");
runTimeCommand -default true
	-annotation $hypershadeOutlinerPersp
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $hypershadeOutlinerPersp + "\"")
	-showInHotkeyEditor false
	HypershadeOutlinerPerspLayout;

string $hypershadePersp = localizedPanelLabel("Hypershade/Persp");
runTimeCommand -default true
	-annotation $hypershadePersp
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $hypershadePersp + "\"")
	-showInHotkeyEditor false
	HypershadePerspLayout;

string $perspGraphOutliner = localizedPanelLabel("Persp/Graph/Outliner");
runTimeCommand -default true
	-annotation $perspGraphOutliner
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $perspGraphOutliner + "\"")
	-showInHotkeyEditor false
	PerspGraphOutlinerLayout;

string $perspGraph = localizedPanelLabel("Persp/Graph");
runTimeCommand -default true
	-annotation $perspGraph
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $perspGraph + "\"")
	-showInHotkeyEditor false
	PerspGraphLayout;

string $perspRelationshipEditor = localizedPanelLabel("Persp/Relationship Editor");
runTimeCommand -default true
	-annotation $perspRelationshipEditor
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $perspRelationshipEditor + "\"")
	-showInHotkeyEditor false
	PerspRelationshipEditorLayout;

string $perspUVTextureEditor = localizedPanelLabel("Persp/UV Editor");
runTimeCommand -default true
	-annotation $perspUVTextureEditor
	-category   ("Other items.Window")
	-command    ("setNamedPanelLayout \"" + $perspUVTextureEditor + "\"")
	-showInHotkeyEditor false
	PerspTextureLayout;

//	Save current layout.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveCurrentLayoutAnnot"))
	-category   ("Menu items.Common.Editors")
	-command    ("saveCurrentPanelLayout")
	SaveCurrentLayout;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kResetCurrentWorkspaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kResetCurrentWorkspaceAnnot")) 
	-category	("Menu items.Common.Editors")
	-command "workspaceLayoutManager -reset" 
	ResetCurrentWorkspace;

// Save current workspace layout as...
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSaveCurrentWorkspaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveCurrentWorkspaceAnnot"))
	-category	("Menu items.Common.Editors")
	-command ("if(!`exists saveCurrentWorkspaceLayoutAs`) source workspaceHelperProcs.mel; saveCurrentWorkspaceLayoutAs;")
	SaveCurrentWorkspace;
	
// Delete current workspace
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteCurrentWorkdpaceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteCurrentWorkdpaceAnnot"))
	-category ("Menu items.Common.Editors")
	-command ("if(!`exists deleteCurrentWorkspaceLayout`) source workspaceHelperProcs.mel; deleteCurrentWorkspaceLayout;")
	DeleteCurrentWorkspace;

// Import workspace files...
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kImportWorkspaceFilesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kImportWorkspaceFilesAnnot"))
	-category ("Menu items.Common.Editors")
	-command ("if(!`exists importWorkspaceFiles`) source workspaceHelperProcs.mel; importWorkspaceFiles;")	
	ImportWorkspaceFiles;

//	Frame in view.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFrameAllInAllViewsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFrameAllInAllViewsAnnot"))
	-category   ("Menu items.Common.Editors")
	-command    ("fitAllPanels -all")
	FrameAllInAllViews;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFrameSelWithoutChildrenInAllViewsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFrameSelWithoutChildrenInAllViewsAnnot"))
	-category   ("Menu items.Common.Editors")
	-command    ("fitAllPanels -selectedNoChildren")
	FrameSelectedWithoutChildrenInAllViews;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFrameSelWithChildrenInAllViewsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFrameSelWithChildrenInAllViewsAnnot"))
	-category   ("Menu items.Common.Editors")
	-command    ("fitAllPanels -selected")
	FrameSelectedInAllViews;

//	Preferences and customization windows.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPreferencesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPreferencesAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences;Menu items.Help.What's New")
	-command    ("preferencesWnd \"Interface\";")
	PreferencesWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHotkeyPreferencesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kHotkeyPreferencesAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("hotkeyEditorWindow")
	HotkeyPreferencesWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kColorPreferencesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kColorPreferencesAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("colorPrefWnd")
	ColorPreferencesWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMarkingMenuEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMarkingMenuEditorAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("menuEditorWnd")
	MarkingMenuPreferencesWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShelfEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShelfEditorAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("shelfEditorDialog")
	ShelfPreferencesWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPanelEditorLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPanelEditorAnnot"))
	-category   ("Menu items.Common.Windows.Settings/Preferences")
	-command    ("panelEditor(uiRes(\"m_panelEditor.kPanels\"))")
	PanelPreferencesWindow;

//	Application window functions.
//
if (!`about -mac`) {
	runTimeCommand -default true
		-label (uiRes("m_defaultRunTimeCommands.kMinimizeMayaLbl")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kMinimizeMayaAnnot")) 
		-category   ("Menu items.Common.Editors")
		-command    ("minimizeApp")
		MinimizeApplication;
}

if (`about -nt`) {
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kOutputWindowLbl"))  
		-annotation (uiRes("m_defaultRunTimeCommands.kOutputWindowAnnot"))
		-category   ("Menu items.Common.Windows")
		-command    ("outputWindow")
		OutputWindow;
}

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAppHomeLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAppHomeAnnot"))
	-category   ("Menu items.Common.Windows")
	-command    ("appHome -toggleVisibility -instrument SHOW_APP_HOME_RUNTIME_CMD")
	-image 		"home.png"
	AppHome;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRaiseAppWindowsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRaiseMayaWindowsAnnot")) 
	-category   ("Menu items.Common.Editors")
	-command    ("raiseAllWindows")
	RaiseApplicationWindows;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRaiseMainWindowLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRaiseMainMayaWindowAnnot")) 
	-category   ("Menu items.Common.Editors")
	-command    ("showWindow MayaWindow")
	RaiseMainWindow;

//
//	Help menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFindMenuLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFindMenuAnnot"))
	-category   ("Menu items.Help")
	-command    ("findMenuItem")
	OpenMenuFinder;

// What's new
	$whatsNewURL = (uiRes("m_defaultRunTimeCommands.kWhatsNewURL"));

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kWhatsNewLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kWhatsNewAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $whatsNewURL + "\"" )
	ShowWhatsNew;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHighlightWhatsNewLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHighlightWhatsNewAnnot"))
	-category   ("Menu items.Help")
	-command 	( "if(`whatsNewHighlight -q -ho`) { WhatsNewHighlightingOff; } else { WhatsNewHighlightingOn; }" )
	HighlightWhatsNew;

	$startupMoviesURL = (uiRes("m_defaultRunTimeCommands.kStartupMoviesURL"));

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartupMoviesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kStartupMoviesAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $startupMoviesURL + "\"" )
	OpenStartupMovies;

// Learning Channel
//
$theMayaLearningChannelURL = (uiRes("m_defaultRunTimeCommands.kTheMayaLearningChannelURL"));
runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kLearningChannel"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLearningChannelAnn"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $theMayaLearningChannelURL + "\"" )
	OpenLearningChannel;

// Tutorials
//
	$label = (uiRes("m_defaultRunTimeCommands.kTutorials"));
	$tutorialURL = (uiRes("m_defaultRunTimeCommands.kTutorialURL"));

runTimeCommand -default true 
    -label 		$label
	-annotation (uiRes("m_defaultRunTimeCommands.kTutorialsAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $tutorialURL + "\"" )
	OpenTutorials;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kBasicsTutorial"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBasicsTutorialAnnot"))
	-category   ("Menu items.Help")
	-command 	( "doOpenFile (`getenv MAYA_LOCATION` + \"/Examples/Tutorials/Basics/Basics_Tutorial.ma\")" )
	OpenBasicsTutorial;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kViewAllTutorials"))
	-annotation (uiRes("m_defaultRunTimeCommands.kViewAllTutorialsAnnot"))
	-category   ("Menu items.Help")
	-command 	("launch -web \"https://area.autodesk.com/all/tutorials/maya/?type=Interactive%20Tutorial\"")
	ViewAllTutorials;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kQuickTour"))
	-annotation (uiRes("m_defaultRunTimeCommands.kQuickTourTutorialAnnot"))
	-category   ("Menu items.Help")
	-command 	("python(\"from maya.app.quickTour.quickTour import runQuickTour; runQuickTour()\")")
	QuickTour;


$tutorialTrialsURL = (uiRes("m_defaultRunTimeCommands.kTutorialTrialsURL"));
runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kTutorialsTrialsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTutorialsTrialsAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $tutorialTrialsURL + "\"" )
	OpenTrialTutorials;

// Learning Path
//
	$extraLearningURL = (uiRes("m_defaultRunTimeCommands.kExtraLearningURL"));
runTimeCommand -default true  
    -label 		(uiRes("m_defaultRunTimeCommands.kExtraLearningResLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExtraLearningResAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $extraLearningURL + "\"" )
	OpenLearningPath;

// Scripting Reference submenu
//

runTimeCommand -default true  
    -label 		(uiRes("m_defaultRunTimeCommands.kMELCommandRefLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMELCommandRefAnnot"))
	-category   ("Menu items.Help")
	-command 	"showHelp DocsMelCommands"
	OpenMelCmdRef;

runTimeCommand -default true   
    -label 		(uiRes("m_defaultRunTimeCommands.kPythonCommandRefLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPythonCommandRefAnnot"))
	-category   ("Menu items.Help")
	-command 	"showHelp DocsPythonCommands"
	OpenPyCmdRef;

runTimeCommand -default true   
    -label 		(uiRes("m_defaultRunTimeCommands.kNodeAttrRefLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeAttrRefAnnot"))
	-category   ("Menu items.Help")
	-command 	"showHelp DocsNodes"
	OpenNodeAttrRef;

// AREA Community
//
$theAreaURL = (uiRes("m_defaultRunTimeCommands.kTheAreaURL"));
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kTheAreaLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTheAreaAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $theAreaURL + "\"" )
	OpenAREACommunity;

// AREA Discussion Forum
//
	$theAreaForumURL = (uiRes("m_defaultRunTimeCommands.kTheAreaForumURL"));
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kTheAreaForumLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTheAreaForumAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $theAreaForumURL + "\"" )
	OpenAREAForums;

// Facebook
//
	$facebookURL = (uiRes("m_defaultRunTimeCommands.kFacebookURL"));
	$annotation = (uiRes("m_defaultRunTimeCommands.kFacebookAnn"));
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFacebookLbl")) 
	-annotation $annotation
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $facebookURL + "\"" )
	OpenFacebook;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kBrowserSetupAssistantLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBrowserSetupAssistantAnnot"))
	-category   ("Menu items.Help")
	-command 	"BrowserSetupAssistant()"
	OpenBrowserSetupAssistant;

string $downloadBonusToolsURL = (uiRes("m_defaultRunTimeCommands.kDownloadBonusToolsURL"));
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kDownloadBonusToolsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDownloadBonusToolsAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $downloadBonusToolsURL + "\"" )
	DownloadBonusTools;

// Autodesk Account
//
string $autodeskAccountURL = (uiRes("m_defaultRunTimeCommands.kAutodeskAccountURL"));
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kAutodeskAccountLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAutodeskAccountAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $autodeskAccountURL + "\"" )
	OpenAutodeskAccount;

// Release Notes Updates
//
	$releaseNotesURL = (uiRes("m_defaultRunTimeCommands.kReleaseNotesURL"));
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kOnlineRelNotesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOnlineRelNotesAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $releaseNotesURL + "\"" )
	OpenReleaseNotes;

// Support Center
//
	$supportMayaURL = (uiRes("m_defaultRunTimeCommands.kSupportMayaURL"));
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kSupportCenterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSupportCenterAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $supportMayaURL + "\"" )
	OpenSupportCenter;	

	$reportAProblemURL = "http://www.autodesk.com/maya-bugreport";
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kReportAProblemLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReportAProblemAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $reportAProblemURL + "\"" )
	OpenBugReport;	

// Ideas...
//
	$featureIdeasURL = (uiRes("m_defaultRunTimeCommands.kFeatureIdeasURL"));
	$featureIdeasLabel = (uiRes("m_defaultRunTimeCommands.kFeatureIdeasLabel"));
runTimeCommand -default true   
	-label 		$featureIdeasLabel
	-annotation (uiRes("m_defaultRunTimeCommands.kFeatureIdeasAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $featureIdeasURL + "\"" )
	OpenFeatureRequest;

// Join Product Research...
//
$productResearchAnn = (uiRes("m_defaultRunTimeCommands.kProductResearchAnnot"));

// This is a MURL link so does not need to be localized
$productResearchURL = "https://autode.sk/3pSGTHZ";

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kProductResearchLbl"))
	-annotation $productResearchAnn
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $productResearchURL + "\"" )
	OpenProductResearch;

runTimeCommand -default true   
	-label 		(uiRes("m_defaultRunTimeCommands.kDesktopAnalyticsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDesktopAnalyticsAnnot"))
	-category   ("Menu items.Help")
	-command 	"evalDeferred(\"adpAnalyticsDialog -desktopAnalytics\")"
	OpenDesktopAnalytics;

$mayaExchangeURL = (uiRes("m_defaultRunTimeCommands.kMayaExchangeURL"));
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kExchangeAppsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExchangeAppsAnnot"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $mayaExchangeURL + "\"" )
	OpenAutodeskExchange;

$autodeskOnlineStoreURL = (uiRes("m_defaultRunTimeCommands.kAutodeskOnlineStoreURL"));

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kAutodeskStore"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOnlineStoreAnn"))
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $autodeskOnlineStoreURL + "\"" )
	OpenAutodeskStore;

string $FBXReviewURL = "http://area.autodesk.com/products/features/fbx";
runTimeCommand -default true  
	-label 		"FBX Review"
	-image 		"fbxReview.png"
	-annotation "FBX Review:  http://area.autodesk.com/products/features/fbx"
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $FBXReviewURL + "\"" )
	OpenFBXReview;

string $characterGeneratorURL = "https://charactergenerator.autodesk.com/";
runTimeCommand -default true 
	-label 		"Character Generator"
	-image 		"CGen.png"
	-annotation "Character Generator:  https://charactergenerator.autodesk.com/" 
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $characterGeneratorURL + "\"" )
	OpenCharacterGenerator;

string $tinkercadURL = "https://www.tinkercad.com/";
runTimeCommand -default true 
	-label 		"Tinkercad"
	-image 		"tinkercad.svg"
	-annotation "Tinkercad:  https://www.tinkercad.com/"
	-category   ("Menu items.Help")
	-command 	( "showHelp -absolute \"" + $tinkercadURL + "\"" )
	OpenTinkercad;

//	Product information.
//
$label = (uiRes("m_defaultRunTimeCommands.kAboutMaya"));
$annotation = (uiRes("m_defaultRunTimeCommands.kAboutMayaAnn"));
runTimeCommand -default true
	-label 		$label
	-annotation $annotation
	-category   ("Menu items.Help.Autodesk Product Information")
	-command    ("about")
	ProductInformation;

// Home Page
//
	$mayaHomeURL = (uiRes("m_defaultRunTimeCommands.kMayaHomeURL"));
	$label = (uiRes("m_defaultRunTimeCommands.kMayaHome"));
	$annotation = (uiRes("m_defaultRunTimeCommands.kMayaHomeAnn"));
runTimeCommand -default true 
	-label 		$label
	-annotation $annotation
	-category   ("Menu items.Help.Autodesk Product Information")
	-command 	( "showHelp -absolute \"" + $mayaHomeURL + "\"" )
	OpenHomePage;


//	Open a Help window.
//
$label = (uiRes("m_defaultRunTimeCommands.kMayaHelp"));
runTimeCommand -default true
	-label 		$label
	-annotation (uiRes("m_defaultRunTimeCommands.kHelpLibraryAnnot"))
	-image 		(languageResourcePath("menuIconHelp.png"))
	-category   ("Menu items.Help")
	-command    ("checkHelpPrefs")
	Help;
}
commonMenus();

// ======================================================================
// ======================================================================
//
//	Modeling menu set, ie. Edit Curves, NURBS, Edit NURBS,
//	Polygons, Edit Polygons, Polygon UVs and Subdiv Surfaces.
//
// ======================================================================
// ======================================================================
proc modelingMenus() {
//
//	Edit Curves menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kDuplicateCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateCurveAnnot"))
	-image "duplicateCurve.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("duplicateCurveToolScript 4")
	DuplicateCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("duplicateCurveToolScript 3")
	DuplicateCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAttachCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachCurveAnnot"))
	-image "attachCurves.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("attachCrvToolScript 4")
	AttachCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("attachCrvToolScript 3")
	AttachCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDetachCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachCurveAnnot"))
	-image "detachCurve.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("detachCurveToolScript 4")
	DetachCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("detachCurveToolScript 3")
	DetachCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAlignCurveLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignCurveAnnot"))
	-image "alignCurve.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("alignCurveToolScript 4")
	AlignCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("alignCurveToolScript 3")
	AlignCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOpenCloseCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenCloseCurveAnnot"))
	-image "closeGeom.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("closeCurveToolScript 4")
	OpenCloseCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenCloseCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("closeCurveToolScript 3")
	OpenCloseCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCutCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCutCurveAnnot"))
	-image "cutCurves.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("cutCurveToolScript 4")
	CutCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCutCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("cutCurveToolScript 3")
	CutCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kIntersectCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kIntersectCurveAnnot"))
	-image "intersectCurves.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("intersectCurveToolScript 4")
	IntersectCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIntersectCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("intersectCurveToolScript 3")
	IntersectCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCurveFilletLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveFilletAnnot"))
	-image "fillet.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("filletCurveToolScript 4")
	CurveFillet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveFilletOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("filletCurveToolScript 3")
	CurveFilletOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kInsertKnotLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKnotAnnot"))
	-image "insertKnot.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("insertCurveToolScript 4")
	InsertKnot;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKnotOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("insertCurveToolScript 3")
	InsertKnotOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExtendCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendCurveAnnot"))
	-image "extend.png"
	-category   ("Menu items.Modeling.Curves.Extend")
	-command    ("extendCurveToolScript 4")
	ExtendCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves.Extend")
	-command    ("extendCurveToolScript 3")
	ExtendCurveOptions;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kExtendCurveOnSurfaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendCurveOnSurfaceAnnot"))
	-image "extendCos.png"
	-category   ("Menu items.Modeling.Curves.Extend")
	-command    ("extendCosCurveToolScript 4")
	ExtendCurveOnSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendCurveOnSurfaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves.Extend")
	-command    ("extendCosCurveToolScript 3")
	ExtendCurveOnSurfaceOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOffsetCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetCurveAnnot"))
	-image "offsetCurve.png"
	-category   ("Menu items.Modeling.Curves.Offset")
	-command    ("offsetCurveToolScript 4")
	OffsetCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves.Offset")
	-command    ("offsetCurveToolScript 3")
	OffsetCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOffsetCurveOnSurfaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetCurveOnSurfaceAnnot"))
	-image "offsetCos.png"
	-category   ("Menu items.Modeling.Curves.Offset")
	-command    ("offsetCosToolScript 4")
	OffsetCurveOnSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetCurveOnSurfaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves.Offset")
	-command    ("offsetCosToolScript 3")
	OffsetCurveOnSurfaceOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kReverseCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kReverseCurveAnnot"))
	-image "reverse.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("reverseCurveToolScript 4")
	ReverseCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReverseCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("reverseCurveToolScript 3")
	ReverseCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRebuildCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRebuildCurveAnnot"))
	-image "rebuildCurve.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("rebuildCurveToolScript 4")
	RebuildCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRebuildCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("rebuildCurveToolScript 3")
	RebuildCurveOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFitBSplineLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFitBSplineAnnot"))
	-image "fitBSpline.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("fitBsplineToolScript 4")
	FitBSpline;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFitBSplineOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("fitBsplineToolScript 3")
	FitBSplineOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSmoothCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothCurveAnnot"))
	-image "smoothCurve.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("smoothCurveToolScript 4")
	SmoothCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("smoothCurveToolScript 3")
	SmoothCurveOptions;

$annotation = (uiRes("m_defaultRunTimeCommands.kAnchorPresetsForBezierCurves"));

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierPresetBezier"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorPreset -p 0;"
	BezierPresetBezier;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierPresetBezierCorner"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorPreset -p 1;"
	BezierPresetBezierCorner;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierPresetCorner"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorPreset -p 2;"
	BezierPresetCorner;

$annotation = (uiRes("m_defaultRunTimeCommands.kTangentOptionsForBezierCurves"));

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierSetAnchorSmooth"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorState -sm 1"
	BezierSetAnchorSmooth;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierSetAnchorBroken"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorState -sm 0"
	BezierSetAnchorBroken;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierSetAnchorEven"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorState -ev 1"
	BezierSetAnchorEven;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBezierSetAnchorUneven"))
	-annotation $annotation
	-category   ("Menu items.Modeling.Curves")
	-command "bezierAnchorState -ev 0"
	BezierSetAnchorUneven;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCVHardnessLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCVHardnessAnnot"))
	-image "cvHardness.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("cvHardnessToolScript 4")
	CVHardness;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCVHardnessOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("cvHardnessToolScript 3")
	CVHardnessOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddPointsToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAddPointsToolAnnot"))
	-image "curveAddPt.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("curveAddPtToolScript 4")
	AddPointsTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCurveEditToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveEditToolAnnot"))
	-image "curveEditor.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("curveEditorToolScript 4")
	CurveEditTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMoveSeamLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveSeamAnnot")) 
	-image "newSeamLocation.png" 
	-category   ("Menu items.Modeling.Curves")
	-command "moveNurbsCurveSeam"
	MoveCurveSeam;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kProjectTangentLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectTangentAnnot"))
	-image "projectTangent.png"
	-category   ("Menu items.Modeling.Curves")
	-command    ("projectTangentToolScript 4")
	ProjectTangent;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectTangentOptionsAnnot"))
	-category   ("Menu items.Modeling.Curves")
	-command    ("projectTangentToolScript 3")
	ProjectTangentOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCurveCVsAllLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCurveCVsAllAnnot"))
	-image 		"selectCVs.png"
	-category   ("Menu items.Common.Select")
	-command    ("selectCurveCV all")
	SelectCurveCVsAll;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCurveCVsFirstLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCurveCVsFirstAnnot"))
	-image 		"selectFirstCV.png"
	-category   ("Menu items.Common.Select")
	-command    ("selectCurveCV first")
	SelectCurveCVsFirst;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCurveCVsLastLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCurveCVsLastAnnot"))
	-image 		"selectLastCV.png"
	-category   ("Menu items.Common.Select")
	-command    ("selectCurveCV last")
	SelectCurveCVsLast;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kClusterCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kClusterCurveAnnot"))
	-image 		"selectCluster.png"
	-category   ("Menu items.Common.Select")
	-command    ("clusterCurve")
	ClusterCurve;

	string $menuCategory = "Menu items.Modeling.Curves;Menu items.Dynamics.nHair.Modify Curves";

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kLockCurveLengthLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLockCurveLengthAnnot"))
	-image "lockLength.png"
	-category   $menuCategory
	-command    ("setCurveLengthLock 1")
	LockCurveLength;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUnlockCurveLengthLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnlockCurveLengthAnnot"))
	-image "unlockLength.png"
	-category   $menuCategory
	-command    ("setCurveLengthLock 0")
	UnlockCurveLength;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kStraightenCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kStraightenCurvesAnnot"))
	-image "modifyStraighten.png"
	-category   $menuCategory
	-command    ("performStraighten 0 ")
	StraightenCurves;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStraightenCurvesOptionsAnnot"))
	-category   $menuCategory
	-command    ("performStraighten 1")
	StraightenCurvesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSmoothHairCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothHairCurvesAnnot"))
	-image "modifySmooth.png"
	-category   $menuCategory
	-command    ("performSmoothHairCurves 0 ")
	SmoothHairCurves;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothHairCurvesOptionsAnnot"))
	-category   $menuCategory
	-command    ("performSmoothHairCurves 1")
	SmoothHairCurvesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kScaleCurvatureLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleCurvatureAnnot"))
	-image "modifyScaleCurvature.png"
	-category   $menuCategory
	-command    ("performScaleCurvature 0 ")
	ScaleCurvature;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleCurvatureOptionsAnnot"))
	-category   $menuCategory
	-command    ("performScaleCurvature 1")
	ScaleCurvatureOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCurlCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCurlCurvesAnnot"))
	-image "modifyCurl.png"
	-category   $menuCategory
	-command    ("performCurlCurves 0 ")
	CurlCurves;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurlCurvesOptionsAnnot"))
	-category   $menuCategory
	-command    ("performCurlCurves 1")
	CurlCurvesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBendCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBendCurvesAnnot"))
	-image "modifyBend.png"
	-category   $menuCategory
	-command    ("performBendCurves 0 ")
	BendCurves;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBendCurvesOptionsAnnot"))
	-category   $menuCategory
	-command    ("performBendCurves 1")
	BendCurvesOptions;

//
//	Surfaces menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRevolveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRevolveAnnot"))
	-image "revolve.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("revolveToolScript 4")
	Revolve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRevolveOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("revolveToolScript 3")
	RevolveOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLoftLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLoftAnnot"))
	-image "skin.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("loftToolScript 4")
	Loft;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLoftOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("loftToolScript 3")
	LoftOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPlanarLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPlanarAnnot"))
	-image "planarTrim.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("planarToolScript 4")
	Planar;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPlanarOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("planarToolScript 3")
	PlanarOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExtrudeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeAnnot"))
	-image "extrude.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("extrudeToolScript 4")
	Extrude;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("extrudeToolScript 3")
	ExtrudeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBirail1Lbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail1Annot"))
	-image "birail1Gen.png"
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 4 1")
	Birail1;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail1OptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 3 1")
	Birail1Options;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kBirail2Lbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail2Annot"))
	-image "birail2Gen.png"
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 4 2")
	Birail2;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail2OptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 3 2")
	Birail2Options;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kBirail3Lbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail3Annot"))
	-image "birail3Gen.png"
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 4 3")
	Birail3;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBirail3OptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Birail")
	-command    ("birailToolScript 3 3")
	Birail3Options;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBoundaryLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBoundaryAnnot"))
	-image "boundary.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("boundaryToolScript 4")
	Boundary;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBoundaryOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("boundaryToolScript 3")
	BoundaryOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSquareSurfaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSquareSurfaceAnnot"))
	-image "squareSrf.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("squareSrfToolScript 4")
	SquareSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSquareSurfaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("squareSrfToolScript 3")
	SquareSurfaceOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBevelLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelAnnot"))
	-image "bevel.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("bevelToolScript 4")
	Bevel;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("bevelToolScript 3")
	BevelOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBevelPlusLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelPlusAnnot"))
	-image "bevelPlus.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("bevelPlusToolScript 4")
	BevelPlus;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelPlusOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("bevelPlusToolScript 3")
	BevelPlusOptions;

//
//	Edit NURBS menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDuplicateNURBSPatchesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateNURBSPatchesAnnot"))
	-image "duplicateSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("duplicateSurfaceToolScript 4")
	DuplicateNURBSPatches;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateNURBSPatchesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("duplicateSurfaceToolScript 3")
	DuplicateNURBSPatchesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kProjectCurveOnSurfaceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectCurveOnSurfaceAnnot"))
	-image "projectCurve.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("projectToolScript 4")
	ProjectCurveOnSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectCurveOnSurfaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("projectToolScript 3")
	ProjectCurveOnSurfaceOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kIntersectSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kIntersectSurfacesAnnot"))
	-image "srfIntersect.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("intersectToolScript 4")
	IntersectSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIntersectSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("intersectToolScript 3")
	IntersectSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kTrimToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTrimToolAnnot"))
	-image "trim.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("trimToolScript 4")
	TrimTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTrimToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("trimToolScript 3")
	TrimToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUntrimSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUntrimSurfacesAnnot"))
	-image "untrim.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("untrimToolScript 4")
	UntrimSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUntrimSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("untrimToolScript 3")
	UntrimSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanUnionToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanUnionToolAnnot"))
	-image "nurbsShellUnion.png"
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 4 0")
	SurfaceBooleanUnionTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanUnionToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 3 0")
	SurfaceBooleanUnionToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanSubtractToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanSubtractToolAnnot"))
	-image "nurbsShellSubtract.png"
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 4 1")
	SurfaceBooleanSubtractTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanSubtractToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 3 1")
	SurfaceBooleanSubtractToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanIntersectToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanIntersectToolAnnot"))
	-image "nurbsShellIntersect.png"
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 4 2")
	SurfaceBooleanIntersectTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceBooleanIntersectToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Booleans")
	-command    ("nurbsBooleanToolScript 3 2")
	SurfaceBooleanIntersectToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAttachSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachSurfacesAnnot"))
	-image "align.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("attachSrfToolScript 4")
	AttachSurfaces;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAttachSurfacesOptionsAnnot"))
		-category   ("Menu items.Modeling.Surfaces")
		-command    ("attachSrfToolScript 3")
		AttachSurfacesOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kAttachSurfaceWithoutMovingLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachSurfaceWithoutMovingAnnot")) 
	-image "attachWithoutMoving.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command "attachWithoutMoving"
	AttachSurfaceWithoutMoving;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDetachSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSurfacesAnnot"))
	-image "detach.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("detachSurfaceToolScript 4")
	DetachSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("detachSurfaceToolScript 3")
	DetachSurfacesOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kMoveSurfaceSeamLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveSurfaceSeamAnnot")) 
	-image 		"moveSeam.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command 	"moveNurbsSurfaceSeam" 
	MoveSurfaceSeam;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAlignSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignSurfacesAnnot"))
	-image "alignSurface.png" 
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("alignSurfaceToolScript 4")
	AlignSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("alignSurfaceToolScript 3")
	AlignSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOpenCloseSurfacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenCloseSurfacesAnnot"))
	-image "openCloseSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("closeSurfaceToolScript 4")
	OpenCloseSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOpenCloseSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("closeSurfaceToolScript 3")
	OpenCloseSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kInsertIsoparmsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertIsoparmsAnnot"))
	-image "insert.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("insertSurfaceToolScript 4")
	InsertIsoparms;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertIsoparmsOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("insertSurfaceToolScript 3")
	InsertIsoparmsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExtendSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendSurfacesAnnot"))
	-image "extendSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("extendSurfaceToolScript 4")
	ExtendSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtendSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("extendSurfaceToolScript 3")
	ExtendSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOffsetSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetSurfacesAnnot"))
	-image "offsetSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("offsetSurfaceToolScript 4")
	OffsetSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("offsetSurfaceToolScript 3")
	OffsetSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kReverseSurfaceDirectionLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kReverseSurfaceDirectionAnnot"))
	-image "reverseSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("reverseSurfaceToolScript 4")
	ReverseSurfaceDirection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReverseSurfaceDirectionOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("reverseSurfaceToolScript 3")
	ReverseSurfaceDirectionOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRebuildSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRebuildSurfacesAnnot"))
	-image "rebuildSurface.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("rebuildSurfaceToolScript 4")
	RebuildSurfaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRebuildSurfacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("rebuildSurfaceToolScript 3")
	RebuildSurfacesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRoundToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRoundToolAnnot"))
	-image 		"roundSrf.png"
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("roundToolScript 4")
	RoundTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRoundToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces")
	-command    ("roundToolScript 3")
	RoundToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCircularFilletLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCircularFilletAnnot"))
	-image "surfaceFillet.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("circFilletToolScript 4")
	CircularFillet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCircularFilletOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("circFilletToolScript 3")
	CircularFilletOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kFreeformFilletLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFreeformFilletAnnot"))
	-image "filletFreeform_S.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("freeFilletToolScript 4")
	FreeformFillet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFreeformFilletOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("freeFilletToolScript 3")
	FreeformFilletOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kFilletBlendToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFilletBlendToolAnnot"))
	-image "blendSurface.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("blendToolScript 4")
	FilletBlendTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFilletBlendToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Surface Fillet")
	-command    ("blendToolScript 3")
	FilletBlendToolOptions;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kStitchSurfacePointsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchSurfacePointsAnnot"))
	-image "stitchSurfacePoints.png"
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("performStitchSurfacePoints(0)")
	StitchSurfacePoints;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchSurfacePointsOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("performStitchSurfacePoints(1)")
	StitchSurfacePointsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kStitchEdgesToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchEdgesToolAnnot"))
	-image "stitchSrf.png"
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("stitchSrfToolScript 4")
	StitchEdgesTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchEdgesToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("stitchSrfToolScript 3")
	StitchEdgesToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kGlobalStitchLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGlobalStitchAnnot"))
	-image "globalStitch.png"
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("globalStitchToolScript 4")
	GlobalStitch;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGlobalStitchOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Stitch")
	-command    ("globalStitchToolScript 3")
	GlobalStitchOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSculptGeometryToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptGeometryToolAnnot"))
	-image "putty.png"
	-category   ("Menu items.Modeling.Mesh Tools;Menu items.Modeling.Surfaces")
	-command    ("artPuttyToolScript 4")
	SculptGeometryTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptGeometryToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools;Menu items.Modeling.Surfaces")
	-command    ("artPuttyToolScript 3")
	SculptGeometryToolOptions;

// legacy command - replaced by SculptGeometryTool
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptSurfacesToolAnnot"))
	-category   ("Other items.Edit NURBS")
	-command    ("artPuttyToolScript 4")
	-showInHotkeyEditor false
	SculptSurfacesTool;

// legacy command - replaced by SculptGeometryToolOptions
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptSurfacesToolOptionsAnnot"))
	-category   ("Other items.Edit NURBS")
	-command    ("artPuttyToolScript 3")
	-showInHotkeyEditor false
	SculptSurfacesToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSurfaceEditingToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceEditingToolAnnot"))
	-image "surfaceEditor.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Editing")
	-command    ("surfaceEditorToolScript 4")
	SurfaceEditingTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceEditingToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Surfaces.Surface Editing")
	-command    ("surfaceEditorToolScript 3")
	SurfaceEditingToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBreakTangentLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBreakTangentAnnot"))
	-image "breakSrfTangent.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Editing")
	-command    ("breakTangentToolScript 4")
	BreakTangent;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSmoothTangentLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothTangentAnnot"))
	-image "smoothTangent.png"
	-category   ("Menu items.Modeling.Surfaces.Surface Editing")
	-command    ("smoothTangentToolScript 4")
	SmoothTangent;

//
//	Mesh menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreatePolygonToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonToolLongAnnot"))
	-image "polyCreateFacet.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyCreateFacetContext ; " +
	             "polyCreateFacetCtx -e -pc `optionVar " +
				 "-q polyKeepFacetsPlanar` polyCreateFacetContext")
	CreatePolygonTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePolygonToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyCreateFacetContext ; " +
	             "polyCreateFacetCtx -e -pc `optionVar " +
	             "-q polyKeepFacetsPlanar` polyCreateFacetContext; " +
	             "toolPropertyWindow")
	CreatePolygonToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCombinePolygonsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCombinePolygonsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCombinePolygonsLongAnnot"))
	-image 		"polyUnite.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("polyPerformAction polyUnite o 0")
	CombinePolygons;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCombinePolygonsOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("polyPerformAction polyUnite o 1")
	CombinePolygonsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolySeparateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySeparateAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolySeparateLongAnnot"))
	-image 		"polySeparate.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyShellSeparate")
	SeparatePolygon;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonBooleanUnionLbl")) 	
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanUnionAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanUnionLongAnnot"))
	-image 		"polyBooleansUnion.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 1 o 0")
	PolygonBooleanUnion;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanUnionOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 1 o 1")
	PolygonBooleanUnionOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonBooleanDifferenceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanDifferenceAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanDifferenceLongAnnot"))
	-image 		"polyBooleansDifference.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 2 o 0")
	PolygonBooleanDifference;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanDifferenceOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 2 o 1")
	PolygonBooleanDifferenceOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonBooleanIntersectionLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanIntersectionAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanIntersectionLongAnnot"))
	-image 		"polyBooleansIntersection.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 3 o 0")
	PolygonBooleanIntersection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonBooleanIntersectionOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 3 o 1")
	PolygonBooleanIntersectionOptions;



runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonDifferenceBALbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonDifferenceBAAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonDifferenceBALongAnnot"))
	-image 		"Bool_BMinusA.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 4 o 0")
	PolygonBooleanDifferenceBA;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonDifferenceBAOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 4 o 1")
	PolygonBooleanDifferenceBAOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonSliceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSliceAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonSliceLongAnnot"))
	-image 		"Bool_Slice.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 5 o 0")
	PolygonBooleanSlice;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSliceOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 5 o 1")
	PolygonBooleanSliceOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonHolePunchLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonHolePunchAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonHolePunchLongAnnot"))
	-image 		"Bool_HolePunch.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 6 o 0")
	PolygonBooleanHolePunch;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonHolePunchOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 6 o 1")
	PolygonBooleanHolePunchOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonCutOutLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCutOutAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonCutOutLongAnnot"))
	-image 		"Bool_CutOut.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 7 o 0")
	PolygonBooleanCutOut;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCutOutOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 7 o 1")
	PolygonBooleanCutOutOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonSplitEdgesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSplitEdgesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonSplitEdgesLongAnnot"))
	-image 		"Bool_SplitEdges.png" 
	-category   ("Menu items.Modeling.Mesh.Booleans")
	-command    ("polyPerformBooleanAction 8 o 0")
	PolygonBooleanSplitEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSplitEdgesOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Booleans")

	-command    ("polyPerformBooleanAction 8 o 1")
	PolygonBooleanSplitEdgesOptions;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConformPolygonGeometryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConformPolygonGeometryAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kConformPolygonGeometryLongAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyConform 0")
	ConformPolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kConformPolygonGeometryOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyConform 1")
	ConformPolygonOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMirrorPolygonGeometryLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorPolygonGeometryAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMirrorPolygonGeometryLongAnnot"))
	-image 		"polyMirrorGeometry.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyMirror 0")
	MirrorPolygonGeometry;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorPolygonGeometryOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyMirror 1")
	MirrorPolygonGeometryOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorCutPolygonGeometryAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyMirrorCut 0")
	MirrorCutPolygonGeometry;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorCutPolygonGeometryOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyMirrorCut 1")
	MirrorCutPolygonGeometryOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSmoothPolygonLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothPolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSmoothPolygonLongAnnot"))
	-image 		"polySmooth.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolySmooth 0")
	SmoothPolygon;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAverageVertexLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAverageVertexAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAverageVertexLongAnnot"))
	-image 		"polyAverageVertex.png"
	-category   ("Menu items.Modeling.Edit Mesh;Other items.Mesh")
	-command    ("performPolyAverageVertex 0")
	AverageVertex;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothPolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolySmooth 1")
	SmoothPolygonOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kReducePolygonLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kReducePolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kReducePolygonLongAnnot"))
	-image 		"polyReduce.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyReduce 0")
	ReducePolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReducePolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyReduce 1")
	ReducePolygonOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTriangulateLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTriangulateAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTriangulateLongAnnot"))
	-image 		"polyTriangulate.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("polyPerformAction polyTriangulate f 0")
	Triangulate;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kQuadrangulateLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kQuadrangulateAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kQuadrangulateLongAnnot"))
	-image 		"polyQuad.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyQuadrangulate 0")
	Quadrangulate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kQuadrangulateOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyQuadrangulate 1")
	QuadrangulateOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRemeshLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemeshAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemeshLongAnnot"))
	-image 		"polyRemesh.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyRemesh 0")
	PolyRemesh;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemeshOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyRemesh 1")
	PolyRemeshOptions;

		runTimeCommand -default true
		    -label 		(uiRes("m_defaultRunTimeCommands.kRetopoLbl")) 
		    -annotation (uiRes("m_defaultRunTimeCommands.kRetopoAnnot"))
		    -longAnnotation (uiRes("m_defaultRunTimeCommands.kRetopoLongAnnot"))
		    -image 		"polyRetopo.png"
		    -category   ("Menu items.Modeling.Mesh")
		    -command    ("performPolyRetopo 0")
		    PolyRetopo;

	    runTimeCommand -default true
		    -annotation (uiRes("m_defaultRunTimeCommands.kRetopoOptionsAnnot"))
		    -category   ("Menu items.Modeling.Mesh")
		    -command    ("performPolyRetopo 1")
		    PolyRetopoOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTransferVertexOrderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTransferVertexOrderAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTransferVertexOrderLongAnnot"))
	-image 		"transferIDs.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performTransferVertexOrder")
	TransferVertexOrder;
	
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCleanupPolygonLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCleanupPolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCleanupPolygonLongAnnot"))
	-image 		"polyCleanup.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("performPolyCleanup 0")
	CleanupPolygon;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCleanupPolygonOptionsAnnot"))
		-category   ("Menu items.Modeling.Mesh")
		-command    ("performPolyCleanup 1")
		CleanupPolygonOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyReduceWeightsToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyReduceWeightsToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyReduceWeightsToolLongAnnot"))
	-image "polyPaintReduceWeights.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("polyLaunchPaintReduceTool")
	PaintReduceWeightsTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyReduceWeightsToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("PaintReduceWeightsTool; toolPropertyWindow;")
	PaintReduceWeightsToolOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPaintTransferAttributesWeightsToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintTransferAttributesWeightsToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintTransferAttributesWeightsToolLongAnnot"))
	-image "polyTransferAttributesWeights.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command "artAttrToolScript 4 \"transferAttributes\"" 
	PaintTransferAttributes;
			
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMTKQuadDrawToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMTKQuadDrawToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMTKQuadDrawToolLongAnnot"))
    -image "quadDraw_NEX32.png" 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command "dR_quadDrawTool" 
	QuadDrawTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeOptionsAnnot"))
	-category   ("Other items.Mesh")
	-command    ("performPolyExtrude 1")
	-showInHotkeyEditor false
	PolyExtrudeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExtractFaceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExtractFaceAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kExtractFaceLongAnnot"))
	-image "polyChipOff.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChipOff 0 0")
	ExtractFace;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtractFaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChipOff 1 0")
	ExtractFaceOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMakeHoleToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeHoleToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMakeHoleToolLongAnnot"))
	-image "polyMergeFacet.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyMergeFacetContext")
	MakeHoleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeHoleToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyMergeFacetContext; toolPropertyWindow;")
	MakeHoleToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMTKMultiCutToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMTKMultiCutToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMTKMultiCutToolLongAnnot"))
	-image "multiCut_NEX32.png" 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command "dR_multiCutTool" 
	MultiCutTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFillHoleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFillHoleAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kFillHoleLongAnnot"))
	-image 		"polyCloseBorder.png"
	-category   ("Menu items.Modeling.Mesh")
	-command    ("polyPerformAction polyCloseBorder e 0")
	FillHole;

// legacy command - replaced by SculptGeometryTool
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptPolygonsToolAnnot"))
	-category   ("Other items.Mesh")
	-command    ("artPuttyToolScript 4")
	-showInHotkeyEditor false
	SculptPolygonsTool;

// legacy command - replaced by SculptGeometryToolOptions
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptPolygonsToolOptionsAnnot"))
	-category   ("Other items.Mesh")
	-command    ("artPuttyToolScript 3")
	-showInHotkeyEditor false
	SculptPolygonsToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonCopyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCopyAnnot"))
	-image 		"polyCopyColors.png"
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 0 1")
	PolygonCopy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCopyOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 1 1")
	PolygonCopyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonPasteLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonPasteAnnot"))
	-image 		"polyPasteColors.png"
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 0 2")
	PolygonPaste;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonPasteOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 1 2")
	PolygonPasteOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonClearClipboardLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonClearClipboardAnnot"))
	-image 		"polyClearColors.png"
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 0 3")
	PolygonClearClipboard;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonClearClipboardOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Clipboard Actions")
	-command    ("performPolyCopyPaste 1 3")
	PolygonClearClipboardOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTransferAttributeslbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTransferAttributesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTransferAttributesLongAnnot"))
	-image 		"polyTransferAttributes.png"
	-category   ("Menu items.Modeling.Mesh;Other items.Mesh")
	-command    ("performTransferAttributes 0")
	TransferAttributes;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kTransferShadingSetsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTransferShadingSetsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTransferShadingSetsLongAnnot"))
	-image 		"polyTransferShadingSets.png"
	-category   ("Menu items.Modeling.Mesh;Other items.Mesh")
	-command "performTransferShadingSets 0" 
	TransferShadingSets;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyMeshAttributesAnnot"))
	-category   ("Other items.Mesh")
	-command    ("performPolyTransfer 0")
	-showInHotkeyEditor false
	CopyMeshAttributes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyUVSelectSharedAnnot"))
	-category   ("Menu items.Modeling.UV.Per Instance Sharing")
	-command    ("evalEcho(\"polyUVSelectSharedInstances\")")
	SelectSharedUVInstances;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyUVShareInstancesAnnot"))
	-category   ("Menu items.Modeling.UV.Per Instance Sharing")
	-command    ("evalEcho(\"polyUVShareInstances\")")
	ShareUVInstances;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyUVMakeInstanceCurrentAnnot"))
	-category   ("Menu items.Modeling.UV.Per Instance Sharing")
	-command    ("polyUVMakeInstanceCurrent")
	MakeUVInstanceCurrent;

//
//	Edit Mesh menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAppendToPolygonToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAppendToPolygonToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAppendToPolygonToolLongAnnot"))
	-image "polyAppendFacet.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyAppendFacetContext ; " +
	             "polyAppendFacetCtx -e -pc `optionVar " +
	             "-q polyKeepFacetsPlanar` polyAppendFacetContext")
	AppendToPolygonTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAppendToPolygonToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyAppendFacetContext ; " +
	             "polyAppendFacetCtx -e -pc `optionVar " +
	             "-q polyKeepFacetsPlanar` polyAppendFacetContext; " +
	             "toolPropertyWindow")
	AppendToPolygonToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMTKConnectToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMTKConnectToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMTKConnectToolLongAnnot"))
	-image "connect_NEX32.png" 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command "dR_connectTool" 			
	EnterConnectTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddDivisionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolySubdivide \"\" 0")
	AddDivisions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddDivisionsOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolySubdivide \"\" 1")
	AddDivisionsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddFaceDivisionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"f\" 0")
	AddFaceDivisions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddFaceDivisionsOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"f\" 1")
	AddFaceDivisionsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddEdgeDivisionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"e\" 0")
	AddEdgeDivisions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddEdgeDivisionsOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"e\" 1")
	AddEdgeDivisionsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitPolygonToolAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polySplitContext")
	SplitPolygonTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitPolygonToolOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polySplitContext ; toolPropertyWindow")
	SplitPolygonToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInteractiveSplitToolAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polySplitContext2")
	InteractiveSplitTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInteractiveSplitToolOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polySplitContext2 ; toolPropertyWindow")
	InteractiveSplitToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kChamferVertexLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kChamferVertexAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kChamferVertexLongAnnot"))
	-image "polyChamfer.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChamferVertex 0")
	ChamferVertex;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kChamferVertexOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChamferVertex 1")
	ChamferVertexOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kReorderVertexLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReorderVertexAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kReorderVertexLongAnnot"))
	-image "reorderIDs.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyReorderVertex")
	ReorderVertex;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBevelPolygonLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelPolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kBevelPolygonLongAnnot"))
	-image "polyBevel.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performBevelOrChamfer")
	BevelPolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBevelPolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyBevel 1")
	BevelPolygonOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kProjectCurveOnMeshLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectCurveOnMeshAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kProjectCurveOnMeshLongAnnot"))
	-image "projectCurve_Poly.png" 
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performProjectCurveOnMesh 0")
	ProjectCurveOnMesh;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kProjectCurveOnMeshOptions"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performProjectCurveOnMesh 1")
	ProjectCurveOnMeshOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSplitMeshWithProjectedCurveLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitMeshWithProjectedCurveAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSplitMeshWithProjectedCurveLongAnnot"))
	-image "projectCurveSplit_Poly.png" 
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performSplitMeshWithProjectedCurve 0")
	SplitMeshWithProjectedCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitMeshWithProjectedCurveOptions"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performSplitMeshWithProjectedCurve 1")
	SplitMeshWithProjectedCurveOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCutPolygonAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyCut 0")
	CutPolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCutPolygonOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyCut 1")
	CutPolygonOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPokePolygonLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPokePolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPokePolygonLongAnnot"))
	-image "polyPoke.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyPoke 0")
	PokePolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPokePolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyPoke 1")
	PokePolygonOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWedgePolygonLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWedgePolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWedgePolygonLongAnnot"))
	-image "polyWedgeFace.png" 
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyWedgeFace 0")
	WedgePolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWedgePolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyWedgeFace 1")
	WedgePolygonOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyMergeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyMergeLongAnnot"))
	-image "polyMerge.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyMerge 0")
	PolyMerge;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyMerge 1")
	PolyMergeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMergeToCenterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeToCenterAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMergeToCenterLongAnnot"))
	-image "polyMergeToCenter.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("polyMergeToCenter")
	MergeToCenter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetEdgeLoopToolAnnot"))
	-category   ("Other items.Edit Mesh")
	-command    ("performPolyDuplicateEdge 0")
	-showInHotkeyEditor false
	OffsetEdgeLoopTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOffsetEdgeLoopToolOptionsAnnot"))
	-category   ("Other items.Edit Mesh")
	-command    ("performPolyDuplicateEdge 1")
	-showInHotkeyEditor false
	OffsetEdgeLoopToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyConvertToLoopAndDuplicateAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("SelectEdgeLoop;polyDuplicateEdge -ch 1 -offset 0.5 -startVertexOffset 0 -endVertexOffset 0 -deleteEdge 0 -smoothingAngle 180;")
	PolyConvertToLoopAndDuplicate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyConvertToLoopAndDeleteAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("SelectEdgeLoop;DeleteEdge;")
	PolyConvertToLoopAndDelete;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertEdgeLoopToolAnnot"))
	-category   ("Other items.Edit Mesh")
	-command    ("polySelectEditCtx -e -mode 1 polySelectEditContext; setToolTo polySelectEditContext")
	-showInHotkeyEditor false
	InsertEdgeLoopTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertEdgeLoopToolOptionsAnnot"))
	-category   ("Other items.Edit Mesh")
	-command    ("polySelectEditCtx -e -mode 1 polySelectEditContext; setToolTo polySelectEditContext; toolPropertyWindow")
	-showInHotkeyEditor false
	InsertEdgeLoopToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyConvertToRingAndSplitAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polyConvertToRingAndSplit")
	PolyConvertToRingAndSplit;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyConvertToRingAndCollapseAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("SelectEdgeRing;polyCollapseEdge;")
	PolyConvertToRingAndCollapse;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kMergeVertexToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeVertexToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMergeVertexToolLongAnnot"))
	-image "weld_NEX32.png" 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyMergeVertexContext")
	MergeVertexTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeVertexToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyMergeVertexContext; toolPropertyWindow;")
	MergeVertexToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeEdgeToolAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polyMergeEdgeContext")
	MergeEdgeTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeEdgeToolOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("setToolTo polyMergeEdgeContext; toolPropertyWindow;")
	MergeEdgeToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kFlipTriangleEdgeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFlipTriangleEdgeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kFlipTriangleEdgeLongAnnot"))
	-image "polyFlipEdge.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("polyFlipEdge")
	FlipTriangleEdge;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonCollapseLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCollapseAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonCollapseLongAnnot"))
	-image 		"polyCollapseEdge.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyCollapse 0")
	PolygonCollapse;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCollapseEdgesAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyCollapseComponents 0 e")
	PolygonCollapseEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonCollapseFacesAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyCollapseComponents 0 f")
	PolygonCollapseFaces;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDetachComponentLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachComponentAnnot"))
	-image "polySplitVertex.png"
	-category   ("Other items.Polygon Modeling")
	-command    ("performDetachComponents")
	DetachComponent;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachVertexComponentAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performDetachVertices")
	DetachVertexComponent;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachEdgeComponentAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performDetachEdges")
	DetachEdgeComponent;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeletePolyElementsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeletePolyElementsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kDeletePolyElementsLongAnnot"))
	-image "polyDelEdgeVertex.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyDeleteElements")
	DeletePolyElements;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteVertexAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polyDeleteVertex")
	DeleteVertex;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteEdgeAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polyPerformAction \"polyDelEdge -cv true\" e 0")
	DeleteEdge;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDuplicateFaceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateFaceAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kDuplicateFaceLongAnnot"))
	-image "polyDuplicateFacet.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChipOff 0 1")
	DuplicateFace;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateFaceOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyChipOff 1 1")
	DuplicateFaceOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTransformPolygonComponentAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMove \"\" 0")
	TransformPolygonComponent;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTransformPolygonComponentOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMove \"\" 1")
	TransformPolygonComponentOptions;

runTimeCommand	-default true
	-label (uiRes("m_defaultRunTimeCommands.kSlideEdgeLoopToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSlideEdgeLoopToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSlideEdgeLoopToolLongAnnot"))
	-image "slideEdgeTool.png"
	-category	("Menu items.Modeling.Mesh Tools")
	-command	("setToolTo polySlideEdgeContext;")
	SlideEdgeTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSlideEdgeLoopToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polySlideEdgeContext; toolPropertyWindow;")
	SlideEdgeToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBridgeEdgeAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyBridgeEdge 0")
	BridgeEdge;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kBridgeOrFillLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBridgeOrFillAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kBridgeOrFillLongAnnot"))
	-image 		"polyBridge.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performBridgeOrFill")
	BridgeOrFill;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBridgeEdgeOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyBridgeEdge 1")
	BridgeEdgeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCircularizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCircularizeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCircularizeLongAnnot"))
	-image 		"polyCircularize.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyCircularize 0")
	PolyCircularize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCircularizeOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyCircularize 1")
	PolyCircularizeOptions;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kPolyExtrudeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeLongAnnot"))
	-image "polyExtrudeFacet.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 0")
	PolyExtrude;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeForwardsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeForwardsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeForardsLongAnnot"))
	-image "polySpinEdgeForward.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySpinEdge 0")
	PolySpinEdgeForward;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeBackwardsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeBackwardsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolySpinEdgeBackwardsLongAnnot"))
	-image "polySpinEdgeBackward.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySpinEdge 1")
	PolySpinEdgeBackward;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyEditEdgeFlowLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyEditEdgeFlowAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyEditEdgeFlowLongAnnot"))
	-image "polyEditEdgeFlow.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyEditEdgeFlow 0")
	PolyEditEdgeFlow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyEditEdgeFlowOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyEditEdgeFlow 1")
	PolyEditEdgeFlowOptions;



runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeVertsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 3")
	PolyExtrudeVertices;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeVertsOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 4")
	PolyExtrudeVerticesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeEdgesAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 6")
	PolyExtrudeEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeEdgesOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 7")
	PolyExtrudeEdgesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeFacesAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 9")
	PolyExtrudeFaces;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyExtrudeFacesOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyExtrude 10")
	PolyExtrudeFacesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeVertsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMerge 3")
	PolyMergeVertices;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeVertsOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMerge 4")
	PolyMergeVerticesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeEdgeAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMerge 6")
	PolyMergeEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyMergeEdgesOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("performPolyMerge 7")
	PolyMergeEdgesOptions;



    if (!`runTimeCommand -exists XgmSplineSelectConvertToFreeze`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineSelectConvertToFreezeAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "XgmSplineSelectCmd -convertToFreeze"
                XgmSplineSelectConvertToFreeze;
    }

    if (!`runTimeCommand -exists XgmSplineSelectReplaceBySelectedFaces`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineSelectReplaceBySelectedFacesAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "XgmSplineSelectCmd -replaceBySelectedFaces"
                XgmSplineSelectReplaceBySelectedFaces;
    }

    if (!`runTimeCommand -exists XgmSplinePresetImport`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplinePresetImportAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "python(\"from xgenm.ui import xgmSplinePresetUI; xgmSplinePresetUI.xgmSplinePresetUIImport()\")"
                XgmSplinePresetImport;
    }

    if (!`runTimeCommand -exists XgmSplinePresetExport`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplinePresetExportAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "python(\"from xgenm.ui import xgmSplinePresetUI; xgmSplinePresetUI.xgmSplinePresetUIExport()\")"
                XgmSplinePresetExport;
    }

    if (!`runTimeCommand -exists XgmSplineCacheCreate`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kCreateNewCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheCreateAnnot"))
			    -image "createCache.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportCmd -create"
                XgmSplineCacheCreate;
    }

    if (!`runTimeCommand -exists XgmSplineCacheCreateOptions`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheCreateOptionsAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportOptionsCmd -create"
                XgmSplineCacheCreateOptions;
    }


    if (!`runTimeCommand -exists XgmSplineCacheImport`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kImportCacheLabel"))
			    -image "importCache.png"
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheImportAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheImportCmd"
                XgmSplineCacheImport;
    }

    if (!`runTimeCommand -exists XgmSplineCacheImportOptions`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheImportOptionsAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheImportOptionsCmd"
                XgmSplineCacheImportOptions;
    }

    if (!`runTimeCommand -exists XgmSplineCacheExport`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kExportCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheExportAnnot"))
			    -image "exportCache.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportCmd -export"
                XgmSplineCacheExport;
    }

    if (!`runTimeCommand -exists XgmSplineCacheExportOptions`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheExportOptionsAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportOptionsCmd -export"
                XgmSplineCacheExportOptions;
    }

    if (!`runTimeCommand -exists XgmSplineCacheDisableSelectedCache`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kDisableAllCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheDisableSelectedCacheAnnot"))
			    -image "disableAllCaches.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheNodeToggle 0"
                XgmSplineCacheDisableSelectedCache;
    }

    if (!`runTimeCommand -exists XgmSplineCacheEnableSelectedCache`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kEnableAllCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheEnableSelectedCacheAnnot"))
			    -image "enableAllCaches.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheNodeToggle 1"
                XgmSplineCacheEnableSelectedCache;
    }

    if (!`runTimeCommand -exists XgmSplineCacheReplace`) {
        runTimeCommand -default true
                -label (uiRes("m_defaultRunTimeCommands.kReplaceCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheReplaceAnnot"))
			    -image "replaceCache.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportCmd -replace"
                XgmSplineCacheReplace;
    }

    if (!`runTimeCommand -exists XgmSplineCacheReplaceOptions`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheReplaceOptionsAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheExportOptionsCmd -replace"
                XgmSplineCacheReplaceOptions;
    }


    if (!`runTimeCommand -exists XgmSplineCacheDelete`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kDeleteCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheDeleteAnnot"))
			    -image "deleteCache.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheDeleteCmd"
                XgmSplineCacheDelete;
    }

    if (!`runTimeCommand -exists XgmSplineCacheDeleteOptions`) {
        runTimeCommand -default true
                -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheDeleteOptionsAnnot"))
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheDeleteOptionsCmd"
                XgmSplineCacheDeleteOptions;
    }

    if (!`runTimeCommand -exists XgmSplineCacheDeleteNodesAhead`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kDeleteNodesAheadOfCacheLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kXgmSplineCacheDeleteDeleteNodesAheadOfCacheAnnot"))
			    -image "deleteCacheHistory.png"
                -category "Menu items.Modeling.Generate"
                -command "xgmSplineCacheDeleteNodesAhead"
                XgmSplineCacheDeleteNodesAhead;
    }

    if (!`runTimeCommand -exists XgmCreateInteractiveGroomSplines`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kCreateInteractiveGroomSplines"))
        		-annotation (uiRes("m_defaultRunTimeCommands.kCreateInteractiveGroomSplinesAnn"))
        		-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreateInteractiveGroomSplinesLongAnn"))
        		-image "xgIG_creation.png"
                -category "Menu items.Modeling.Generate"
                -command  "python(\"xgCreateInteractiveDescription.createInteractiveSplines()\");"
                XgmCreateInteractiveGroomSplines;
    }
	
	if (!`runTimeCommand -exists XgmSplineGeometryConvert`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command  "python(\"xgSplineToGeometryConvert.ConvertSplineToGeometry()\");"
                XgmSplineGeometryConvert;
    }

    if (!`runTimeCommand -exists XgmCreateInteractiveGroomSplinesOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command  "python(\"xgCreateInteractiveDescription.createInteractiveSplineWindow()\");"
                XgmCreateInteractiveGroomSplinesOption;
    }

	if (!`runTimeCommand -exists XgCreateIgSplineEditor`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kOpenTheUIForTheXgenIgSplineEditor"))
			    -ann (uiRes("m_defaultRunTimeCommands.kOpenTheXGenIgSplineEditorAnn1"))
			    -image "xgIG_editor.png"
                -category "Menu items.Modeling.Generate"
                -command  "python(\"xgui.createIgSplineEditor()\");"
                XgCreateIgSplineEditor;
    }

    if (!`runTimeCommand -exists XgmSetGrabBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kGrabBrushLabel"))
			    -image "xgIG_grab.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kGrabBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kGrabBrushLongAnn"))
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetGrabBrushTool"
                XgmSetGrabBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetGrabBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetGrabBrushTool; toolPropertyWindow;"
                XgmSetGrabBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetCombBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kCombBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kCombBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kCombBrushLongAnn"))
			    -image "xgIG_comb.png"
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetCombBrushTool"
                XgmSetCombBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetCombBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetCombBrushTool; toolPropertyWindow;"
                XgmSetCombBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetSmoothBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kSmoothBrushLabel"))
			    -image "xgIG_smooth.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kSmoothBrushAnn"))
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetSmoothBrushTool"
                XgmSetSmoothBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetSmoothBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetSmoothBrushTool; toolPropertyWindow;"
                XgmSetSmoothBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetClumpBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kClumpBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kClumpBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kClumpBrushLongAnn"))
 			    -image "xgIG_clump.png"
               -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetClumpBrushTool"
                XgmSetClumpBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetClumpBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetClumpBrushTool; toolPropertyWindow;"
                XgmSetClumpBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetPartBrushTool`) {
        runTimeCommand -default true
        	-label (uiRes("m_defaultRunTimeCommands.kPartBrushLabel"))
			-image "xgIG_part.png"
			-annotation (uiRes("m_defaultRunTimeCommands.kPartBrushAnn"))
			-longAnnotation (uiRes("m_defaultRunTimeCommands.kPartBrushLongAnn"))
                -hotkeyCtx "xgmIGBrush"
            -category "Menu items.Modeling.Generate"
            -command "xgmSetPartBrushTool"
            XgmSetPartBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetPartBrushToolOption`) {
        runTimeCommand -default true
            -category "Menu items.Modeling.Generate"
            -command "xgmSetPartBrushTool; toolPropertyWindow;"
            XgmSetPartBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetSelectBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kSelectBrushLabel"))
			    -image "xgIG_select.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kSelectBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kSelectBrushLongAnn"))
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetSelectBrushTool"
                XgmSetSelectBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetSelectBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetSelectBrushTool; toolPropertyWindow;"
                XgmSetSelectBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetFreezeBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kFreezeBrushLabel"))
			    -image "xgIG_freeze.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kFreezeBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kFreezeBrushLongAnn"))
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetFreezeBrushTool"
                XgmSetFreezeBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetFreezeBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetFreezeBrushTool; toolPropertyWindow;"
                XgmSetFreezeBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetDensityBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kDensityBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kDensityBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kDensityBrushLongAnn"))
			    -image "xgIG_density.png"
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetDensityBrushTool"
                XgmSetDensityBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetDensityBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetDensityBrushTool; toolPropertyWindow;"
                XgmSetDensityBrushToolOption;
    }

    if (!`runTimeCommand -exists XgmSetPlaceBrushTool`) {
        runTimeCommand -default true
        		-label (uiRes("m_defaultRunTimeCommands.kPlaceBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kPlaceBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kPlaceBrushLongAnn"))
			    -image "xgIG_place.png"
                -hotkeyCtx "xgmIGBrush"
                -category "Menu items.Modeling.Generate"
                -command "xgmSetPlaceBrushTool"
                XgmSetPlaceBrushTool;
    }

    if (!`runTimeCommand -exists XgmSetPlaceBrushToolOption`) {
        runTimeCommand -default true
                -category "Menu items.Modeling.Generate"
                -command "xgmSetPlaceBrushTool; toolPropertyWindow;"
                XgmSetPlaceBrushToolOption;
    }

if (!`runTimeCommand -exists XgmSetCutBrushTool`) {
	runTimeCommand -default true
			-label (uiRes("m_defaultRunTimeCommands.kCutBrushLabel"))
			-annotation (uiRes("m_defaultRunTimeCommands.kCutBrushAnn"))
		    -longAnnotation (uiRes("m_defaultRunTimeCommands.kCutBrushLongAnn"))
			-image "xgIG_cut.png"
                -hotkeyCtx "xgmIGBrush"
			-category "Menu items.Modeling.Generate"
			-command "xgmSetCutBrushTool"
			XgmSetCutBrushTool;
}

if (!`runTimeCommand -exists XgmSetCutBrushToolOption`) {
	runTimeCommand -default true
			-category "Menu items.Modeling.Generate"
			-command "xgmSetCutBrushTool; toolPropertyWindow;"
			XgmSetCutBrushToolOption;
}

	if (!`runTimeCommand -exists XgmSetWidthBrushTool`) {
		runTimeCommand -default true
				-label (uiRes("m_defaultRunTimeCommands.kWidthBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kWidthBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kWidthBrushLongAnn"))
			    -image "xgIG_width.png"
                -hotkeyCtx "xgmIGBrush"
				-category "Menu items.Modeling.Generate"
				-command "xgmSetWidthBrushTool"
				XgmSetWidthBrushTool;
	}

	if (!`runTimeCommand -exists XgmSetWidthBrushToolOption`) {
		runTimeCommand -default true
				-category "Menu items.Modeling.Generate"
				-command "xgmSetWidthBrushTool; toolPropertyWindow;"
				XgmSetWidthBrushToolOption;
	}
	
	if (!`runTimeCommand -exists XgmSetDirectionBrushTool`) {
		runTimeCommand -default true
				-label (uiRes("m_defaultRunTimeCommands.kDirectionBrushLabel"))
			    -image "xgIG_twist.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kDirectionBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kDirectionBrushLongAnn"))
                -hotkeyCtx "xgmIGBrush"
				-category "Menu items.Modeling.Generate"
				-command "xgmSetDirectionBrushTool"
				XgmSetDirectionBrushTool;
	}
	
	if (!`runTimeCommand -exists XgmSetDirectionBrushToolOption`) {
		runTimeCommand -default true
				-category "Menu items.Modeling.Generate"
				-command "xgmSetDirectionBrushTool; toolPropertyWindow;"
				XgmSetDirectionBrushToolOption;
	}


	if (!`runTimeCommand -exists XgmSetLengthBrushTool`) {
		runTimeCommand -default true
				-label (uiRes("m_defaultRunTimeCommands.kLengthBrushLabel"))
			    -annotation (uiRes("m_defaultRunTimeCommands.kLengthBrushAnn"))
			    -longAnnotation (uiRes("m_defaultRunTimeCommands.kLengthBrushLongAnn"))
			    -image "xgIG_length.png"
                -hotkeyCtx "xgmIGBrush"
				-category "Menu items.Modeling.Generate"
				-command "xgmSetLengthBrushTool"
				XgmSetLengthBrushTool;
	}

	if (!`runTimeCommand -exists XgmSetLengthBrushToolOption`) {
		runTimeCommand -default true
				-category "Menu items.Modeling.Generate"
				-command "xgmSetLengthBrushTool; toolPropertyWindow;"
				XgmSetLengthBrushToolOption;
	}


	if (!`runTimeCommand -exists XgmSetNoiseBrushTool`) {
		runTimeCommand -default true
				-label (uiRes("m_defaultRunTimeCommands.kNoiseBrushLabel"))
			    -image "xgIG_noise.png"
			    -annotation (uiRes("m_defaultRunTimeCommands.kNoiseBrushAnn"))
                -hotkeyCtx "xgmIGBrush"
				-category "Menu items.Modeling.Generate"
				-command "xgmSetNoiseBrushTool"
				XgmSetNoiseBrushTool;
	}

	if (!`runTimeCommand -exists XgmSetNoiseBrushToolOption`) {
		runTimeCommand -default true
				-category "Menu items.Modeling.Generate"
				-command "xgmSetNoiseBrushTool; toolPropertyWindow;"
				XgmSetNoiseBrushToolOption;
	}

	


	runTimeCommand -default true
		-label (uiRes("m_defaultRunTimeCommands.kMeshCacheSculptToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSculptToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSculptToolLongAnnot"))
		-image     "Sculpt.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Sculpt\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshSculptTool;

		runTimeCommand -default true
			-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSculptToolOpsAnnot"))
			-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
			-command    ("SetMeshSculptTool; toolPropertyWindow;")
			ShowMeshSculptToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothToolLongAnnot"))
		-image     "Smooth.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Smooth\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshSmoothTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshSmoothTool; toolPropertyWindow;")
		ShowMeshSmoothToolOptions;

	runTimeCommand -default true
		-label  	(uiRes("m_defaultRunTimeCommands.kMeshCacheRelaxToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRelaxToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRelaxToolLongAnnot"))
		-image     "Relax.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Relax\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshRelaxTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRelaxToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshRelaxTool; toolPropertyWindow;")
		ShowMeshRelaxToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheGrabToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabToolLongAnnot"))
		-image     "Grab.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Grab\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshGrabTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshGrabTool; toolPropertyWindow;")
		ShowMeshGrabToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCachePinchToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCachePinchToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCachePinchToolLongAnnot"))
		-image     "Pinch.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Pinch\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshPinchTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCachePinchToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshPinchTool; toolPropertyWindow;")
		ShowMeshPinchToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheFlattenToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFlattenToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFlattenToolLongAnnot"))
		-image     "Flatten.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Flatten\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshFlattenTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFlattenToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshFlattenTool; toolPropertyWindow;")
		ShowMeshFlattenToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheFoamyToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFoamyToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFoamyToolLongAnnot"))
		-image     "Foamy.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Foamy\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshFoamyTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFoamyToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshFoamyTool; toolPropertyWindow;")
		ShowMeshFoamyToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheSprayToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSprayToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSprayToolLongAnnot"))
		-image     "Spray.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Spray\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshSprayTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSprayToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshSprayTool; toolPropertyWindow;")
		ShowMeshSprayToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheRepeatToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRepeatToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRepeatToolLongAnnot"))
		-image     "Repeat.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Repeat\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshRepeatTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheRepeatToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshRepeatTool; toolPropertyWindow;")
		ShowMeshRepeatToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheImprintToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheImprintToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheImprintToolLongAnnot"))
		-image     "Imprint.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Imprint\"")
		SetMeshImprintTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheImprintToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshImprintTool; toolPropertyWindow;")
		ShowMeshImprintToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheWaxToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheWaxToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheWaxToolLongAnnot"))
		-image     "Wax.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Wax\"")
		SetMeshWaxTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheWaxToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshWaxTool; toolPropertyWindow;")
		ShowMeshWaxToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheScrapeToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheScrapeToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheScrapeToolLongAnnot"))
		-image     "Scrape.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Scrape\"")
		SetMeshScrapeTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheScrapeToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshScrapeTool; toolPropertyWindow;")
		ShowMeshScrapeToolOptions;

	runTimeCommand -default true
		-label 		 (uiRes("m_defaultRunTimeCommands.kMeshCacheFillToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFillToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFillToolLongAnnot"))
		-image     "Fill.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Fill\"")
		SetMeshFillTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFillToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshFillTool; toolPropertyWindow;")
		ShowMeshFillToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheKnifeToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheKnifeToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheKnifeToolLongAnnot"))
		-image     "Knife.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Knife\"")
		SetMeshKnifeTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheKnifeToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshKnifeTool; toolPropertyWindow;")
		ShowMeshKnifeToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheSmearToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmearToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmearToolLongAnnot"))
		-image     "Smear.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Smear\"")
		SetMeshSmearTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmearToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshSmearTool; toolPropertyWindow;")
		ShowMeshSmearToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheBulgeToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheBulgeToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheBulgeToolLongAnnot"))
		-image     "Bulge.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Bulge\"")
		SetMeshBulgeTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheBulgeToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshBulgeTool; toolPropertyWindow;")
		ShowMeshBulgeToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheAmplifyToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheAmplifyToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheAmplifyToolLongAnnot"))
		-image     "Amplify.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Amplify\"")
		SetMeshAmplifyTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheAmplifyToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshAmplifyTool; toolPropertyWindow;")
		ShowMeshAmplifyToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheEraseToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheEraseToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheEraseToolLongAnnot"))
		-image     "Erase.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Erase\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshEraseTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheEraseToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshEraseTool; toolPropertyWindow;")
		ShowMeshEraseToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothTargetToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothTargetToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothTargetToolLongAnnot"))
		-image     "SmoothTarget.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"SmoothTarget\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshSmoothTargetTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheSmoothTargetToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshSmoothTargetTool; toolPropertyWindow;")
		ShowMeshSmoothTargetToolOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMeshCacheMaskToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheMaskToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheMaskToolLongAnnot"))
		-image     "Mask.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Mask\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshMaskTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheMaskToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshMaskTool; toolPropertyWindow;")
		ShowMeshMaskToolOptions;

	runTimeCommand -default true
		-label (uiRes("m_defaultRunTimeCommands.kMeshCacheCloneToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheCloneToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheCloneToolLongAnnot"))
		-image     "CloneTarget.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Clone\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshCloneTargetTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheCloneToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshCloneTargetTool; toolPropertyWindow;")
		ShowMeshCloneTargetToolOptions;

	runTimeCommand -default true
		-label  	(uiRes("m_defaultRunTimeCommands.kMeshCacheFreezeToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFreezeToolAnnot"))
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFreezeToolLongAnnot"))
		-image     "Freeze.png"
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("setMeshSculptTool \"Freeze\"")
		-hotkeyCtx ("sculptMeshCache")
		SetMeshFreezeTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheFreezeToolOpsAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("SetMeshFreezeTool; toolPropertyWindow;")
		ShowMeshFreezeToolOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheUnfreezeAll"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshUnFreeze;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshUnfreezeAll;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheInvertFreeze"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshInvertFreeze;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshInvertFreeze;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFrameSculptedAreaAnnot"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshCacheCtx -e -frame sculptMeshCacheContext;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshFrame;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kModifyStrengthPressAnnot"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshCacheCtx -e -adjustStrength 1 sculptMeshCacheContext;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshActivateBrushStrength;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kModifyStrengthReleaseAnnot"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshCacheCtx -e -adjustStrength 0 sculptMeshCacheContext;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshDeactivateBrushStrength;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kModifySizePressAnnot"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshCacheCtx -e -adjustSize 1 sculptMeshCacheContext;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshActivateBrushSize;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kModifySizeReleaseAnnot"))
		-category   ("Other items.Brush Tools")
		-command    ("if ( `contextInfo -ex sculptMeshCacheContext`) sculptMeshCacheCtx -e -adjustSize 0 sculptMeshCacheContext;")
		-hotkeyCtx ("sculptMeshCache")
		SculptMeshDeactivateBrushSize;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kOpenVisorForMeshesAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command ("{ ContentBrowserWindow;"+
					 "contentBrowserSetLocation(\"Examples/Modeling/Sculpting Base Meshes/Animals\"); }")
		OpenVisorForMeshes;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kConvertToFrozenAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.Sculpting Tools")
		-command    ("{\n" + 
					" convertSelectionToFrozen();\n" + 
					"}\n") 
		ConvertToFrozen;


	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kReFormToolAnnot"))
		-category   ("Menu items.Modeling.Mesh Tools.ReForm Tool")
		-command    ("polyReFormSetTool")
		SetReFormTool;

//
//	Polygons menu; obsolete
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSmoothProxyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothProxyAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSmoothProxyLongAnnot"))
	-image 		"polySmoothProxy.png"
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("performSmoothProxy 0")
	SmoothProxy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothProxyOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("performSmoothProxy 1")
	SmoothProxyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolyUnMrrSmoothProxyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyUnMrrSmoothProxyAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyUnMrrSmoothProxyLongAnnot"))
	-image 		"polyUnmirrorSmoothProxy.png"
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("performUnmirrorSmoothProxy 0")
	UnmirrorSmoothProxy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnmirrorSmoothProxyOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy")
	-command    ("performUnmirrorSmoothProxy 1")
	UnmirrorSmoothProxyOptions;

//
//	Proxy menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivProxyAnnot"))
	-category   ("Other items.Proxy")
	-command    ("performSmoothProxy 0")
	-showInHotkeyEditor false
	SubdivProxy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivProxyOptionsAnnot"))
	-category   ("Other items.Proxy")
	-command    ("performSmoothProxy 1")
	-showInHotkeyEditor false
	SubdivProxyOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveSubdivProxyMirrorAnnot"))
	-category   ("Other items.Proxy")
	-command    ("performUnmirrorSmoothProxy 0")
	-showInHotkeyEditor false
	RemoveSubdivProxyMirror;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveSubdivProxyMirrorOptionsAnnot"))
	-category   ("Other items.Proxy")
	-command    ("performUnmirrorSmoothProxy 1")
	-showInHotkeyEditor false
	RemoveSubdivProxyMirrorOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreaseProxyEdgeToolAnnot"))
	-category   ("Other items.Proxy")
	-command    ("setToolTo polyCreaseContext")
	-showInHotkeyEditor false
	CreaseProxyEdgeTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreaseProxyEdgeToolOptionsAnnot"))
	-category   ("Other items.Proxy")
	-command    ("setToolTo polyCreaseContext; toolPropertyWindow;")
	-showInHotkeyEditor false
	CreaseProxyEdgeToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleProxyDisplayAnnot"))
	-category   ("Other items.Proxy")
	-command    ("smoothingDisplayToggle 1")
	-showInHotkeyEditor false
	ToggleProxyDisplay;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBothProxySubdivDisplayAnnot"))
	-category   ("Other items.Proxy")
	-command    ("smoothingDisplayToggle 0")
	-showInHotkeyEditor false
	BothProxySubdivDisplay;


//
//	Polygon Select menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySelectToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("setToolTo polySelectContext")
	PolySelectTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolySelectToolOptionsAnnot"))
	-category   ("Other items.Tools")
	-command    ("setToolTo polySelectContext; toolPropertyWindow;")
	PolySelectToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGrowPolygonSelectionRegionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGrowPolygonSelectionRegionAnnot"))
	-image 		"polyGrowSelection.png"
	-category   ("Menu items.Common.Select")
	-command    ("evalEcho(\"select `ls -sl`;PolySelectTraverse 1;select `ls -sl`;\")")
	GrowPolygonSelectionRegion;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGrowLoopPolygonSelectionRegionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGrowLoopPolygonSelectionRegionAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("evalEcho(\"select `ls -sl`;PolySelectTraverse 5;select `ls -sl`;\")")
	GrowLoopPolygonSelectionRegion;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShrinkPolygonSelectionRegionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShrinkPolygonSelectionRegionAnnot"))
	-image 		"polyShrinkSelection.png"
	-category   ("Menu items.Common.Select")
	-command    ("evalEcho(\"select `ls -sl`;PolySelectTraverse 2;select `ls -sl`;\")")
	ShrinkPolygonSelectionRegion;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShrinkLoopPolygonSelectionRegionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShrinkLoopPolygonSelectionRegionAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("evalEcho(\"select `ls -sl`;PolySelectTraverse 6; select `ls -sl`;\")")
	ShrinkLoopPolygonSelectionRegion;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPolygonSelectionBoundaryAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("PolySelectTraverse 3")
	-showInHotkeyEditor false
	SelectPolygonSelectionBoundary;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectEdgeLoopAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("polySelectEdges edgeLoopOrBorder;")
	-showInHotkeyEditor false
	SelectEdgeLoop;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectEdgeLoopLbl2"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectEdgeLoopAnnot2"))
	-image 		"polyConvertToEdgeLoop.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("polySelectSp -loop;")
	SelectEdgeLoopSp;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectEdgeRingAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("polySelectEdges edgeRing;")
	-showInHotkeyEditor false
	SelectEdgeRing;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectEdgeRingLbl2"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectEdgeRingAnnot2"))
	-image "polyConvertToEdgeRing.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("polySelectSp -ring;")
	SelectEdgeRingSp;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectFacePathlbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectFacePathAnnot"))
	-image 		"polyConvertToFacePath.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("polySelectEdges edgeRing;getFaces;")
	SelectFacePath;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectContiguousEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectContiguousEdgesAnnot"))
	-image 		"polyLoopEdge.png"
	-category   ("Menu items.Common.Select")
	-command    ("performSelContiguousEdges 0")
	SelectContiguousEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectContiguousEdgesOptionsAnnot"))
	-category   ("Menu items.Common.Select")
	-command    ("performSelContiguousEdges 1")
	SelectContiguousEdgesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertToShellLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToShellAnnot"))
	-image 		"polyConvertToShell.png"
	-category   ("Other items.Polygon Select")
	-command    ("polyConvertToShell")
	-showInHotkeyEditor false
	ConvertSelectionToShell;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertToShellBorderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToShellBorderAnnot"))
	-image 		"polyConvertToShellBorder.png"
	-category   ("Other items.Polygon Select")
	-command    ("polyConvertToShellBorder")
	-showInHotkeyEditor false
	ConvertSelectionToShellBorder;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertToUVShellLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToUVShellAnnot"))
	-image 		"polyConvertToUVShell.png"
	-category   ("Other items.Polygon Select")
	-command    ("polySelectBorderShell 0")
	ConvertSelectionToUVShell;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertToUVShellBorderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToUVShellBorderAnnot"))
	-image 		"polyConvertToUVBorder.png"
	-category   ("Other items.Polygon Select")
	-command    ("polySelectBorderShell 1")
	ConvertSelectionToUVShellBorder;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToFacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToFacesAnnot"))
	-image 		"polyConvertToFace.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 1;")
	ConvertSelectionToFaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToContainedFacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToContainedFacesAnnot"))
	-image 		"polyConvertToContainedFaces.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 10")
	ConvertSelectionToContainedFaces;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToEdgesAnnot"))
	-image 		"polyConvertToEdge.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 2")
	ConvertSelectionToEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToContainedEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToContainedEdgesAnnot"))
	-image 		"polyConvertToContainedEdges.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 20;")
	ConvertSelectionToContainedEdges;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToEdgePerimeterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToEdgePerimeterAnnot"))
	-image 		"polyConvertToEdgePerimeter.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("{string $c[]; string $f[]; convertToSelectionBorder(-1, true, $c, $f);}")
	ConvertSelectionToEdgePerimeter;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVPerimeterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVPerimeterAnnot"))
	-image 		"polyConvertToUVPerimeter.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("{string $c[]; string $f[]; convertToSelectionBorder(1, true, $c, $f);}")
	ConvertSelectionToUVPerimeter;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToVertexPerimeterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToVertexPerimeterAnnot"))
	-image 		"polyConvertToVertexPerimeter.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("{string $c[]; string $f[]; convertToSelectionBorder(0, true, $c, $f);}")
	ConvertSelectionToVertexPerimeter;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToVerticesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToVerticesAnnot"))
	-image 		"polyConvertToVertices.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 3;")
	ConvertSelectionToVertices;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVsAnnot"))
	-image 		"polyConvertToUVs.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 4")
	ConvertSelectionToUVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVEdgeLoopLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVEdgeLoopAnnot"))
	-image 		"polyConvertToUVEdgeLoop.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("polySelectEdges edgeUVLoopOrBorder")
	ConvertSelectionToUVEdgeLoop;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToVertexFacesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToVertexFacesAnnot"))
	-image 		"polyConvertToVertexFaces.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("PolySelectConvert 5")
	ConvertSelectionToVertexFaces;
	
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertSelectionToFacePerimeterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToFacePerimeterAnnot"))
	-image 		"polyConvertToFacePerimeter.png"
	-category   ("Menu items.Common.Select.Convert Selection")
	-command    ("polySelectFacePerimeter")
	ConvertSelectionToFacePerimeter;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectBorderEdgeToolAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("polySelectCtx -e -mode 2 polySelectContext; setToolTo polySelectContext")
	-showInHotkeyEditor false
	SelectBorderEdgeTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectShortestEdgePathToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectShortestEdgePathToolAnnot"))
	-image 		"selectEdgePath.png"
	-category   ("Menu items.Common.Select")
	-command    ("setToolTo polyShortestEdgePathContext")
	SelectShortestEdgePathTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertSelectionToUVBorderAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("polySelectBorderShell 1")
	ConvertSelectionToUVBorder;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVBackFacingComponentsAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVFaceOrientationComponents {} 0 2 1\")")
	SelectUVBackFacingComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVFrontFacingComponentsAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVFaceOrientationComponents {} 0 1 1\")")
	SelectUVFrontFacingComponents;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVOverlappingComponentsAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVOverlappingComponents 1 0\")")
	SelectUVOverlappingComponents;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVNonOverlappingComponentsAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVOverlappingComponents 0 0\")")
	SelectUVNonOverlappingComponents;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVOverlappingComponentsPerObjectAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVOverlappingComponents 1 1\")")
	SelectUVOverlappingComponentsPerObject;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVNonOverlappingComponentsPerObjectAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVOverlappingComponents 0 1\")")
	SelectUVNonOverlappingComponentsPerObject;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVBorderComponentsAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUVBorderComponents {} \\\"\\\" 1\")")
	SelectUVBorderComponents;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUnmappedFacesAnnot"))
	-category   ("Other items.Polygon Select")
	-command    ("evalEcho(\"selectUnmappedFaces\")")
	SelectUnmappedFaces;
//
//	Edit Polygons menu; obsolete.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeFaceAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrude")
	ExtrudeFace;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeFaceOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrudeOptions")
	ExtrudeFaceOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeEdgeAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrude")
	ExtrudeEdge;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeEdgeOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrudeOptions")
	ExtrudeEdgeOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeVertexAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrude")
	ExtrudeVertex;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtrudeVertexOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyExtrudeOptions")
	ExtrudeVertexOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeVerticesAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyMerge")
	MergeVertices;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeVerticesOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyMergeOptions")
	MergeVerticesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeMultipleEdgesAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyMerge")
	MergeMultipleEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeMultipleEdgesOptionsAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("PolyMergeOptions")
	MergeMultipleEdgesOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPolygonSelectionConstraintsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSelectionConstraintsAnnot"))
	-image 		"polySelectUsingConstraints.png"
	-category   ("Menu items.Common.Select")
	-command    ("openSelectionConstraintWindow")
	PolygonSelectionConstraints;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolygonSoftenHardenLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSoftenHardenAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonSoftenHardenLongAnnot"))
	-image "polySoftEdge.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySoftEdge 0")
	-showInHotkeyEditor false
	PolygonSoftenHarden;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSoftenHardenOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySoftEdge 1")
	-showInHotkeyEditor false
	PolygonSoftenHardenOptions;



runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdividePolygonLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdividePolygonAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSubdividePolygonLongAnnot"))
	-image 		"polySubdFacet.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"\" 0")
	SubdividePolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdividePolygonOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolySubdivide \"\" 1")
	SubdividePolygonOptions;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kPolyCreaseToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyCreaseToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyCreaseToolLongAnnot"))
	-image 		"polyCrease.png" 
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy;Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyCreaseContext")
	PolyCreaseTool;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateCreaseSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCreaseSetAnnot"))
	-image 		"polyCreateCreaseSet.png"
	-category   ("Other items.Edit Polygons")
	-command    ("performPolyCreateCreaseSet 0")
	CreateCreaseSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCreaseSetOptionsAnnot"))
	-category   ("Other items.Edit Polygons")
	-command    ("performPolyCreateCreaseSet 1")
	-showInHotkeyEditor false
	CreateCreaseSetOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyCreaseToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh.Smooth Proxy;Menu items.Modeling.Mesh Tools")
	-command    ("setToolTo polyCreaseContext; toolPropertyWindow;")
	PolyCreaseToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyAssignSubdivHoleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyAssignSubdivHoleAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyAssignSubdivHoleLongAnnot"))
	-image "polyAssignSubdivHole.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyHoleFace 0")
	PolyAssignSubdivHole;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyAssignSubdivHoleOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyHoleFace 1")
	PolyAssignSubdivHoleOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyRemoveCreaseAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polyCrease -op 1 -ch `constructionHistory -q -tgl`")
	PolyRemoveCrease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyRemoveAllCreaseAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polyCrease -op 2 -ch `constructionHistory -q -tgl`")
	PolyRemoveAllCrease;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDuplicateEdgesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateEdgesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kDuplicateEdgesLongAnnot"))
	-image "polyDuplicateEdgeLoop.png" 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("performPolyDuplicateEdge 0")
	DuplicateEdges;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDuplicateEdgesOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("performPolyDuplicateEdge 1")
	DuplicateEdgesOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSplitEdgeRingToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitEdgeRingToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSplitEdgeRingToolLongAnnot"))
	-image "polySplitEdgeRing.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("polySelectEditCtx -e -mode 1 polySelectEditContext; setToolTo polySelectEditContext")
	SplitEdgeRingTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitEdgeRingToolOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Tools")
	-command    ("polySelectEditCtx -e -mode 1 polySelectEditContext; setToolTo polySelectEditContext; toolPropertyWindow")
	SplitEdgeRingToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitVertexAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polySplitVertex")
	SplitVertex;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConnectComponentsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConnectComponentsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kConnectComponentsLongAnnot"))
	-image 		"polyConnectComponents.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("polyPerformAction polyConnectComponents n 0")
	ConnectComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kConnectComponentsOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("polyPerformAction polyConnectComponents n 1")
	ConnectComponentsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitEdgeAnnot"))
	-category   ("Other items.Polygon Modeling")
	-command    ("polySplitEdge")
	SplitEdge;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kMovePolygonComponentLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMovePolygonComponentAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMovePolygonComponentLongAnnot"))
	-image "polyMoveVertex.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyMove \"\" 0")
	MovePolygonComponent;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMovePolygonComponentOptionsAnnot"))
	-category   ("Menu items.Modeling.Edit Mesh")
	-command    ("performPolyMove \"\" 1")
	MovePolygonComponentOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSymmetryFlipLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetryFlipAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSymmetryFlipLongAnnot"))
	-image "polyFlip.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command "dR_performSymmetryFlip"
	FlipMesh;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSymmetrizeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetrizeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSymmetrizeLongAnnot"))
	-image "symmetrize.png"
	-category   ("Menu items.Modeling.Edit Mesh")
	-command "dR_performSymmetrize"
	Symmetrize;

//
//	Polygon Color menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetCurrentColorSetAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("performSetCurrentColorSet 1")
	-showInHotkeyEditor false
	SetCurrentColorSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenameCurrentColorSetAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("performRenameCurrentColorSet 1")
	-showInHotkeyEditor false
	RenameCurrentColorSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteCurrentColorSetAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("performDeleteCurrentColorSet 1")
	-showInHotkeyEditor false
	DeleteCurrentColorSet;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kApplyColorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kApplyColorAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kApplyColorLongAnnot"))
	-image "polyApplyColor.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performApplyColor 0")
	PolygonApplyColor;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kApplyColorOptionAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performApplyColor 1")
	PolygonApplyColorOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPrelightPolygonAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("performPrelight 0")
	-showInHotkeyEditor false
	PrelightPolygon;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPrelightPolygonOptionsAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("performPrelight 1")
	-showInHotkeyEditor false
	PrelightPolygonOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBatchBakeAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("mrBakeToVertices 0")
	-showInHotkeyEditor false
	BatchBake;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBatchBakeOptionsAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("mrBakeToVertices 1")
	-showInHotkeyEditor false
	BatchBakeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintVertexColorToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintVertexColorToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintVertexColorToolLongAnnot"))
	-image "paintVertexColour.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("artAttrColorPerVertexToolScript 4")
	PaintVertexColorTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintVertexColorOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("artAttrColorPerVertexToolScript 3")
	PaintVertexColorToolOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorCreateEmptySetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorCreateEmptySetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorCreateEmptySetLongAnnot"))
	-image "polyColorSetCreateEmpty.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "createEmptyColorSet 0"
	CreateEmptySet;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorCreateEmptySetOptionsAnnot"))
		-image "polyColorSetCreateEmpty.png"
		-category   ("Menu items.Modeling.Mesh Display")
		-command "createEmptyColorSet 1"
		CreateEmptySetOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorDeleteCurSetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorDeleteCurSetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorDeleteCurSetLongAnnot"))
	-image "polyColorSetDelete.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "colorSetEditCmd delete none"
	DeleteCurrentSet;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorRenameCurSetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorRenameCurSetAnnot"))
	-image "polyColorSetRename.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command  "colorSetEditCmd rename none"
	RenameCurrentSet;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorModifyCurSetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorModifyCurSetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorModifyCurSetLongAnnot"))
	-image "polyColorSetModify.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command  "colorSetEditCmd modify none"
	ModifyCurrentSet;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorSetVtxKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorSetVtxKeyAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorSetVtxKeyLongAnnot"))
	-image "polyColorSetKeyframe.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "setPolyColorKeyframe"
	SetKeyframeForVertexColor;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorSetEditorAnnot"))
	-image "polyColorSetEditor.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "colorSetEditor"
	OpenColorSetEditor;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorPrelightLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorPrelightAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorPrelightLongAnnot"))
	-image "polyPrelight.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("performPrelight " + 0)
	PreflightPolygon;

	runTimeCommand -default true 
		-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorPrelightOptionsAnnot"))
		-image "polyPrelight.png"
		-category   ("Menu items.Modeling.Mesh Display")
		-command ("performPrelight " + 1)
		PreflightPolygonOptions;

runTimeCommand -default true  
	-label (uiRes("m_defaultRunTimeCommands.kPolyNewCreateANew2Lbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyNewCreateANew2Annot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyNewCreateANew2LongAnnot"))
	-image "polyBakeSetNew.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("createAndAssignBakeSet vertexBakeSet \"\"")
	AssignNewSet;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyEditExistingBakeSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyEditExistingBakeSetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyEditExistingBakeSetLongAnnot"))
	-image "polyBakeSetEdit.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "polyOpenBakeSetAE"
	EditAssignedSet;

runTimeCommand -default true  
	-label (uiRes("m_defaultRunTimeCommands.kPolyToggleDisplayColorsAttributeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyToggleDisplayColorsAttributeModeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyToggleDisplayColorsAttributeModeLongAnnot"))
	-image "polyToggleDisplayColor.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command "toggleShadeMode"
	ToggleDisplayColorsAttr;

runTimeCommand -default true  
	-label (uiRes("m_defaultRunTimeCommands.kPolyNone")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialNone"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialNoneLong"))
	-image "polyColorMaterialNone.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 0) 
	SetCMCNone;

runTimeCommand -default true  
	-label (uiRes("m_defaultRunTimeCommands.kPolyAmbient")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialAmbient"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialAmbientLong"))
	-image "polyColorMaterialAmbient.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 1) 
	SetCMCAmbient;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyAmbientDiffuse")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialAmbientDiffuse"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialAmbientDiffuseLong"))
	-image "polyColorMaterialAmbientDiffuse.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 2) 
	SetCMCAmbientDiffuse;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyDiffuse")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialDiffuse"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialDiffuseLong"))
	-image "polyColorMaterialDiffuse.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 3) 
	SetCMCDiffuse;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolySpecular"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialSpecular"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialSpecularLong"))
	-image "polyColorMaterialSpecular.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 4) 
	SetCMCSpecular;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyEmission"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialEmission"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyColorMaterialEmissionLong"))
	-image "polyColorMaterialEmission.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeColorMatChannel " + 5) 
	SetCMCEmission;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyOverwrite")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBOverwrite"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBOverwriteLong"))
	-image "polyMaterialBlendOverwrite.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 0) 
	SetMBSOverwrite;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyAdd"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBAdd"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBAddLong"))
	-image "polyMaterialBlendAdd.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 1) 
	SetMBSAdd;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolySubtract"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBSubtract"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBSubtractLong"))
	-image "polyMaterialBlendSubtract.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 2) 
	SetMBSSubtract;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyMultiply"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBMultiply"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBMultiplyLong"))
	-image "polyMaterialBlendMultiply.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 3) 
	SetMBSMultiply;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyDivide"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBDivide"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBDivideLong"))
	-image "polyMaterialBlendDivide.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 4) 
	SetMBSDivide;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyAverage")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBAverage"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBAverageLong"))
	-image "polyMaterialBlendAverage.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 5) 
	SetMBSAverage;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPolyModulate2x"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBModulate2"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNewPolyMBModulate2Long"))
	-image "polyMaterialBlendModx2.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command ("polyChangeMaterialBlend " + 6) 
	SetMBSModulate2;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyVertexColorAnnot"))
	-category   ("Other items.Polygon Color")
	-command    ("setPolyColorKeyframe")
	-showInHotkeyEditor false
	SetKeyVertexColor;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorSelectSharedLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorSelectSharedAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorSelectSharedLongAnnot"))
	-image "polyColorInstancesSelect.png"
	-category   ("Menu items.Modeling.Mesh Display.Per Instance Sharing")
	-command    ("polyColorSelectSharedInstances")
	SelectSharedColorInstances;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyColorShareInstancesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyColorShareInstancesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolyColorShareInstancesLongAnnot"))
	-image "polyColorInstancesShare.png"
	-category   ("Menu items.Modeling.Mesh Display.Per Instance Sharing")
	-command    ("polyColorShareInstances")
	ShareColorInstances;

//
//	Polygon Normals menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetVertexNormalLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetVertexNormalAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetVertexNormalLongAnnot"))
	-image "polySetVertexNormal.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySetNormal 0")
	SetVertexNormal;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetVertexNormalOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySetNormal 1")
	SetVertexNormalOptions;

runTimeCommand -default true
	-label 	(uiRes("m_defaultRunTimeCommands.kAveragePolygonNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAveragePolygonNormalsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAveragePolygonNormalsLongAnnot"))
	-image "polyNormalAverage.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolyAverageNormal 0")
	AveragePolygonNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAveragePolygonNormalsOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolyAverageNormal 1")
	AveragePolygonNormalsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetToFaceNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetToFaceNormalsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetToFaceNormalsLongAnnot"))
	-image "polyNormalSetToFace.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySetToFaceNormal 0")
	SetToFaceNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetToFaceNormalsOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolySetToFaceNormal 1")
	SetToFaceNormalsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kReversePolygonNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReversePolygonNormalsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kReversePolygonNormalsLongAnnot"))
	-image "polyNormal.png" 
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolyNormal 0 -1 0")
	ReversePolygonNormals;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReversePolygonNormalsOptionsAnnot"))
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolyNormal 1 -1 0")
	ReversePolygonNormalsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kConformPolygonNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kConformPolygonNormalsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kConformPolygonNormalsLongAnnot"))
	-image "polyNormalsConform.png"
	-category   ("Menu items.Modeling.Mesh Display")
	-command    ("performPolyNormal 0 2 0")
	ConformPolygonNormals;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kLockNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLockNormalsAnnot"))
	-image "polyNormalLock.png"
	-category   ("Other items.Edit Polygons")
	-command    ("expandPolyGroupSelection; polyNormalPerVertex -fn true")
	LockNormals;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUnlockNormalsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUnlockNormalsAnnot"))
	-image "polyNormalUnlock.png"
	-category   ("Other items.Edit Polygons")
	-command    ("expandPolyGroupSelection; polyNormalPerVertex -ufn true")
	UnlockNormals;

runTimeCommand -default true
 	-annotation (uiRes("m_defaultRunTimeCommands.kVertexNormalEditToolAnnot"))
	-category   ("Other items.Polygon Normals")
 	-command    ("setToolTo $gPolyNormEdit")
	-showInHotkeyEditor false
 	VertexNormalEditTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolygonSoftenEdgeLbl"))
 	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonSoftenEdgeAnnot"))
 	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonSoftenEdgeLongAnnot"))
	-image "polySoftEdge.png"
	-category   ("Menu items.Modeling.Mesh Display")
 	-command    ("SoftPolyEdgeElements 1")
 	PolygonSoftenEdge;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolygonHardenEdgeLbl"))
 	-annotation (uiRes("m_defaultRunTimeCommands.kPolygonHardenEdgeAnnot"))
 	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPolygonHardenEdgeLongAnnot"))
	-image "polyHardEdge.png"
	-category   ("Menu items.Modeling.Mesh Display")
 	-command    ("SoftPolyEdgeElements 0")
 	PolygonHardenEdge;

runTimeCommand -default true
 	-annotation (uiRes("m_defaultRunTimeCommands.kSetNormalAngleAnnot"))
	-category   ("Other items.Polygon Normals")
 	-command    ("polySoftEdgeWin")
	-showInHotkeyEditor false
 	SetNormalAngle;

 runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kNurbsCurveToBezierLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNurbsCurveToBezierAnnot"))
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"nurbsCurveToBezier"
	NurbsCurveToBezier;

runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kBezierCurveToNurbsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBezierCurveToNurbsAnnot"))
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"bezierCurveToNurbs"
	BezierCurveToNurbs;

//
//	Subdiv Surfaces menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfaceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfaceAnnot"))
	-image 		"nurbsToSubdivs.png"  
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performSubdivCreate 0")
	CreateSubdivSurface;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfaceOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performSubdivCreate 1")
		CreateSubdivSurfaceOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfacePolyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfacePolyAnnot"))
	-image 		"polyToSubdivs.png"  
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performSubdivCreate 0")
	CreateSubdivSurfacePoly;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivSurfacePolyOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performSubdivCreate 1")
		CreateSubdivSurfacePolyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSubdivToNURBSLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivToNURBSAnnot"))
	-image 		"subdivToNurbs.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performSubdToNurbs 0")
	SubdivToNURBS;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSubdivToNURBSOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performSubdToNurbs true")
		SubdivToNURBSOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTesselateSubdivSurfaceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTesselateSubdivSurfaceAnnot"))
	-image 		"subdivTessellate.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performSubdivTessellate  false")
	TesselateSubdivSurface;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTesselateSubdivSurfaceOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performSubdivTessellate  true")
		TesselateSubdivSurfaceOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExtractSubdivSurfaceVerticesAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("performSubdivExtract  false")
	-showInHotkeyEditor false
	ExtractSubdivSurfaceVertices;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExtractSubdivSurfaceVerticesOptionsAnnot"))
		-category   ("Other items.Subdiv Surfaces")
		-command    ("performSubdivExtract  true")
		-showInHotkeyEditor false
		ExtractSubdivSurfaceVerticesOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCollapseSubdivSurfaceHierarchyAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("performSubdivCollapse false")
	-showInHotkeyEditor false
	CollapseSubdivSurfaceHierarchy;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCollapseSubdivSurfaceHierarchyOptionsAnnot"))
		-category   ("Other items.Subdiv Surfaces")
		-command    ("performSubdivCollapse  true")
		-showInHotkeyEditor false
		CollapseSubdivSurfaceHierarchyOptions;

// legacy command - replaced by SculptGeometryTool
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptSubdivsToolAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("artPuttyToolScript 4")
	-showInHotkeyEditor false
	SculptSubdivsTool;

	// legacy command - replaced by SculptGeometryToolOptions
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSculptSubdivsToolOptionsAnnot"))
		-category   ("Other items.Subdiv Surfaces")
		-command    ("artPuttyToolScript 3")
		-showInHotkeyEditor false
		SculptSubdivsToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorSubdivSurfaceAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("performSubdivMirror false")
	-showInHotkeyEditor false
	MirrorSubdivSurface;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMirrorSubdivSurfaceOptionsAnnot"))
		-category   ("Other items.Subdiv Surfaces")
		-command    ("performSubdivMirror  true")
		-showInHotkeyEditor false
		MirrorSubdivSurfaceOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachSubdivSurfaceAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("performSubdivAttach false")
	-showInHotkeyEditor false
	AttachSubdivSurface;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAttachSubdivSurfaceOptionsAnnot"))
		-category   ("Other items.Subdiv Surfaces")
		-command    ("performSubdivAttach  true")
		-showInHotkeyEditor false
		AttachSubdivSurfaceOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSurfaceHierarchyModeAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdIntoHierMode")
	-showInHotkeyEditor false
	SubdivSurfaceHierarchyMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSurfacePolygonProxyModeAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdIntoPolyMode 1 0 0")
	-showInHotkeyEditor false
	SubdivSurfacePolygonProxyMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSurfaceMatchTopologyAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdMatchTopology")
	-showInHotkeyEditor false
	SubdivSurfaceMatchTopology;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdivSurfaceCleanTopologyAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdCleanTopology")
	-showInHotkeyEditor false
	SubdivSurfaceCleanTopology;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFullCreaseSubdivSurfaceAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("doSubdCrease 1 1")
	-showInHotkeyEditor false
	FullCreaseSubdivSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPartialCreaseSubdivSurfaceAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("doSubdCrease 1 0")
	-showInHotkeyEditor false
	PartialCreaseSubdivSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUncreaseSubdivSurfaceAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("doSubdCrease 0 1")
	-showInHotkeyEditor false
	UncreaseSubdivSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCoarsenSelectedComponentsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdivCoarserLevel; " +
	             "setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` " +
	             "\"+0\" 0")
	-showInHotkeyEditor false
	CoarsenSelectedComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRefineSelectedComponentsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdivCreateRegion; " +
	             "setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` " +
	             "\"+0\" 0")
	-showInHotkeyEditor false
	RefineSelectedComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExpandSelectedComponentsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("createSubdivRegion; changeSubdivRegion -action 2; " +
	             "setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` " +
	             "\"+0\" 0")
	-showInHotkeyEditor false
	ExpandSelectedComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFineLevelComponentDisplayAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` \"+1\" 0")
	-showInHotkeyEditor false
	FineLevelComponentDisplay;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCoarseLevelComponentDisplayAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` \"-1\" 0")
	-showInHotkeyEditor false
	CoarseLevelComponentDisplay;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBaseLevelComponentDisplayAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` \"0\" 0")
	-showInHotkeyEditor false
	BaseLevelComponentDisplay;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCoarserSubdivLevelAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdivCoarserLevel")
	-showInHotkeyEditor false
	CoarserSubdivLevel;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubdivRegionAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdivCreateRegion")
	-showInHotkeyEditor false
	CreateSubdivRegion;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllComponentsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` \"+0\" 0")
	-showInHotkeyEditor false
	ShowAllComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllEditedComponentsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("setSubdivDisplayLevelAndFilter `ls -sl -objectsOnly` \"+0\" 1")
	-showInHotkeyEditor false
	ShowAllEditedComponents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSubdCutUVsAnnot"))
	-category   ("Other items.Subdiv Surfaces")
	-command    ("subdMapCut")
	-showInHotkeyEditor false
	SubdCutUVs;

}
modelingMenus(); 

// ======================================================================
// ======================================================================
//
//	Animation menu set, ie. Animate, Deform, HumanIK, Skeleton, Skin, Constrain,
//	and Character.
//
// ======================================================================
// ======================================================================
proc animationMenus() {
//
//	Animate menu.
//
// ----------------------------------------------------------------------

//	Set Key.
//
runTimeCommand -default true
	-label 	(uiRes("m_defaultRunTimeCommands.kSetKeyLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyAnnot"))
	-image "setKeyframe.png"
	-category   ("Menu items.Animation.Key")
	-command    ("performSetKeyframeArgList 1 {\"0\", \"animationList\"}")
	SetKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyOptionsAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("performSetKeyframeArgList 1 {\"1\", \"animationList\"}")
	SetKeyOptions;

//	Set a breakdown key.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetBreakdownKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetBreakdownKeyAnnot")) 
	-category   ("Menu items.Animation.Key")
	-command    ("performSetBreakdown 0 animationList")
	SetBreakdownKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetBreakdownKeyOptionsAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("performSetBreakdown 1 animationList")
	SetBreakdownKeyOptions;

//  Set Full Body IK keys
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("performSetFullBodyIKKeys 0")
	SetFullBodyIKKeys;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysOptionsAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("performSetFullBodyIKKeys 1")
	SetFullBodyIKKeysOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysAllAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doSetFullBodyIKKeysArgList 3 {\"1\", \"4\", \"\"};")
	SetFullBodyIKKeysAll;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysBodyPartAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doSetFullBodyIKKeysArgList 3 {\"2\", \"4\", \"\"};")
	SetFullBodyIKKeysBodyPart;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysKeyToPinAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doSetFullBodyIKKeysArgList 3 {\"3\", \"4\", \"\"};")
	SetFullBodyIKKeysKeyToPin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFullBodyIKKeysSelectedAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doSetFullBodyIKKeysArgList 3 {\"4\", \"4\", \"\"};")
	SetFullBodyIKKeysSelected;

//	Hold Current Keys.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kHoldCurrentKeysLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kHoldCurrentKeysAnnot")) 
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -insert animationList")
	HoldCurrentKeys;

//	Set Driven Key.
//
runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kSetDrivenKeyOptionsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetDrivenKeyAnnot"))
	-image      "setDrivenKeyframe.png"
	-category   ("Other items.Animate")
	-command    ("setDrivenKeyWindow \"\" {}")
	SetDrivenKey;

//	Go to Previous Driven Key.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kGoToPreviousDrivenKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToPreviousDrivenKeyAnnot"))
	-category   ("Menu items.Animation.Key.Set Driven Key")
	-command    ("advanceToNextDrivenKey -previous \"\"")
	GoToPreviousDrivenKey;

//	Go to Next Driven Key.
//
runTimeCommand -default true
    -label     (uiRes("m_defaultRunTimeCommands.kGoToNextDrivenKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToNextDrivenKeyAnnot"))
	-category   ("Menu items.Animation.Key.Set Driven Key")
	-command    ("advanceToNextDrivenKey -next \"\"")
	GoToNextDrivenKey;

//	Set key for translate/rotate/scale.
//
runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kSetKeyAnimatedLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyAnimatedAnnot"))
	-image      "setKeyOnAnim.png"
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -animated 1")
	SetKeyAnimated;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetKeyTranslateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyTranslateAnnot"))
	-image      "setKeyOnTranslate.png"
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -at translate")
	SetKeyTranslate;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetKeyRotateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyRotateAnnot"))
	-image      "setKeyOnRotate.png"
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -at rotate")
	SetKeyRotate;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetKeyScaleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyScaleAnnot"))
	-image      "setKeyOnScale.png"
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -at scale")
	SetKeyScale;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kInsertLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("insertKey")
	InsertKey;

// Insert key for translate/rotate/scale.
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kInsertKeyTranslateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyTranslateAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -insert -at translate")
	InsertKeyTranslate;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kInsertKeyRotateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyRotateAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -insert -at rotate")
	InsertKeyRotate;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kInsertKeyScaleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyScaleAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("setKeyframe -insert -at scale")
	InsertKeyScale;


//	Create Clip.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateClipAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateClip 0")
	CreateClip;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateClipOptionsAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateClip 1")
	CreateClipOptions;

//      Create Shot.
//
runTimeCommand -default true
        -annotation (uiRes("m_defaultRunTimeCommands.kCreateShotAnnot"))
        -category   ("Editors.Camera Sequencer")
        -command    ("performCreateShot 0")
        CreateShot;

runTimeCommand -default true
        -annotation (uiRes("m_defaultRunTimeCommands.kCreateShotOptionsAnnot"))
        -category   ("Editors.Camera Sequencer")
        -command    ("performCreateShot 1")
        CreateShotOptions;

//	Create Constraint Clip.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstraintClipAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateConstraintClip 0")
	CreateConstraintClip;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstraintClipOptionsAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateConstraintClip 1")
	CreateConstraintClipOptions;

//	Create Expression Clip.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateExpressionClipAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateExpClip 0")
	CreateExpressionClip;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateExpressionClipOptionsAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreateExpClip 1")
	CreateExpressionClipOptions;

//	Create Pose
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePoseAnnot")) 
	-category   ("Editors.Trax Editor")
	-command    ("performCreatePose 0")
	CreatePose;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePoseOptionsAnnot"))
	-category   ("Editors.Trax Editor")
	-command    ("performCreatePose 1")
	CreatePoseOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddGeomCacheAnnot"))
	-image "createCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 0 \"add\"")
	geometryCache;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAttachGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachGeomCacheAnnot"))
	-image "importCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("doImportCacheArgList(0,{})")
	attachGeometryCache;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheAnnot"))
	-image "replaceCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 0 \"replace\"")
	geometryReplaceCache;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMergeGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeGeomCacheAnnot"))
	-image "mergeCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 0 \"merge\"")
	geometryMergeCache;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExportGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportGeomCacheAnnot"))
	-image "exportCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 0 \"export\"")
	geometryExportCache;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheAnnot"))
	-image "deleteCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performDeleteGeometryCache 0")
	deleteGeometryCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddGeomCacheOptAnnot"))
	-image "createCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 1 \"add\"")
	geometryCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheOptAnnot"))
	-image "replaceCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 1 \"replace\"")
	geometryReplaceCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeGeomCacheOptAnnot"))
	-image "mergeCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 1 \"merge\"")
	geometryMergeCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExportGeomCacheOptAnnot"))
	-image "exportCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performCreateGeometryCache 1 \"export\"")
	geometryExportCacheOpt;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kDisableAllGeometryCacheLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kDisableAllGeometryCacheAnnot"))
	-image "disableAllCaches.png"
	-command "setCacheEnable 0 0 {}"
	DisableAllGeometryCache;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kEnableAllGeometryCacheLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kEnableAllGeometryCacheAnnot"))
	-image "enableAllCaches.png"
	-command "setCacheEnable 1 0 {}"
	EnableAllGeometryCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheOptAnnot"))
	-image "deleteCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performDeleteGeometryCache 1")
	geometryDeleteCacheOpt;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAppendGeomCacheLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kAppendGeomCacheAnnot"))
	-image "appendCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performAppendGeometryCache 0")
	geometryAppendCache;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kAppendGeomCacheOptAnnot"))
	-image "appendCache.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performAppendGeometryCache 1")
	geometryAppendCacheOpt;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheFrames"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheFramesAnnot"))
	-image "replaceCacheFrame.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performReplaceGeometryCacheFrames 0")
	geometryReplaceCacheFrames;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kReplaceGeomCacheFramesOptAnnot"))
	-image "replaceCacheFrame.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performReplaceGeometryCacheFrames 1")
	geometryReplaceCacheFramesOpt;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheFramesLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheFramesAnnot"))
	-image "deleteCacheFrame.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performDeleteGeometryCacheFrames 0")
	geometryDeleteCacheFrames;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteHistoryAheadCacheLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteHistoryAheadCacheAnnot"))
	-image "deleteCacheHistory.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("bakePartialHistory -preCache")
    deleteHistoryAheadOfGeomCache;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteGeomCacheFramesOptAnnot"))
	-image "deleteCacheFrame.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("performDeleteGeometryCacheFrames 1")
	geometryDeleteCacheFramesOpt;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintGeomCacheToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintGeomCacheToolAnnot"))
	-image "paintCacheWeights.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("artAttrCacheToolScript 4 ")
	PaintGeomCacheTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintGeomCacheOptAnnot"))
	-image "paintCacheWeights.png"
	-category	("Menu items.Cache.Geometry Cache")
	-command	("artAttrCacheToolScript 3 ")
	PaintGeomCacheToolOptions;

// Export Animation
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportAnimLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportAnimAnnot"))
	-category	("Menu items.Common.File.ATOM")
	-command	("performExportAnim 1")
	ExportAnim;

// Import Animation
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kImportAnimLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kImportAnimAnnot"))
	-category	("Menu items.Common.File.ATOM")
	-command	("performImportAnim 1")
	ImportAnim;

// Create ATOM template
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateATOMTemplateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateATOMTemplateAnnot"))
	-category	("Menu items.Common.File.ATOM")
	-command	("createATOMTemplate 1")
	ATOMTemplate;


//	Create Motion Trail
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateMotionTrailLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateMotionTrailAnnot"))
	-image       "motionTrail.png" 
	-category   ("Menu items.Animation.Visualize")
	-command    ("performMotionTrail 0")
	CreateMotionTrail;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateMotionTrailOptionsAnnot")) 
	-category   ("Menu items.Animation.Visualize")
	-command    ("performMotionTrail 1")
	CreateMotionTrailOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAnimationSnapshotLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationSnapshotAnnot"))
	-image      "animateSnapshot.png"
	-category   ("Menu items.Animation.Visualize")
	-command    ("performSnapshot 0")
	AnimationSnapshot;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationSnapshotOptionsAnnot"))
	-category   ("Menu items.Animation.Visualize")
	-command    ("performSnapshot 1")
	AnimationSnapshotOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kUpdateSnapshotLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateSnapshotAnnot")) 
	-image "updateMotionTrail.png"
	-category   ("Menu items.Animation.Visualize")
	-command "updateMotionTrail" 
	UpdateSnapshot;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAnimationSweepLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationSweepAnnot"))
	-image      "animateSweep.png"
	-category   ("Menu items.Animation.Visualize")
	-command    ("performAnimSweep 0")
	AnimationSweep;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationSweepOptionsAnnot"))
	-category   ("Menu items.Animation.Visualize")
	-command    ("performAnimSweep 1")
	AnimationSweepOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAnimationTurntableLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationTurntableAnnot"))
	-image      "animTurntable.png"
	-category   ("Menu items.Animation.Visualize")
	-command    ("performAnimTurntable 0")
	AnimationTurntable;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationTurntableOptionsAnnot"))
	-category   ("Menu items.Animation.Visualize")
	-command    ("performAnimTurntable 1")
	AnimationTurntableOptions;


runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilAnnot"))
	-image      "BluePencil.png"
	-category   ("Menu items.Animation.Visualize")
	-plugin     ("bluePencil")
	-command    ("bpOpenMenu")
	OpenBluePencil;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilToolBarButtonLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilToolBarAnnot"))
	-image      "BluePencil.png"
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bpToggleToolBar")
	ToggleBluePencilToolBar;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilInsertFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilInsertFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -insert")
	InsertBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilDuplicateFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilDuplicateFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -duplicate")
	DuplicateBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilDeleteFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilDeleteFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -delete")
	DeleteBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilCutFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilCutFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -cut")
	CutBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilCopyFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilCopyFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -copy")
	CopyBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilPasteFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilPasteFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -paste")
	PasteBluePencilFrame;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kBluePencilClearFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBluePencilClearFrameAnnot"))
	-category   ("Other items.Blue Pencil")
	-plugin     ("bluePencil")
	-command    ("bluePencilFrame -clear")
	ClearBluePencilFrame;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kBluePencilStepBackwardFrameLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilStepBackwardFrameAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilFrame -stepBack")
    PreviousBluePencilFrame;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kBluePencilStepForwardFrameLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilStepForwardFrameAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilFrame -stepForward")
    NextBluePencilFrame;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilBrushSizeOnAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilUtil -adjustBrushSize true")
    -hotkeyCtx  ("bpDraw")
    BluePencilActivateBrushSize;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilBrushSizeOffAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilUtil -adjustBrushSize false")
    -hotkeyCtx  ("bpDraw")
    BluePencilDeactivateBrushSize;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilOpacityOnAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilUtil -adjustOpacity true")
    -hotkeyCtx  ("bpDraw")
    BluePencilActivateOpacity;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kBluePencilOpacityOffAnnot"))
    -category   ("Other items.Blue Pencil")
    -plugin     ("bluePencil")
    -command    ("bluePencilUtil -adjustOpacity false")
    -hotkeyCtx  ("bpDraw")
    BluePencilDeactivateOpacity;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAnimationSetTimecodeAnnot"))
	-category   ("Menu items.Animation.Key")
	-command    ("performSetTimecode")
	SetTimecode;

//  IK/FK switching
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kToggleFkIkLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleFkIkAnnot"))
    -category ("Menu items.Animation.Key.IK/FK Keys")
    -command "updateIKFKState"
    ToggleFkIk;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetIKFKKeyframeLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kSetIKFKKeyframeAnnot"))
    -category ("Menu items.Animation.Key.IK/FK Keys")
    -command "ikFK(0, `ls -sl`)"
    SetIKFKKeyframe;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kConnectToIKFKLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kConnectToIKFKAnnot")) 
    -category ("Menu items.Animation.Key.IK/FK Keys")
    -command "connectToIKFK()"
    ConnectNodeToIKFK;

runTimeCommand -default true
    -label    (uiRes("m_defaultRunTimeCommands.kMoveIKtoFKLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveIKtoFKAnnot")) 
    -category ("Menu items.Animation.Key.IK/FK Keys")
    -command "moveIKtoFK()"
    MoveIKtoFK;

//	Set Key Path.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetKeyPathLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetKeyPathAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetKeyPathLongAnnot"))
	-image      "motionPathKey.png"
	-category   ("Menu items.Animation.Constrain.Motion Paths;Menu items.Rigging.Constrain.Motion Paths")
	-command    ("setKeyPath")
	SetKeyPath;

//	Animate object(s) along a path, followed by the path curve.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAttachToPathLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachToPathAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAttachToPathLongAnnot"))
	-image      "motionPath.png"
	-category   ("Menu items.Animation.Constrain.Motion Paths;Menu items.Rigging.Constrain.Motion Paths")
	-command    ("performPathAnimation 0")
	AttachToPath;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachToPathOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain.Motion Paths;Menu items.Rigging.Constrain.Motion Paths")
	-command    ("performPathAnimation 1")
	AttachToPathOptions;

//	Set object(s) to flow along path
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kFlowPathObjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFlowPathObjectAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kFlowPathObjectLongAnnot"))
	-image      "flowPathObj.png"
	-category   ("Menu items.Animation.Constrain.Motion Paths;Menu items.Rigging.Constrain.Motion Paths")
	-command    ("performFlow 0")
	FlowPathObject;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFlowPathObjectOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain.Motion Paths;Menu items.Rigging.Constrain.Motion Paths")
	-command    ("performFlow 1")
	FlowPathObjectOptions;

//	Time Warps
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAddTimeWarpLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddTimeWarpAnnot"))
	-image      "addTimeWarp.png"
	-category   ("Menu items.Animation.Key.Scene Time Warp")
	-command    ("sceneTimeWarp \"add\"")
	AddTimeWarp;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSelectTimeWarpLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectTimeWarpAnnot"))
    -image      "selectTimeWarp.png"
	-category   ("Menu items.Animation.Key.Scene Time Warp")
	-command    ("sceneTimeWarp \"select\"")
	SelectTimeWarp;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kDeleteTimeWarpLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteTimeWarpAnnot"))
	-image      "deleteTimeWarp.png"
	-category   ("Menu items.Animation.Key.Scene Time Warp")
	-command    ("sceneTimeWarp \"delete\"")
	DeleteTimeWarp;

// 	Enable Time Warp
//
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kEnableTimeWarpLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableTimeWarpAnnot")) 
	-image "enableTimeWarp.png"
	-category   ("Menu items.Animation.Key.Scene Time Warp")
	-command "setAttr time1.enableTimewarp (!`getAttr time1.enableTimewarp`); currentTime `currentTime -q`;"
	EnableTimeWarp;

// Animation offset

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAddAnimationOffsetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddAnimationOffsetAnnot"))
	-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command    ("performAddAnimationOffset 0")
	AddAnimationOffset;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAddAnimationOffsetOptionsAnnot"))
		-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
		-command    ("performAddAnimationOffset 1")
		AddAnimationOffsetOptions;

//	Key and Tangent marking menus.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kKeyTangentMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildKeyframeTangentMM")
	KeyframeTangentMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kKeyTangentMMAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	KeyframeTangentMarkingMenuPopDown;

if( hasTraversalMM() ){
	//	Traversal marking menus.
	//
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTraversalMenuAnnot"))
		-category   ("Other items.Miscellaneous")
		-command    ("{global int $gTraversal;$gTraversal = 1;}")
		-showInHotkeyEditor false
		TraversalMarkingMenu;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTraversalMMAnnot"))
		-category   ("Other items.Miscellaneous")
		-command    ("{global int $gTraversal;$gTraversal = 0;}")
		-showInHotkeyEditor false
		TraversalMarkingMenuPopDown;
}

// key blendshape targets weight
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kKeyBlendShapeTargetWeightsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kKeyBlendShapeTargetWeightsAnnot")) 
	-category	("Menu items.Animation.Key")
	-command    ("performSetBlendshapeTargetWtKeys")
	KeyBlendShapeTargetsWeight;


//
//	Outliner Editor Menus.
//
// ----------------------------------------------------------------------


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorExpandAllItemsAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -eai 1 $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerExpandAllItems;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorRetractAllItemsAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -eai 0 $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerCollapseAllItems;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorExpandAllSelectedItemsAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -eas 1 $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerExpandAllSelectedItems;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorRetractAllSelectedItemsAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -eas 0 $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerCollapseAllSelectedItems;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorDoHideAnnot"))
	-category 	("Editors.Outliner")
	-command 	("doHideInOutliner 1")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerDoHide;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorUnhideAnnot"))
	-category 	("Editors.Outliner")
	-command 	("doHideInOutliner 0")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerUnhide;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorDAGObjectsOnlyAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showDagOnly $panel`;\n" + 
				 "		outlinerEditor -e -showDagOnly (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleDAGOnly;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorShapesAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showShapes $panel`;\n" + 
				 "		outlinerEditor -e -showShapes (!$bool) $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleShapes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorAssignedMaterialAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showAssignedMaterials $panel`;\n" + 
				 "		outlinerEditor -e -showAssignedMaterials (!$bool) $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleAssignedMaterials;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorTimeEditorAnnot"))
		-category 	("Editors.Outliner")
		-command 	("{\n" +
					 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
					 "	if (\"\" != $panel) {\n" +
					 "		int $bool = `outlinerEditor -q -showTimeEditor $panel`;\n" + 
					 "		outlinerEditor -e -showTimeEditor (!$bool) $panel;\n" +
					 "	}\n" + 
					 "}\n")
		-hotkeyCtx 	("outlinerPanel")
		OutlinerToggleTimeEditor;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorReferenceNodesAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showReferenceNodes $panel`;\n" + 
				 "		outlinerEditor -e -showReferenceNodes (!$bool) $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleReferenceNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorReferenceMembersAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showReferenceMembers $panel`;\n" + 
				 "		outlinerEditor -e -showReferenceMembers (!$bool) $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleReferenceMembers;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorAttributesAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showAttributes $panel`;\n" + 
				 "		outlinerEditor -e -showAttributes (!$bool) $panel;\n" +
				 "	}\n" + 
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleAttributes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorSetMembersAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showSetMembers $panel`;\n" + 
				 "		outlinerEditor -e -showSetMembers (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleSetMembers;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorConnectedAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showConnected $panel`;\n" + 
				 "		outlinerEditor -e -showConnected (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleConnected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorNamespaceAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showNamespace $panel`;\n" + 
				 "		outlinerEditor -e -showNamespace (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleNamespace;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorIgnoreHiddenAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -ignoreHiddenAttribute $panel`;\n" + 
				 "		outlinerEditor -e -ignoreHiddenAttribute (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleIgnoreHidden;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorIgnoreUseColorAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -ignoreOutlinerColor $panel`;\n" + 
				 "		outlinerEditor -e -ignoreOutlinerColor (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleIgnoreUseColor;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorShowMuteInfoAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -showMuteInfo $panel`;\n" + 
				 "		outlinerEditor -e -showMuteInfo (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleShowMuteInformation;	
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorOraganizeByLayerAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -organizeByLayer $panel`;\n" + 
				 "		outlinerEditor -e -organizeByLayer (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleOrganizeByLayer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorOraganizeByClipAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -organizeByClip $panel`;\n" + 
				 "		outlinerEditor -e -organizeByClip (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleOrganizeByClip;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorAutoExpandLayersAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		int $bool = `outlinerEditor -q -autoExpandLayers $panel`;\n" + 
				 "		outlinerEditor -e -autoExpandLayers (!$bool) $panel;\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerToggleAutoExpandLayers;		

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorRevealSelectedAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -sc 1 $panel;\n" + 
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerRevealSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutlinerEditorRenameSelectedItemAnnot"))
	-category 	("Editors.Outliner")
	-command 	("{\n" +
				 "	string $panel = `getCurrentOutlinerPanel`;\n" +  
				 "	if (\"\" != $panel) {\n" +
				 "		outlinerEditor -e -rsi $panel;\n" + 
				 "	}\n" +
				 "}\n")
	-hotkeyCtx 	("outlinerPanel")
	OutlinerRenameSelectedItem;

//
//	Graph Editor Menus.
//
// ----------------------------------------------------------------------

int $performBase = 3;
string $graphEd = "graphEditor1GraphEd";
string $selectionConnection = "graphEditor1GraphEd";
string $options = "useSmoothness bufferCurve";

//           Graph Editor Edit Menu:
//

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdCutAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performCutKeyArgList 1 {\"" + $performBase + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphCut;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdCutOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performCutKeyArgList 1 {\"" + ($performBase + 1) + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphCutOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdCopyAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performCopyKeyArgList 1 {\"" + $performBase + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphCopy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdCopyOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performCopyKeyArgList 1 {\"" + ($performBase + 1) + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphCopyOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdPasteAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performPasteKeyArgList 1 {\"" + $performBase + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphPaste;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdPasteOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performPasteKeyArgList 1 {\"" + ($performBase + 1) + "\", \"" + $selectionConnection + "\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphPasteOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdDeleteAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performClearKeyArgList 1 {\"" + $performBase + "\", \"" + $selectionConnection + "\", \"0\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphDelete;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdDeleteOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("performClearKeyArgList 1 {\"" + ($performBase + 1) + "\", \"" + $selectionConnection + "\", \"0\", \"1\"}")
	-hotkeyCtx  ("graphEditor")
	GraphDeleteOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphSnapAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performSnapKeyArgList 1 { \"" + $performBase + "\", \"" + $selectionConnection + "\", \"1\" }" )
	-hotkeyCtx  ("graphEditor")
	GraphSnap;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEdSnapOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performSnapKeyArgList 1 { \"" + ($performBase + 1) + "\", \"" + $selectionConnection + "\", \"1\" }")
	-hotkeyCtx  ("graphEditor")
	GraphSnapOptions;

//		Graph Editor Select Menu
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorEnableeCurveSelectionAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("selectType -animCurve 1;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorEnableCurveSelection;
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorDisableCurveSelectionAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("selectType -animCurve 0;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorDisableCurveSelection;
    
//		Graph Editor View Menu
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleBufferAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("animCurveEditor -edit -showBufferCurves tgl " + $graphEd + ";")
	-hotkeyCtx  ("graphEditor")
	ToggleShowBufferCurves;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAutoFrameAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ( "optionVar -intValue graphEditorAutoFit (!`optionVar -query graphEditorAutoFit`); animCurveEditor -edit -autoFit tgl " + $graphEd + ";" )
	-hotkeyCtx  ("graphEditor")
	ToggleAutoFrame;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAutoFrameTimeAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ( "optionVar -intValue graphEditorAutoFitTime (!`optionVar -query graphEditorAutoFitTime`); animCurveEditor -edit -autoFitTime tgl " + $graphEd + ";" )
	-hotkeyCtx  ("graphEditor")
	ToggleAutoFrameTime;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleShowResultsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -showResults tgl " + $graphEd + ";")
	-hotkeyCtx  ("graphEditor")
	ToggleShowResults;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowResultsOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performShowResults 1 " + $graphEd)
	-hotkeyCtx  ("graphEditor")
	ShowResultsOptions;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kGraphEditorFrameAllAnnot"))
	-category	("Editors.Graph Editor")
	-hotkeyCtx	("graphEditor")
	-command	("animCurveEditor -e -lookAt all " + $graphEd + ";")
	GraphEditorFrameAll;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kGraphEditorFrameSelectedAnnot"))
	-category	("Editors.Graph Editor")
	-hotkeyCtx	("graphEditor")
	-command	("animCurveEditor -e -lookAt selected " + $graphEd + ";")
	GraphEditorFrameSelected;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kGraphEditorFramePlaybackRangeAnnot"))
	-category	("Editors.Graph Editor")
	-hotkeyCtx	("graphEditor")
	-command	("animView -startTime (`playbackOptions -query -minTime` - 1) -endTime (`playbackOptions -query -maxTime` + 1) " + $graphEd + ";")
	GraphEditorFramePlaybackRange;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kGraphEditorFrameCenterViewAnnot"))
	-category	("Editors.Graph Editor")
	-hotkeyCtx	("graphEditor")
	-command	("animCurveEditor -edit -lookAt currentTime " + $graphEd + ";")
	GraphEditorFrameCenterView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorAlwaysDisplayTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -displayTangents true -displayActiveKeyTangents false " + $graphEd + "; " +
              "optionVar -iv graphEditorDisplayTangents true; optionVar -iv graphEditorDisplayActiveTangents false;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorAlwaysDisplayTangents;
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorNeverDisplayTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -displayTangents false -displayActiveKeyTangents false " + $graphEd + "; " +
              "optionVar -iv graphEditorDisplayTangents false; optionVar -iv graphEditorDisplayActiveTangents false;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorNeverDisplayTangents;     
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorDisplayTangentActiveAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -displayTangents false -displayActiveKeyTangents true " + $graphEd + "; " +
              "optionVar -iv graphEditorDisplayTangents false; optionVar -iv graphEditorDisplayActiveTangents true;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorDisplayTangentActive;    
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorNormalViewAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("graphEditorSetViewMode " + $graphEd + " 0;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorAbsoluteView;
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorStackedViewAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("graphEditorSetViewMode " + $graphEd + " 1;")       
	-hotkeyCtx  ("graphEditor")
	GraphEditorStackedView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorNormalizedViewAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("graphEditorSetViewMode " + $graphEd + " 2;")
	-hotkeyCtx  ("graphEditor")
	GraphEditorNormalizedView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorDisplayValues"))
	-category   ("Editors.Graph Editor")
	-command    ("optionVar -intValue graphEditorDisplayValues (!`optionVar -query graphEditorDisplayValues`); animCurveEditor -edit -displayValues tgl " + $graphEd + ";" )
	-hotkeyCtx  ("graphEditor")
	GraphEditorDisplayValues;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGraphEditorDisplayValueLines"))
	-category   ("Editors.Graph Editor")
	-command    ("optionVar -intValue graphEditorValueLinesToggle (!`optionVar -query graphEditorValueLinesToggle`); animCurveEditor -edit -valueLinesToggle tgl " + $graphEd + ";" )
	-hotkeyCtx  ("graphEditor")
	GraphEditorValueLinesToggle;

//		Graph Editor Keys Menu
//

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBreakTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangentNoOptions \"-lock off\" " )
	-hotkeyCtx  ("graphEditor")
	BreakTangents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnifyTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangentNoOptions \"-unify\" " )
	-hotkeyCtx  ("graphEditor")
	UnifyTangents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLockTangentWeightAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangentNoOptions \"-weightLock on\" " )
	-hotkeyCtx  ("graphEditor")
	LockTangentWeight;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFreeTangentWeightAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangentNoOptions \"-weightLock off\" " )
	-hotkeyCtx  ("graphEditor")
	FreeTangentWeight;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToKeyAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doKeyEdit \"-breakdown false\" " + $selectionConnection + " noOptions")
	-hotkeyCtx  ("graphEditor")
	ConvertToKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertToBreakdownAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doKeyEdit \"-breakdown true\" " + $selectionConnection + " noOptions")
	-hotkeyCtx  ("graphEditor")
	ConvertToBreakdown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInbetweenAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doKeyEdit \"\" " + $graphEd + " \"bufferCurve addInbetween\"")
	-hotkeyCtx  ("graphEditor")
	AddInbetween;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveInbetweenAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doKeyEdit \"\" " + $graphEd + " \"bufferCurve removeInbetween\"")
	-hotkeyCtx  ("graphEditor")
	RemoveInbetween;


// 		Graph Editor Curves Menu:
//

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreInfCycleAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-pri cycle\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PreInfinityCycle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreInfCycleOffsetAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-pri cycleRelative\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PreInfinityCycleOffset;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreInfOscillateAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-pri oscillate\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PreInfinityOscillate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreInfLinearAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-pri linear\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PreInfinityLinear;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreInfConstantAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-pri constant\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PreInfinityConstant;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPostInfCycleAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-poi cycle\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PostInfinityCycle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPostInfCycleOffsetAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-poi cycleRelative\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PostInfinityCycleOffset;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPostInfOscillateAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-poi oscillate\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PostInfinityOscillate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPostInfLinearAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-poi linear\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PostInfinityLinear;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPostInfConstantAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doSetInfinity \"-poi constant\" " + $selectionConnection + " " + "\"" + $options + "\"")
	-hotkeyCtx  ("graphEditor")
	PostInfinityConstant;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveSmoothCoarseAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -smoothness coarse " + $graphEd)
	-hotkeyCtx  ("graphEditor")
	CurveSmoothnessCoarse;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveSmoothRoughAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("animCurveEditor -edit -smoothness rough " + $graphEd)
	-hotkeyCtx  ("graphEditor")
	CurveSmoothnessRough;

runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCyrveSmoothMedAnnot"))
		-category   ("Editors.Graph Editor")
		-command ("animCurveEditor -edit -smoothness medium " + $graphEd)
		-hotkeyCtx  ("graphEditor")
		CurveSmoothnessMedium;

runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCurveSmoothFineAnnot"))
		-category   ("Editors.Graph Editor")
		-command ("animCurveEditor -edit -smoothness fine " + $graphEd)
		-hotkeyCtx  ("graphEditor")
		CurveSmoothnessFine;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLockChannelAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doTemplateChannel graphEditor1FromOutliner 1")
	-hotkeyCtx  ("graphEditor")
	GraphEditorLockChannel;        
       
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnlockChannelAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("doTemplateChannel graphEditor1FromOutliner 0")
	-hotkeyCtx  ("graphEditor")
	GraphEditorUnlockChannel;
       
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeChannelAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performBakeResults " + $performBase + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	BakeChannel;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeChannelOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performBakeResults " + ($performBase + 1) + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	BakeChannelOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSimplifyCurveAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performSimplify " + $performBase + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	SimplifyCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSimplifyCurveOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performSimplify " + ($performBase + 1) + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	SimplifyCurveOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResampleCurveAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performResample " + $performBase + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	ResampleCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResampleCurveOptionsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("performResample " + ($performBase + 1) + " " + $selectionConnection)
	-hotkeyCtx  ("graphEditor")
	ResampleCurveOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBufferCurveSnapAnnot"))
	-category   ("Editors.Graph Editor")
	-command "bufferCurve -animation \"keys\" -overwrite true"
	-hotkeyCtx  ("graphEditor")
	BufferCurveSnapshot;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSwapBufferAnnot"))
	-category   ("Editors.Graph Editor")
	-command "bufferCurve -animation \"keys\" -swap"
	-hotkeyCtx  ("graphEditor")
	SwapBufferCurve;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNonWeightTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-edit -weightedTangents false\" " )
	-hotkeyCtx  ("graphEditor")
	NonWeightedTangents;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWeightedTangentsAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-edit -weightedTangents true\" " )
	-hotkeyCtx  ("graphEditor")
	WeightedTangents;

//		Graph Editor Tangents Menu:
//

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsSplineAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt spline -ott spline\" " )
	-hotkeyCtx  ("graphEditor")
	TangentSpline;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsLinearAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt linear -ott linear\" " )
	-hotkeyCtx  ("graphEditor")
	TangentLinear;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsClampedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt clamped -ott clamped\" " )
	-hotkeyCtx  ("graphEditor")
	TangentClamped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsSteppedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott step\" " )
	-hotkeyCtx  ("graphEditor")
	TangentStepped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsStepNextAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott stepnext\" " )
	-hotkeyCtx  ("graphEditor")
	TangentStepNext;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsFlatAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt flat -ott flat\" " )
	-hotkeyCtx  ("graphEditor")
	TangentFlat;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsFixedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt fixed -ott fixed\" " )
	-hotkeyCtx  ("graphEditor")
	TangentFixed;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsPlateauAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt plateau -ott plateau\" " )
	-hotkeyCtx  ("graphEditor")
	TangentPlateau;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsAutoEaseAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt autoease -ott autoease\" " )
	-hotkeyCtx  ("graphEditor")
	TangentAutoEase;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsAutoMixAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt automix -ott automix\" " )
	-hotkeyCtx  ("graphEditor")
	TangentAutoMix;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsAutoCustomAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 0 0 ")
	-hotkeyCtx  ("graphEditor")
	TangentAutoCustom;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsAutoCustomOptionAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 1 0 ")
	-hotkeyCtx  ("graphEditor")
	TangentAutoCustomOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentsAutoSpanAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt auto -ott auto\" " )
	-hotkeyCtx  ("graphEditor")
	TangentAuto;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentSplineAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt spline\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentSpline;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentLinearAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt linear\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentLinear;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentClampedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt clamped\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentClamped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentSteppedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt step\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentStepped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentStepNextAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt stepnext\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentStepNext;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentFlatAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt flat\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentFlat;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentFixedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt fixed\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentFixed;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentPlateauAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt plateau\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentPlateau;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentAutoEaseAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt autoease\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentAutoEase;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentAutoMixAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt automix\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentAutoMix;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentAutoCustomAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 0 1 ")
	-hotkeyCtx  ("graphEditor")
	InTangentAutoCustom;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentAutoCustomOptionAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 1 1 ")
	-hotkeyCtx  ("graphEditor")
	InTangentAutoCustomOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInTangentAutoSpanAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -itt auto\" " )
	-hotkeyCtx  ("graphEditor")
	InTangentAuto;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentSplineAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott spline\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentSpline;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentLinearAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott linear\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentLinear;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentClampedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott clamped\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentClamped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentSteppedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott step\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentStepped;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentStepNextAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott stepnext\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentStepNext;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentFlatAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott flat\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentFlat;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentFixedAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott fixed\" " )
	OutTangentFixed;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentPlateauAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott plateau\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentPlateau;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentAutoEaseAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott autoease\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentAutoEase;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentAutoMixAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott automix\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentAutoMix;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentAutoCustomAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 0 2 ")
	-hotkeyCtx  ("graphEditor")
	OutTangentAutoCustom;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentAutoCustomOptionAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("gePerformAutoCustomTangents 1 2 ")
	-hotkeyCtx  ("graphEditor")
	OutTangentAutoCustomOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOutTangentAutoSpanAnnot"))
	-category   ("Editors.Graph Editor")
	-command ("geDoKeyTangent \"-e -ott auto\" " )
	-hotkeyCtx  ("graphEditor")
	OutTangentAuto;

//
//	Deform menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kEditMembershipTool"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEditMembershipAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kEditMembershipLongAnnot"))
	-image "setEdit.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("setToolTo setEditContext")
	EditMembershipTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPruneClusterLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneClusterAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPruneClusterLongAnnot"))
	-image "pruneCluster.png"
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("cluster -e -pr")
	PruneCluster;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPruneLatticeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneLatticeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPruneLatticeLongAnnot"))
	-image "pruneLattice.png"
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("lattice -e -pr")
	PruneLattice;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPruneSculptLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneSculptAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPruneSculptLongAnnot"))
	-image "pruneSculpt.png"
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("sculpt -e -pr")
	PruneSculpt;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPruneWireLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPruneWireLongAnnot"))
	-image "pruneWire.png"
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("wire -e -pr")
	PruneWire;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBlendShapeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBlendShapeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kBlendShapeLongAnnot"))
	-image "blendShape.png"
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command    ("performBlendShape 0 1")
	CreateBlendShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBlendShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command    ("performBlendShape 1 1")
	CreateBlendShapeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddBlendShapeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddBlendShapeAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kAddBlendShapeLongAnnot"))
    -image "blendShapePlus.png"
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeAdd 0")
	AddBlendShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddBlendShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeAdd 1")
	AddBlendShapeOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddTargetShapeAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performTargetShapeAdd 0")
	AddTargetShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddTargetShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performTargetShapeAdd 1")
	AddTargetShapeOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddSelectionAsTargetShapeAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performTargetShapeAddSelection 0")
	AddSelectionAsTargetShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddTargetShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performTargetShapeAddSelection 1")
	AddSelectionAsTargetShapeOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddCombinationTargetAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performCombinationTargetAdd 0")
	AddCombinationTarget;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddCombinationTargetOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performCombinationTargetAdd 1")
	AddCombinationTargetOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetAsCombinationTargetAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performAddCombinationShape 0")
	SetAsCombinationTarget;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetAsCombinationTargetOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performAddCombinationShape 1")
	SetAsCombinationTargetOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddSelectionAsCombinationTargetAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performCombinationTargetAddSelection 0")
	AddSelectionAsCombinationTarget;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddSelectionAsCombinationTargetOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performCombinationTargetAddSelection 1")
	AddSelectionAsCombinationTargetOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInBetweenTargetShapeAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performInBetweenTargetShapeAdd 0")
	AddInBetweenTargetShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInBetweenTargetShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performInBetweenTargetShapeAdd 1")
	AddInBetweenTargetShapeOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddSelectionAsInBetweenTargetShapeAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performInBetweenTargetShapeAdd 2")
	AddSelectionAsInBetweenTargetShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInBetweenTargetShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performInBetweenTargetShapeAdd 3")
	AddSelectionAsInBetweenTargetShapeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveBlendShapeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveBlendShapeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveBlendShapeLongAnnot"))
	-image "removeBlendShape.png"
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeRemove 0")
	RemoveBlendShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveBlendShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeRemove 1")
	RemoveBlendShapeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSwapBlendShapeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSwapBlendShapeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSwapBlendShapeLongAnnot"))
	-image "swapBlendShape.png"
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeSwap 0")
	SwapBlendShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSwapBlendShapeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Blend Shape;Menu items.Animation.Key.Edit Blend Shape;Menu items.Rigging.Deform.Blend Shape")
	-command    ("performBlendShapeSwap 1")
	SwapBlendShapeOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kLatticeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLatticeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kLatticeLongAnnot"))
	-image "lattice.png"
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand ffd.cmd_create 0"
	CreateLattice;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLatticeOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand ffd.cmd_create 1"
    CreateLatticeOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kResetLatticeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kResetLatticeAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kResetLatticeLongAnnot"))
	-image "resetLattice.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command    ("lattice -edit -latticeReset")
	ResetLattice;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveLatticeTweaksLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveLatticeTweaksAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveLatticeTweaksLongAnnot"))
	-image "removeTweaks.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command    ("lattice -edit -removeTweaks")
	RemoveLatticeTweaks;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kClusterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kClusterAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kClusterLongAnnot"))
	-image "cluster.png"
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command "pythonRunTimeCommand cluster.cmd_create 0"
	CreateCluster;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kClusterOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command "pythonRunTimeCommand cluster.cmd_create 1"
	CreateClusterOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBendLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBendAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kBendLongAnnot"))
	-image "bendNLD.png"
	-category   ("Menu items.Modeling.Deform.Prune Membership;Menu items.Rigging.Deform.Prune Membership")
	-command "pythonRunTimeCommand bend.cmd_create 0"
	Bend;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBendOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand bend.cmd_create 1"
	BendOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCurveWarpLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveWarpAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCurveWarpLongAnnot"))
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command "createCurveWarp"
	CurveWarp;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeltaMushLbl")) 
    -annotation (uiRes("m_defaultRunTimeCommands.kDeltaMushAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kDeltaMushLongAnnot"))
	-image "deltaMush.png"
	-category   ("Menu items.Modeling.Deform.Lattice;Menu items.Animation.Key.Edit Lattice;Menu items.Rigging.Deform.Lattice")
    -command "pythonRunTimeCommand deltaMush.cmd_create 0"
    DeltaMush;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeltaMushOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand deltaMush.cmd_create 1"
    DeltaMushOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kTensionLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kTensionAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kTensionLongAnnot"))
    -image "tension.png"
    -category   ("Menu items.Modeling.Deform.Lattice;Menu items.Animation.Key.Edit Lattice;Menu items.Rigging.Deform.Lattice")
    -command "pythonRunTimeCommand tension.cmd_create 0"
	Tension;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kTensionOptionsAnnot"))
    -category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand tension.cmd_create 1"
	TensionOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSolidifyLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kSolidifyAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kSolidifyLongAnnot"))
    -image "solidify.png"
    -category   ("Menu items.Modeling.Deform.Lattice;Menu items.Animation.Key.Edit Lattice;Menu items.Rigging.Deform.Lattice")
    -command "pythonRunTimeCommand solidify.cmd_create 0"
	Solidify;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kSolidifyOptionsAnnot"))
    -category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand solidify.cmd_create 1"
	SolidifyOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kProximityWrapLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kProximityWrap"))
    -image "proximityWrap.png"
    -category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand proximityWrap.cmd_create 0"
    ProximityWrap;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kProximityWrapOptionsAnnot"))
    -category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand proximityWrap.cmd_create 1"
    ProximityWrapOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kProximityWrapEditLbl"))
    -category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand proximityWrap.cmd_edit 1"
    ProximityWrapEdit;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kMorphLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kMorph"))
    -image "morph.png"
    -category ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand morph.cmd_create 0"
    Morph;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kMorphOptionsAnnot"))
    -category ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
    -command "pythonRunTimeCommand morph.cmd_create 1"
    MorphOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kFlareLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFlareAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kFlareLongAnnot"))
	-image "flareNLD.png"
	-category   ("Menu items.Modeling.Deform.Prune Membership;Menu items.Rigging.Deform.Prune Membership")
	-command "pythonRunTimeCommand flare.cmd_create 0"
	Flare;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFlareOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand flare.cmd_create 1"
	FlareOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSineLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSineAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSineLongAnnot"))
	-image "sineNLD.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand sine.cmd_create 0"
	Sine;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSineOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand sine.cmd_create 1"
	SineOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSquashLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSquashAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSquashLongAnnot"))
	-image "squashNLD.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand squash.cmd_create 0"
	Squash;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSquashOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand squash.cmd_create 1"
	SquashOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kTwistLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTwistAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTwistLongAnnot"))
	-image "twistNLD.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand twist.cmd_create 0"
	Twist;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTwistOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand twist.cmd_create 1"
	TwistOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWaveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kWaveAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWaveLongAnnot"))
	-image "waveNLD.png"
	-category   ("Menu items.Modeling.Deform.ShrinkWrap;Menu items.Rigging.Deform.ShrinkWrap")
	-command "pythonRunTimeCommand wave.cmd_create 0"
	Wave;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWaveOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command "pythonRunTimeCommand wave.cmd_create 1"
	WaveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSculptLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSculptLongAnnot"))
	-image "sculpt.png"
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performSculpt false")
	CreateSculptDeformer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performSculpt true")
	CreateSculptDeformerOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kTextureDeformerLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTextureDeformerAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTextureDeformerLongAnnot"))
	-image "textureDeformer.png" // MAYA-24629 TODO: -image "textureDeformer.png"
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performTextureDeformer 0")
	CreateTextureDeformer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTextureDeformerOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performTextureDeformer 1")
	CreateTextureDeformerOptions;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSoftModAnnot"))
	-category   ("Other items.Deform")
	-command    ("setToolTo ShowManips; performSoftMod 0 0 0 {0.0, 0.0, 0.0}")
	-showInHotkeyEditor false
	SoftModDeformer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSoftModOptionsAnnot"))
	-category   ("Other items.Deform")
	-command    ("performSoftMod 1 0 0 {0.0, 0.0, 0.0}")
	-showInHotkeyEditor false
	SoftModDeformerOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kJiggleLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kJiggleAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kJiggleLongAnnot"))
	-image "jiggleDeformer.png"
	-category   ("Menu items.Modeling.Deform.Prune Membership;Menu items.Rigging.Deform.Prune Membership")
	-command    ("performJiggle false")
	CreateJiggleDeformer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kJiggleOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Jiggle;Menu items.Rigging.Deform.Jiggle")
	-command    ("performJiggle true")
	CreateJiggleOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWireLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWireLongAnnot"))
	-image "wire.png"
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("setToolTo wireCtx")
	WireTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWireOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("setToolTo wireCtx; toolPropertyWindow")
	WireToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddWireLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddWireLongAnnot"))
	-image "addWire.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireAdd 0")
	AddWire;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddWireOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("performWireAdd 1")
	AddWireOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveWireLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveWireLongAnnot"))
	-image "removeWire.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireRemove 0")
	RemoveWire;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveWireOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireRemove 1")
	RemoveWireOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddHolderLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddHolderAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddHolderLongAnnot"))
	-image "addWireHolder.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireAddHolder 0")
	AddHolder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddHolderOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("performWireAddHolder 1")
	AddHolderOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kResetWireLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kResetWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kResetWireLongAnnot"))
	-image "resetWire.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireReset 0")
	ResetWire;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResetWireOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireReset 1")
	ResetWireOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kParentBaseWireLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kParentBaseWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kParentBaseWireLongAnnot"))
	-image "parentBaseWire.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireParentBase 0")
	ParentBaseWire;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kShowBaseWireLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowBaseWireAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kShowBaseWireLongAnnot"))
	-image "showBaseWire.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("doWireEdit 6 0 \"\"")
	ShowBaseWire;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kParentBaseWireOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWireParentBase 1")
	ParentBaseWireOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWireDropoffLocLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kWireDropoffLocAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWireDropoffLocLongAnnot"))
	-image "wireDropoff.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performDropoffLocator 0")
	WireDropoffLocator;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWireDropoffLocOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performDropoffLocator 1")
	WireDropoffLocatorOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWrinkleLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWrinkleAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWrinkleLongAnnot"))
	-image "wrinkle.png"
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("setToolTo wrinkleCtx")
	WrinkleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWrinkleOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("setToolTo wrinkleCtx; toolPropertyWindow")
	WrinkleToolOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kCreatePoseInterpolatorLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePoseInterpolatorAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreatePoseInterpolatorLongAnnot"))
	-image "pi-add.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command "performInterpolatorAdd 0"
	CreatePoseInterpolator;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePoseInterpolatorOptionsAnnot"))
		-image "pi-add.png"
		-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
		-command "performInterpolatorAdd 1"
		CreatePoseInterpolatorOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kWrapLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kWrapAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kWrapLongAnnot"))
	-image "wrap.png"
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("performCreateWrap false")
	CreateWrap;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWrapOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("performCreateWrap true")
	CreateWrapOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddWrapLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddWrapAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddWrapLongAnnot"))
	-image "addWrapInfluence.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWrap 2")
	AddWrapInfluence;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveWrapLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveWrapAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveWrapLongAnnot"))
	-image "removeWrapInfluence.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performWrap 3")
	RemoveWrapInfluence;
    
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kShrinkWrapLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShrinkWrapAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kShrinkWrapLongAnnot"))
	-image "shrinkwrap.png"
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("performCreateShrinkWrap false")
	CreateShrinkWrap;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShrinkWrapOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Nonlinear;Menu items.Rigging.Deform.Nonlinear")
	-command    ("performCreateShrinkWrap true")
	CreateShrinkWrapOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapTargetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapTargetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapTargetLongAnnot"))
	-image "setShrinkWrapTarget.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("doShrinkWrapArgList \"1\" {\"2\"}")
	SetShrinkWrapTarget;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapTargetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapTargetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapTargetLongAnnot"))
	-image "removeShrinkWrapTarget.png"
	-category   ("Menu items.Modeling.Deform.Wrap;Menu items.Rigging.Deform.Wrap")
	-command    ("doShrinkWrapArgList \"1\" {\"3\"}")
	RemoveShrinkWrapTarget;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapInnerObjectLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapInnerObjectAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetShrinkwrapInnerObjectLongAnnot"))
	-image "setShrinkWrapInnerObject.png"
	-category   ("Menu items.Modeling.Deform.Wrap;Menu items.Rigging.Deform.Wrap")
	-command    ("doShrinkWrapArgList \"1\" {\"4\"}")
	SetShrinkWrapInnerObject;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapInnerObjectLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapInnerObjectAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapInnerObjectLongAnnot"))
	-image "removeShrinkWrapInnerObject.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Animation.Key;Menu items.Rigging.Deform")
	-command    ("doShrinkWrapArgList \"1\" {\"5\"}")
	RemoveShrinkWrapInnerObject;
    
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddShrinkwrapSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddShrinkwrapSurfacesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddShrinkwrapSurfacesLongAnnot"))
	-image "addShrinkWrapSurfaces.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Animation.Key;Menu items.Rigging.Deform")
	-command    ("doShrinkWrapArgList \"1\" {\"6\"}")
	AddShrinkWrapSurfaces;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapSurfacesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapSurfacesAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveShrinkwrapSurfacesLongAnnot"))
	-image "removeShrinkWrapSurfaces.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("doShrinkWrapArgList \"1\" {\"7\"}")
	RemoveShrinkWrapSurfaces;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintSetMembersLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintSetMembersAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintSetMembersLongAnnot"))
	-image "paintSetMembership.png"
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("artSetPaintToolScript 4")
	PaintSetMembershipTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintSetMembersOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
	-command    ("artSetPaintToolScript 3")
	PaintSetMembershipToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kExportDeformerWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportDeformerWeightsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kExportDeformerWeightsLongAnnot"))
	-category   ("Other items.Deform")
	-command    ("performExportDeformerWeights true")
	-showInHotkeyEditor false
	ExportDeformerWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExportDeformerWeightsOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform;Menu items.Bonus Tools.Animation")
	-command    ("performExportDeformerWeights true")
	ExportDeformerWeightsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kImportDeformerWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kImportDeformerWeightsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kImportDeformerWeightsLongAnnot"))
	-category   ("Other items.Deform")
	-command    ("performImportDeformerWeights true")
	-showInHotkeyEditor false
	ImportDeformerWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kImportDeformerWeightsOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform;Menu items.Bonus Tools.Animation")
	-command    ("performImportDeformerWeights true")
	ImportDeformerWeightsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDisplayIntermedLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayIntermedAnnot"))
	-image "displayIntermObj.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("displayInterObjects 0")
	DisplayIntermediateObjects;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kHideIntermedLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHideIntermedAnnot"))
	-image "hideIntermObj.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("displayInterObjects 1")
	HideIntermediateObjects;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPointOnCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPointOnCurveAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPointOnCurveLongAnnot"))
	-image "ptPosCrvConstraint.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performPointCurveConstraint 0")
	PointOnCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPointOnCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performPointCurveConstraint(1)")
	PointOnCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMirrorDeformerWeightsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorDeformerWeightsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMirrorDeformerWeightsLongAnnot"))
	-image "mirrorSkinWeight.png"
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performMirrorDeformerWeights false")
	MirrorDeformerWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorDeformerWeightsOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("performMirrorDeformerWeights true")
	MirrorDeformerWeightsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAddTweakLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddTweak"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddTweakLongAnnot"))
	-category   ("Menu items.Modeling.Deform;Menu items.Rigging.Deform")
	-command    ("deformableShape -ctw")
	AddTweak;

//
//	HumanIK menu.
//
// ----------------------------------------------------------------------

string $loadHIKPluginCmd      = "if (!`pluginInfo -q -l \"mayaHIK\"`)              { loadPlugin \"mayaHIK\"; } ";
string $loadCharPluginCmd     = "if (!`pluginInfo -q -l \"mayaCharacterization\"`) { loadPlugin \"mayaCharacterization\"; } ";
string $loadOneClickPluginCmd = "if (!`pluginInfo -q -l \"OneClick\"`)             { loadPlugin \"OneClick\"; } ";
string $loadPlugins = $loadHIKPluginCmd + $loadCharPluginCmd + $loadOneClickPluginCmd;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCharacterControlsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCharacterControlsAnnot"))
	-image 		"humanIK_CharCtrl.png"
	-category   ("Menu items.Common.Windows.Animation Editors;Menu items.Rigging.Skeleton")
	-command    ($loadPlugins+"hikCreateCharacterControlsDockableWindow")
	HIKCharacterControlsTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLiveConnectionToolAnnot"))
	-category   ("Other items.Animate HIK")
	-command    ($loadPlugins+"hikShowLiveConnectionTool")
	-showInHotkeyEditor false
	HIKLiveConnectionTool;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleCharacterControlsAnnot"))
    -category   ("Menu items.Common.Display.UI Elements")
    -command    ($loadPlugins+"hikToggleWidget();")
    ToggleCharacterControls;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikPinRotateAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doPinHikEffectors 1 {\"2\",\"\", \"1\", \"1\" };")
	HIKPinRotate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikPinTranslateAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("doPinHikEffectors 1 {\"1\",\"\", \"1\", \"1\" };")
	HIKPinTranslate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikFullBodyModeAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("optionVar -intValue keyFullBody 1; hikSetKeyingMode();")
	HIKFullBodyMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikBodyPartModeAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("optionVar -intValue keyFullBody 2; hikSetKeyingMode();")
	HIKBodyPartMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikSelectedModeAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("optionVar -intValue keyFullBody 3; hikSetKeyingMode();")
	HIKSelectedMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikCycleModeAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("optionVar -intValue keyFullBody (`optionVar -q keyFullBody` < 3 ? (`optionVar -q keyFullBody`+1) : 1); hikSetKeyingMode();")
	HIKCycleMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikFullBodyKeyAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("hikSetModalKey \"FullBody\"")
    HIKSetFullBodyKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikBodyPartKeyAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("hikSetModalKey \"BodyPart\"")
    HIKSetBodyPartKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikSelectionKeyAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("hikSetModalKey \"Selection\"")
    HIKSetSelectionKey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHikToggleReleasePinningAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("hikToggleCharacterControlsReleaseAllPinning( )")
    HIKToggleReleasePinning;


//
//	Skeleton menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kJointToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kJointToolAnnot"))
	-image "kinJoint.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo jointContext")
	JointTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kJointOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo jointContext; toolPropertyWindow")
	JointToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kInsertJointLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertJointAnnot"))
	-image "kinInsert.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo insertJointContext")
	InsertJointTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kIKHandleLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kIKHandleAnnot"))
	-image "kinHandle.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo ikHandleContext")
	IKHandleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIKHandleOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo ikHandleContext; toolPropertyWindow")
	IKHandleToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kIKSplineHandleLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kIKSplineHandleAnnot"))
	-image "kinSplineHandle.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo ikSplineHandleContext")
	IKSplineHandleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIKSplineHandleOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("setToolTo ikSplineHandleContext; toolPropertyWindow")
	IKSplineHandleToolOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRerootSkeletonLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRerootSkeletonAnnot"))
	-image "kinReroot.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("reroot")
	RerootSkeleton;

$category = "Menu items.Rigging.Skeleton.Joint Labelling.Add Joint Labels";

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelLeftLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelLeftAnnot"))
	-category 	$category
	-command "retargetingSideLabel \"Left\""
	FBIKLabelLeft;
	
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelRightLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelRightAnnot"))
	-category 	$category
	-command "retargetingSideLabel \"Right\""
	FBIKLabelRight;
	
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelCenterLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelCenterAnnot"))
	-category 	$category
	-command "retargetingSideLabel \"Center\""
	FBIKLabelCenter;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelNoneLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelNoneAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"None\""
	FBIKLabelNone;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelArmLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelArmAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Arm\""
	FBIKLabelArm;
	
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelLegLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelLegAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Leg\""
	FBIKLabelLeg;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelCollarLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelCollarAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Collar\""
	FBIKLabelCollar;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelElbowLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelElbowAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Elbow\""
	FBIKLabelElbow;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelFootLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelFootAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Foot\""
	FBIKLabelFoot;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelHandLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelHandAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Hand\""
	FBIKLabelHand;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelHeadLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelHeadAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Head\""
	FBIKLabelHead;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelHipLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelHipAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Hip\""
	FBIKLabelHip;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelKneeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelKneeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Knee\""
	FBIKLabelKnee;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelNeckLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelNeckAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Neck\""
	FBIKLabelNeck;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelRootLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelRootAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Root\""
	FBIKLabelRoot;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelShoulderLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelShoulderAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Shoulder\""
	FBIKLabelShoulder;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelSpineLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelSpineAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Spine\""
	FBIKLabelSpine;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelThumbLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelThumbAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Thumb\""
	FBIKLabelThumb;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelIndexLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelIndexAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Index\""
	FBIKLabelIndex;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelMiddleFingerLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelMiddleFingerAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Middle\""
	FBIKLabelMiddleFinger;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelRingFingerLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelRingFingerAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Ring\""
	FBIKLabelRingFinger;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelPinkyLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelPinkyAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Pinky\""
	FBIKLabelPinky;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelExtraFingerLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelExtraFingerAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"ExtraFinger\""
	FBIKLabelExtraFinger;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelFingerBaseLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelFingerBaseAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Finger\""
	FBIKLabelFingerBase;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelBigToeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelBigToeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"BigToe\""
	FBIKLabelBigToe;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelIndexToeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelIndexToeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"IndexToe\""
	FBIKLabelIndexToe;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelMiddleToeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelMiddleToeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"MiddleToe\""
	FBIKLabelMiddleToe;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelRingToeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelRingToeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"RingToe\""
	FBIKLabelRingToe;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelPinkyToeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelPinkyToeAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"PinkyToe\""
	FBIKLabelPinkyToe;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelFootThumbLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelFootThumbAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"FootThumb\""
	FBIKLabelFootThumb;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kFBIKLabelToeBaseLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFBIKLabelToeBaseAnnot"))
	-category 	$category
	-command "retargetingLimbLabel \"Toe\""
	FBIKLabelToeBase;

$category = "Menu items.Rigging.Skeleton.Joint Labelling";

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kToggleSelectedLabelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleSelectedLabelsAnnot"))
	-category 	$category
	-command "displayJointLabels 2"
	ToggleSelectedLabels;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kShowAllLabelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllLabelsAnnot"))
	-category 	$category
	-command "displayJointLabels 4"
	ShowAllLabels;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kHideAllLabelsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kHideAllLabelsAnnot"))
	-category 	$category
	-command "displayJointLabels 3"
	HideAllLabels;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kRenameJointsFromLabelsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenameJointsFromLabelsAnnot"))
	-category 	$category
	-command "renameJointsBasedOnTypes"
	RenameJointsFromLabels;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kLabelBasedOnJointNamesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLabelBasedOnJointNamesAnnot"))
	-category 	$category
	-command "labelJointsBasedOnNames"
	LabelBasedOnJointNames;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveJointLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveJointAnnot"))
	-image "kinRemove.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("doRemoveJoint")
	RemoveJoint;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDisconnectJointLbl")) 
    -annotation (uiRes("m_defaultRunTimeCommands.kDisconnectJointAnnot"))
    -image "kinDisconnect.png"
    -category   ("Menu items.Rigging.Skeleton")
    -command    ("doDisconnectJoint")
    DisconnectJoint;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kConnectJointLbl")) 
    -annotation (uiRes("m_defaultRunTimeCommands.kConnectJointAnnot"))
    -image "kinConnect.png"
    -category   ("Menu items.Rigging.Skeleton")
    -command    ("performConnectJoint 0")
    ConnectJoint;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kConnectJointOptionsAnnot"))
    -category   ("Menu items.Rigging.Skeleton")
    -command    ("performConnectJoint 1")
    ConnectJointOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMirrorJointLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorJointAnnot"))
	-image "kinMirrorJoint_S.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performMirrorJoint 0")
	MirrorJoint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorJointOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performMirrorJoint 1")
	MirrorJointOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kOrientJointLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kOrientJointAnnot"))
	-image "orientJoint.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performJointOrient 0")
	OrientJoint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOrientJointOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performJointOrient 1")
	OrientJointOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddFloorContactAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("characterize -e -afp")
	AddFloorContactPlane;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAutoActivateBodyPartsAnnot"))
	-category   ("Other items.HumanIK")
	-command    ("characterize -e -autoActivateBodyPart (!`characterize -q -autoActivateBodyPart`); doToggleAutoActivateBodyPart")
	ToggleAutoActivateBodyPart;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleIKSolversAnnot"))
	-category   ("Other items.Skeleton")
	-command    ("ikSystem -e -sol (!`ikSystem -q -sol`)")
	-showInHotkeyEditor false
	ToggleIKSolvers;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetPreferredAngleLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetPreferredAngleAnnot"))
	-image "kinSetPreferredAngle.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performSetPrefAngle 0")
	SetPreferredAngle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetPreferredAngleOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performSetPrefAngle 1")
	SetPreferredAngleOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAssumePreferredAngleLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAssumePreferredAngleAnnot"))
	-image "kinAssumeAngle.png"
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performAssumePrefAngle 0")
	AssumePreferredAngle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAssumePreferredAngleOptionsAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("performAssumePrefAngle 1")
	AssumePreferredAngleOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kToggleIKSnapeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleIKSnapeAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("ikSystem -e -sn (!`ikSystem -q -sn`)")
	ToggleIKHandleSnap;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kToggleIKFKControlLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleIKFKControlAnnot"))
	-category	("Menu items.Rigging.Skeleton")
	-command	("ikSystem -e -allowRotation (!`ikSystem -q -allowRotation`); menuItem -e -enable (!`ikSystem -q -allowRotation`) globalSnapEnableItem")
	ToggleIKAllowRotation;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kEnableIKHandlesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableIKHandlesAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("ikHandle -e -eh")
	EnableSelectedIKHandles;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDisableIKHandlesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableIKHandlesAnnot"))
	-category   ("Menu items.Rigging.Skeleton")
	-command    ("ikHandle -e -dh")
	DisableSelectedIKHandles;

//
//	Skin menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSmoothBindSkinLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothBindSkinAnnot"))
	-image      "smoothSkin.png"
	-category   ("Menu items.Rigging.Skin")
	-command     ("pythonRunTimeCommand skincluster.cmd_create 0")
	SmoothBindSkin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothBindOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("pythonRunTimeCommand skincluster.cmd_create 1")
	SmoothBindSkinOptions;


runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kInteractiveBindSkinLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kInteractiveBindSkinAnnot"))
	-image      "interactiveBindTool.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("performVolumeBind false")
	InteractiveBindSkin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInteractiveBindSkinOptionAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performVolumeBind true")
	InteractiveBindSkinOptions;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRigidBindAnnot"))
	-category   ("Other items.Skin")
	-command    ("performBindSkin false")
	-showInHotkeyEditor false
	RigidBindSkin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRigidBindSkinOptionsAnnot"))
	-category   ("Other items.Skin")
	-command    ("performBindSkin true")
	-showInHotkeyEditor false
	RigidBindSkinOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kDetachSkinLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSkinAnnot"))
	-image      "detachSkin.png" 
	-category   ("Menu items.Rigging.Skin")
	-command    ("performDetachSkin false")
	DetachSkin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSkinOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performDetachSkin true")
	DetachSkinOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kGoToBindPoseLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToBindPoseAnnot"))
	-image      "goToBindPose.png" 
	-category   ("Menu items.Rigging.Skin")
	-command    ("evalEcho(\"gotoBindPose\")")
	GoToBindPose;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAddInfluenceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInfluenceAnnot"))
	-image      "addWrapInfluence.png" 
	-category   ("Menu items.Rigging.Skin.Edit Influences")
	-command    ("performAddInfluence false")
	AddInfluence;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddInfluenceOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin.Edit Influences")
	-command    ("performAddInfluence true")
	AddInfluenceOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kRemoveInfluenceLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveInfluenceAnnot"))
	-image      "removeWrapInfluence.png" 
	-category   ("Menu items.Rigging.Skin.Edit Influences")
	-command    ("skinClusterInfluence(2,\"\")")
	RemoveInfluence;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kMoveInfluenceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveInfluenceAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("doMoveSkinInfluencesFromSelection")
	MoveInfluence;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSetMaxInfluencesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetMaxInfluencesAnnot"))
	-image      "setMaxInfluence.png"
	-category   ("Menu items.Rigging.Skin.Edit Influences")
	-command    ("performMaxInfluences true")
	SetMaxInfluences;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kRemoveUnusedInfluencesLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveUnusedInfluencesAnnot")) 
	-category   ("Menu items.Rigging.Skin.Edit Influences")
	-command          "removeUnusedInfluences"
	RemoveUnusedInfluences; 

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kResetWeightsToDefaultLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kResetWeightsToDefaultAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performResetToDefault")
	ResetWeightsToDefault;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kDisableWeightNrmLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableWeightNrmAnnot"))
	-category   ("Menu items.Rigging.Skin.Normalize Weights")
	-command          "doNormalizeWeightsArgList 1 {\"1\"}"
	DisableWeightNrm;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kEnableWeightPostNrmLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableWeightPostNrmAnnot")) 
	-category   ("Menu items.Rigging.Skin.Normalize Weights")
	-command          "doNormalizeWeightsArgList 1 {\"3\"}"
	EnableWeightPostNrm;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kEnableWeightNrmLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableWeightNrmAnnot"))
	-category   ("Menu items.Rigging.Skin.Normalize Weights")
	-command          "doNormalizeWeightsArgList 1 {\"2\"}"
	EnableWeightNrm;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kNormalizeWeightsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNormalizeWeightsAnnot")) 
	-category   ("Menu items.Rigging.Skin.Normalize Weights")
	-command          "doNormalizeWeightsArgList 1 {\"4\"}"
	NormalizeWeights;

////////


runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kMirrorSkinWeightsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorSkinWeightsAnnot"))
	-image      "mirrorSkinWeight.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("performMirrorSkinWeights false")
	MirrorSkinWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMirrorSkinWeightsOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performMirrorSkinWeights true")
	MirrorSkinWeightsOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCopySkinWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCopySkinWeightsAnnot"))
	-image      "copySkinWeight.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("performCopySkinWeights false")
	CopySkinWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopySkinWeightsOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performCopySkinWeights true")
	CopySkinWeightsOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSmoothSkinWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothSkinWeightsAnnot"))
	-image      "smoothSkinWeights.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("performSmoothSkinWeights false")
	SmoothSkinWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmoothSkinWeightsOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performSmoothSkinWeights true")
	SmoothSkinWeightsOptions;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kWeightHammerLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWeightHammerAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command          "weightHammerVerts"
	WeightHammer;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kCopyVertexWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyVertexWeightsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command          "artAttrSkinWeightCopy"
	CopyVertexWeights;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPasteVertexWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPasteVertexWeightsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command          "artAttrSkinWeightPaste"
	PasteVertexWeights;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPruneSmallWeightsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneSmallWeightsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performPruneWeights false")
	PruneSmallWeights;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPruneSmallWeightsOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performPruneWeights true")
	PruneSmallWeightsOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kExportSkinWeightMapsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kExportSkinWeightMapsAnnot"))
	-image      "exportSmoothSkin.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("performExportSkinMap 0")
	ExportSkinWeightMaps;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kExportSkinWeightMapsOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performExportSkinMap 1")
	ExportSkinWeightMapsOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kImportSkinWeightMapsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kImportSkinWeightMapsAnnot"))
	-image      "importSmoothSkin.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("importSkinMap 1 {}")
	ImportSkinWeightMaps;

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kVolumeSkinBindingLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kVolumeSkinBindingAnnot")) 
	-image "interactiveBindTool.png"  
	-category   ("Menu items.Rigging.Skin")
	-command "setToolTo skinBindingContext;" 
	VolumeSkinBinding;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kVolumeSkinBindingOptionsAnnot")) 
		-image "interactiveBindTool.png" 
		-category   ("Menu items.Rigging.Skin")
		-command "setToolTo skinBindingContext; toolPropertyWindow;" 
		VolumeSkinBindingOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSubstituteGeometryLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kSubstituteGeometryAnnot"))
    -image      "substGeometry.png"
    -category   ("Menu items.Rigging.Skin")
    -command    ("performSubstituteGeometry 0")
    SubstituteGeometry;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kSubstituteGeometryOptionsAnnot"))
    -category   ("Menu items.Rigging.Skin")
    -command    ("performSubstituteGeometry 1")
    SubstituteGeometryOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kArtPaintBlendShapeWeightsToolLbl"))
 	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintBlendShapeWeightsToolAnnot"))
 	-longAnnotation (uiRes("m_defaultRunTimeCommands.kArtPaintBlendShapeWeightsToolLongAnnot"))
 	-image "paintBlendshape.png" 
 	-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
 	-command    ("artAttrBlendShapeToolScript 4 ")
 	ArtPaintBlendShapeWeightsTool;

runTimeCommand -default true
 	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintBlendShapeWeightsToolOptionsAnnot"))
 	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
 	-command    ("artAttrBlendShapeToolScript 3 ")
 	ArtPaintBlendShapeWeightsToolOptions;

	// Artisan Paint Cluster tool.
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintClusterWeightsToolLbl"))  
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintClusterWeightsToolAnnot")) 
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintClusterWeightsToolLongAnnot")) 
		-image "paintCluster.png"
		-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
		-command "artAttrToolScript 4 \"cluster\"" 
		PaintClusterWeightsTool;

		runTimeCommand -default true
			-annotation (uiRes("m_defaultRunTimeCommands.kPaintClusterWeightsToolOptionsAnnot")) 
			-image "paintCluster.png"
			-category   ("Menu items.Modeling.Deform.Wire;Menu items.Rigging.Deform.Wire")
		    -command "artAttrToolScript 3 \"cluster\"" 
			PaintClusterWeightsToolOptions;

	// Artisan DeltaMush tool.
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintDeltaMushWeightsToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintDeltaMushWeightsToolAnnot"))
		-command "artAttrToolScript 4 \"deltaMush\"" 
		PaintDeltaMushWeightsTool;

		runTimeCommand -default true
			-annotation (uiRes("m_defaultRunTimeCommands.kPaintDeltaMushWeightsToolOptionsAnnot")) 
			-command "artAttrToolScript 3 \"deltaMush\"" 
			PaintDeltaMushWeightsToolOptions;

	// Artisan Tension tool.
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintTensionWeightsToolLbl"))
	    -annotation (uiRes("m_defaultRunTimeCommands.kPaintTensionWeightsToolAnnot"))
	    -longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintTensionWeightsToolLongAnnot"))
	    -command "artAttrToolScript 4 \"tension\"" 
	    PaintTensionWeightsTool;

		runTimeCommand -default true
		    -annotation (uiRes("m_defaultRunTimeCommands.kPaintTensionWeightsToolOptionsAnnot"))
		    -command "artAttrToolScript 3 \"tension\"" 
		    PaintTensionWeightsToolOptions;

	// Artisan ProximityWrap tool.
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintProximityWrapWeightsToolLbl"))
	    -annotation (uiRes("m_defaultRunTimeCommands.kPaintProximityWrapWeightsToolAnnot"))
	    -command "artAttrToolScript 4 \"proximityWrap\"" 
	    PaintProximityWrapWeightsTool;

		runTimeCommand -default true
		    -annotation (uiRes("m_defaultRunTimeCommands.kPaintProximityWrapWeightsToolOptionsAnnot"))
		    -command "artAttrToolScript 3 \"proximityWrap\"" 
		    PaintProximityWrapWeightsToolOptions;

// Artisan Lattice tool.
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPaintLatticeWeightsToolLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kPaintLatticeWeightsToolAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintLatticeWeightsToolLongAnnot"))
    -command "artAttrToolScript 4 \"lattice\"" 
    PaintLatticeWeightsTool;

	runTimeCommand -default true
	    -annotation (uiRes("m_defaultRunTimeCommands.kPaintLatticeWeightsToolOptionsAnnot"))
	    -command "artAttrToolScript 3 \"lattice\"" 
	    PaintLatticeWeightsToolOptions;

// Artisan Paint ShrinkWrap tool.
runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kPaintShrinkWrapWeightsToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintShrinkWrapWeightsToolAnnot")) 
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintShrinkWrapWeightsToolLongAnnot")) 
	-image "paintShrinkWrap.png"
	-command "artAttrToolScript 4 \"shrinkWrap\"" 
	PaintShrinkWrapWeightsTool;

	runTimeCommand -default true
		-image "paintShrinkWrap.png"
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintShrinkWrapWeightsToolOptionsAnnot")) 
		-command "artAttrToolScript 3 \"shrinkWrap\"" 
		PaintShrinkWrapWeightsToolOptions;

	// Artisan Paint Wire tool
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintWireWeightsToolLbl"))  
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintWireWeightsToolAnnot")) 
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintWireWeightsToolLongAnnot")) 
		-image "paintWire.png" 
		-command "artAttrToolScript 4 \"wire\"" 
		PaintWireWeightsTool;

		runTimeCommand -default true
			-annotation (uiRes("m_defaultRunTimeCommands.kPaintWireWeightsToolOptionsAnnot")) 
			-image "paintWire.png"
			-command "artAttrToolScript 3 \"wire\"" 
			PaintWireWeightsToolOptions;

// Artisan Paint Nonlinear tool.
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPaintNonlinearWeightsToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintNonlinearWeightsToolAnnot")) 
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintNonlinearWeightsToolLongAnnot")) 
	-command "artAttrToolScript 4 \"nonLinear\"" 
	PaintNonlinearWeightsTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintNonlinearWeightsToolOptionsAnnot")) 
		-command "artAttrToolScript 3 \"nonLinear\"" 
		PaintNonlinearWeightsToolOptions;

	// Artisan Paint Jiggle tool.
	runTimeCommand -default true 
	    -label (uiRes("m_defaultRunTimeCommands.kPaintJiggleWeightsToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintJiggleWeightsToolAnnot")) 
		-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintJiggleWeightsToolLongAnnot")) 
		-image "paintJiggle.png"
		-command "artAttrToolScript 4 \"jiggle\"" 
		PaintJiggleWeightsTool;

		runTimeCommand -default true
			-annotation (uiRes("m_defaultRunTimeCommands.kPaintJiggleWeightsToolOptionsAnnot")) 
			-image "paintJiggle.png"
			-command "artAttrToolScript 3 \"jiggle\"" 
			PaintJiggleWeightsToolOptions;

// Artisan Paint Texture Deformer tool.
runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPaintTextureDeformerWeightsToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintTextureDeformerWeightsToolAnnot")) 
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPaintTextureDeformerWeightsToolLongAnnot")) 
	-image "paintTextureDeformer.png"
	-command "artAttrToolScript 4 \"textureDeformer\"" 
	PaintTextureDeformerWeightsTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintTextureDeformerWeightsToolOptionsAnnot")) 
		-image "paintTextureDeformer.png"
		-command "artAttrToolScript 3 \"textureDeformer\"" 
		PaintTextureDeformerWeightsToolOptions;


runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kArtMoveSkinJointsToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kArtMoveSkinJointsToolAnnot"))
	-image      "moveSkinnedJoint.png"
	-category   ("Menu items.Rigging.Skin")
	-command    ("moveJointsToolScript 0")
	MoveSkinJointsTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kArtMoveSkinJointsToolOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("moveJointsToolScript 1")
	MoveSkinJointsToolOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kArtPaintSkinWeightsToolLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintSkinWeightsToolAnnot"))
	-image      "paintSkinWeights.png" 
	-category   ("Menu items.Rigging.Skin")
	-command    ("artAttrSkinToolScript 4 ")
	ArtPaintSkinWeightsTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kArtPaintSkinWeightsToolOptionsAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("artAttrSkinToolScript 3 ")
	ArtPaintSkinWeightsToolOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kBakeDeformerToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeDeformerToolAnnot"))
	-category   ("Menu items.Rigging.Skin")
	-command    ("performBakeDeformer 1")
	BakeDeformerTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateFlexorWindowAnnot"))
	-category   ("Other items.Window")
	-command    ("createFlexorWin")
	-showInHotkeyEditor false
	CreateFlexorWindow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyFlexorAnnot"))
	-category   ("Other items.Skin")
	-command    ("copyFlexor")
	-showInHotkeyEditor false
	CopyFlexor;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReassignBoneLatticeJointAnnot"))
	-category   ("Other items.Skin")
	-command    ("setNewBoneFlexorJoint")
	-showInHotkeyEditor false
	ReassignBoneLatticeJoint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSkeletonAnnot"))
	-category   ("Other items.Skin")
	-command    ("bindSkin -enable 0")
	-showInHotkeyEditor false
	DetachSkeleton;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDetachSkeletonJointsAnnot"))
	-category   ("Other items.Skin")
	-command    ("bindSkin -enable 0 -tsb")
	-showInHotkeyEditor false
	DetachSkeletonJoints;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReattachSkeletonAnnot"))
	-category   ("Other items.Skin")
	-command    ("bindSkin -enable 1")
	-showInHotkeyEditor false
	ReattachSkeleton;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReattachSkeletonJointsAnnot"))
	-category   ("Other items.Skin")
	-command    ("bindSkin -enable 1 -tsb")
	-showInHotkeyEditor false
	ReattachSkeletonJoints;
//
//	Constrain menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPointConstraintLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPointConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPointConstraintLongAnnot"))
	-image      "posConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPointConstraint 0")
	PointConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPointConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPointConstraint 1")
	PointConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAimConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAimConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAimConstraintLongAnnot"))
	-image      "aimConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performAimConstraint 0")
	AimConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAimConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performAimConstraint 1")
	AimConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kOrientConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kOrientConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kOrientConstraintLongAnnot"))
	-image      "orientConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performOrientConstraint 0")
	OrientConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOrientConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performOrientConstraint 1")
	OrientConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kScaleConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kScaleConstraintLongAnnot"))
	-image      "scaleConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performScaleConstraint 0")
	ScaleConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performScaleConstraint 1")
	ScaleConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kGeometryConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGeometryConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kGeometryConstraintLongAnnot"))
	-image      "geometryConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performGeometryConstraint 0")
	GeometryConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGeometryConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performGeometryConstraint 1")
	GeometryConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kNormalConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNormalConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNormalConstraintLongAnnot"))
	-image      "normalConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performNormalConstraint 0")
	NormalConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNormalConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performNormalConstraint 1")
	NormalConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kTangentConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTangentConstraintLongAnnot"))
	-image      "tangentConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performTangentConstraint 0")
	TangentConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTangentConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performTangentConstraint 1")
	TangentConstraintOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPoleVectorConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPoleVectorConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPoleVectorConstraintLongAnnot"))
	-image "poleVectorConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPoleVectorConstraint 0")
	PoleVectorConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPoleVectorConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPoleVectorConstraint 1")
	PoleVectorConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPointOnPolyConstraintLbl")) 
 	-annotation (uiRes("m_defaultRunTimeCommands.kPointOnPolyConstraintAnnot"))
 	-longAnnotation (uiRes("m_defaultRunTimeCommands.kPointOnPolyConstraintLongAnnot"))
	-image      "pointOnPolyConstraint.png"
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPointOnPolyConstraint 0")
	PointOnPolyConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPointOnPolyConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performPointOnPolyConstraint 1")
	PointOnPolyConstraintOptions;


runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kParentConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kParentConstraintAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kParentConstraintLongAnnot"))
	-image      "parentConstraint.png" 
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performParentConstraint 0")
	ParentConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kParentConstraintOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performParentConstraint 1")
	ParentConstraintOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kRemoveConstraintTargetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveConstraintTargetAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRemoveConstraintTargetLongAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performRemoveConstraintTarget 0")
	RemoveConstraintTarget;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveConstraintTargetOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performRemoveConstraintTarget 1")
	RemoveConstraintTargetOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kSetRestPosLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetRestPosAnnot")) 
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kSetRestPosLongAnnot")) 
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command "setConstraintRestPosition"
	SetRestPosition;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kModifyConstraintAxisLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyConstraintAxisAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kModifyConstraintAxisLongAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performModifyConstraintAxes 0")
	ModifyConstraintAxis;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyConstraintAxisOptionsAnnot"))
	-category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command    ("performModifyConstraintAxes 1")
	ModifyConstraintAxisOptions;


runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kUVPinLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kUVPin"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kUVPinLongAnnot"))
    -category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
    -command "pythonRunTimeCommand uvpin.cmd_create 0"
    UVPin;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kUVPinOptionsAnnot"))
    -category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
    -command "pythonRunTimeCommand uvpin.cmd_create 1"
    UVPinOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPinRivetLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kPinRivetAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kPinRivetLongAnnot"))
    -category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
	-command ("python(\"import maya.internal.nodes.uvpin.node_interface\"); python(\"maya.internal.nodes.uvpin.node_interface.createRivet()\");")
    Rivet;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kProximityPinLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kProximityPinAnnot"))
    -longAnnotation (uiRes("m_defaultRunTimeCommands.kProximityPinLongAnnot"))
    -category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
    -command "pythonRunTimeCommand proximitypin.cmd_create 0"
    ProximityPin;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kProximityPinOptionsAnnot"))
    -category   ("Menu items.Animation.Constrain;Menu items.Rigging.Constrain")
    -command "pythonRunTimeCommand proximitypin.cmd_create 1"
    ProximityPinOptions;


//
//	Character menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateCharacterLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCharacterAnnot"))
	-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command    ("performCreateCharacter 0")
	CreateCharacter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateCharacterOptionsAnnot"))
	-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command    ("performCreateCharacter 1")
	CreateCharacterOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateSubCharacterLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubCharacterAnnot"))
	-category 	("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command 	("performCreateSubcharacter 0")
	CreateSubCharacter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSubCharacterOptionsAnnot"))
	-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command    ("performCreateSubcharacter 1")
	CreateSubCharacterOptions;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCharacterMapperLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCharacterMapperAnnot"))
	-category   ("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command    ("optionVar -intValue MClabels 0; mapcharWindow")
	CharacterMapper;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kAddToCharacterSetLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAddToCharacterSetAnnot"))
	-category 	("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command 	("doEditCharacterArgList 1 { \"1\" }")
	AddToCharacterSet;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kRemoveFromCharacterSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveFromCharacterSetAnnot"))
	-category 	("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command 	("doEditCharacterArgList 1 { \"0\" }")
	RemoveFromCharacterSet;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kMergeCharacterSetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeCharacterSetAnnot"))
	-category 	("Menu items.Animation.Key;Menu items.Rigging.Control")
	-command 	("mergeCharacters")
	MergeCharacterSet;	

runTimeCommand -default true
    -label      (localizedUIComponentLabel("Attribute Editor"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEditCharacterAttributesAnnot"))
	-category   ("Menu items.Rigging.Control")
	-command    ("editCurrentCharAttrs()")
	EditCharacterAttributes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kClearCurrentCharacterListAnnot"))
	-category   ("Menu items.Animation.Key.Set Current Character Set;Menu items.Rigging.Control.Set Current Character Set")
	-command    ("setCurrentCharacters( {} )")
	ClearCurrentCharacterList;
}

animationMenus();

// ======================================================================
// ======================================================================
//
//	Dynamics menu set, ie. Particles, Fields, Soft/Rigid Bodies,
//	Effects, Solvers, and nCloth.
//
// ======================================================================
// ======================================================================
proc particleMenus() {

//
//	Particles menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kParticleToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleToolAnnot"))
	-image "particle.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("setToolTo dynParticleContext;dynParticleCtx -e -nc 0 dynParticleContext;")
	ParticleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleToolOptionsAnnot"))
	-image "particle.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("setToolTo dynParticleContext; dynParticleCtx -e -nc 0 dynParticleContext; toolPropertyWindow")
	ParticleToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateEmitterLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateEmitterAnnot"))
	-image "posEmitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 1 Emitter 0")
	CreateEmitter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateEmitterOptionsAnnot"))
	-image "posEmitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("dynParticleCtx -e -nc 0 dynParticleContext; performDynamics 1 Emitter 1")
	CreateEmitterOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kEmitFromObjectLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEmitFromObjectAnnot"))
	-image "emitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 Emitter 0")
	EmitFromObject;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEmitFromObjectOptionsAnnot"))
	-image "emitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("dynParticleCtx -e -nc 0 dynParticleContext;performDynamics 0 Emitter 1")
	EmitFromObjectOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUseSelectedEmitterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUseSelectedEmitterAnnot"))
	-image "connectEmit.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamicsConnect 2")
	UseSelectedEmitter;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPerPointEmissionRatesLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPerPointEmissionRatesAnnot"))
	-image "emission.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("addPP -atr rate")
	PerPointEmissionRates;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMakeCollideLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeCollideAnnot"))
	-image "collision.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 Collision 0")
	MakeCollide;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeCollideOptionsAnnot"))
	-image "collision.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 Collision 1")
	MakeCollideOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kParticleCollisionEventsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleCollisionEventsAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kParticleCollisionEventsLongAnnot"))
	-image "collisionEvents.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("eventEdWin")
	ParticleCollisionEvents;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPartSpriteWizardLbl")) 
    -annotation (uiRes("m_defaultRunTimeCommands.kPartSpriteWizardAnnot")) 
    -category   ("Menu items.Dynamics.nParticles")
    -command "spriteWizardMenu"
    PartSpriteWizard;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kGoalLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoalAnnot"))
	-image "goal.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 Goal 0")
	Goal;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGoalOptionsAnnot"))
	-image "goal.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 Goal 1")
	GoalOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kParticleInstancerLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleInstancerAnnot"))
	-image "instancer.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 ParticleInstancer 0")
	ParticleInstancer;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleInstancerOptionsAnnot"))
	-image "instancer.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 1 ParticleInstancer 1")
	ParticleInstancerOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConnectToTime"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kConnectToTimeAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("dynConnectToTime")
	ConnectToTime;

//
// Fluids menu
//
// ----------------------------------------------------------------------

// These commands are not available in Maya Complete, and
// while their appearance (without being available) in the
// Hotkey Editor Categories can be viewed as a "teaser" on
// other platforms, Maya Unlimited is not even available on
// the Mac, so therefore we hide them.
//

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu3DContainerAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 Create3DFluid 0")
		Create3DContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu3DContOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 Create3DFluid 3")
		Create3DContainerOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu2DContainerAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 Create2DFluid 0")
		Create2DContainer;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu2DContOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 Create2DFluid 3")
		Create2DContainerOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFlu3DWithEmitLbl"))
	    -annotation (uiRes("m_defaultRunTimeCommands.kFlu3DWithEmitAnnot"))
		-image "fluidCreate3D.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 3DFluidAndEmitter 0")
		Create3DContainerEmitter;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFlu3DWithEmitOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 3DFluidAndEmitter 3")
		Create3DContainerEmitterOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFlu2DWithEmitLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu2DWithEmitAnnot"))
		-image      "fluidCreate2D.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 2DFluidAndEmitter 0")
		Create2DContainerEmitter;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFlu2DWithEmitOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 2DFluidAndEmitter 3")
		Create2DContainerEmitterOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluEmitObjectLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEmitObjectAnnot"))
		-image      "fluidObjectEmit.png"
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluids 0 FluidEmitFromObject 0")
		EmitFluidFromObject;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEmitObjectOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluids 0 FluidEmitFromObject 3")
		EmitFluidFromObjectOptions;
		
	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluGetExampleLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluGetExampleAnnot"))
		-image      "fluidGetExamples.png"
		-category   ("Menu items.Dynamics.Fluids")		
		-command	("{ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/FX/Fluid Examples/Clouds And Fog\"); }")
		GetFluidExample;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluOceanExampleLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluOceanExampleAnnot"))
		-image      "fluidOceanPresets.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command	("{ ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/FX/Fluids/Ocean Examples\"); }")
		GetOceanPondExample;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluExtendLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluExtendAnnot"))
		-image      "fluidExtend.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 ExtendFluid 0")
		ExtendFluid;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluExtendOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 ExtendFluid 3")
		ExtendFluidOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluEditResLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEditResAnnot"))
		-image      "fluidEditRes.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 ResampleFluid 0")
		EditFluidResolution;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEditResOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 1 ResampleFluid 3")
		EditFluidResolutionOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluCollideLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCollideAnnot"))
		-image      "fluidCollide.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 2 MakeCollideFluid 0")
		MakeFluidCollide;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCollideOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performFluids 2 MakeCollideFluid 3")
		MakeFluidCollideOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluMotionFldLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMotionFldAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("createMotionField")
		MakeMotionField;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluSubVolDecrAnnot"))
		-category   ("Other items.Fluids")
		-command    ("fluidSetSubVolumeLocation -1")
		DecrementFluidCenter;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluSubVolIncrAnnot"))
		-category   ("Other items.Fluids")
		-command    ("fluidSetSubVolumeLocation 1")
		IncrementFluidCenter;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kFluInitState"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluInitStateAnnot"))
		-image 		"fluidInitialStateSet.png"
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performSetFluidState 0")
		SetInitialState;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluInitStateOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performSetFluidState 1")
		SetInitialStateOptions;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluInitClearAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("performDeleteFluidsIC 0")
		ClearInitialState;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kFluSaveState"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluSaveStateAnnot"))
		-category   ("Menu items.Dynamics.Fluids")
		-command    ("fluidSaveStateAs")
		SaveFluidStateAs;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCacheMayaFluid"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreateCacheAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    ("performCreateFluidCache 0 \"add\"")
		-image 		"fluidCacheCreate.png"
		CreateFluidCache;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreateCacheOptAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    ("performCreateFluidCache 1 \"add\"")
		CreateFluidCacheOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluAttachCacheAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("doImportFluidCacheArgList(0,{})")
		attachFluidCache;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kReplaceCacheMayaFluid"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluReplaceCacheAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performCreateFluidCache 0 \"replace\"")
		-image 		"fluidCacheReplace.png"
		fluidReplaceCache;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMergeCacheMayaFluid"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMergeCacheAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performCreateFluidCache 0 \"merge\"")
		-image 		"nClothCacheMerge.png"
		fluidMergeCache;

	// fluidDeleteCache actually can delete both types of cache, therefore it's used as a generic delete cache method.
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteCache"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluDeleteCacheAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performDeleteFluidCache 0")
		-image 		"nClothCacheDelete.png"
		fluidDeleteCache;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluReplaceCacheOptAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performCreateFluidCache 1 \"replace\"")
		fluidReplaceCacheOpt;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMergeCacheOptAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performCreateFluidCache 1 \"merge\"")
		fluidMergeCacheOpt;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluDeleteCacheOptAnnot"))
		-category	("Menu items.Dynamics.nCache")
		-command	("performDeleteFluidCache 1")
		-image 		"nClothCacheDelete.png"
		fluidDeleteCacheOpt;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluAppendCacheAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performAppendFluidCache 0"
		fluidAppend;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluAppendCacheOptionsAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performAppendFluidCache 1"
		fluidAppendOpt;

	runTimeCommand -default true
		-label      (uiRes("m_defaultRunTimeCommands.kReplaceCacheFrames"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluReplaceCacheFramesAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performReplaceFluidCacheFrames 0"
		-image 		"nClothCacheReplaceFrames.png"
		fluidReplaceFrames;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluReplaceCacheFramesOptionsAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performReplaceFluidCacheFrames 1"
		fluidReplaceFramesOpt;

	// fluidDeleteCacheFrames can actually delete both types of cache, therefore we use 
	// it as a generic method to delete cache frames.
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteCacheFrames"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluDeleteCacheFramesAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performDeleteFluidCacheFrames 0"
		-image 		"nClothCacheDeleteFrame.png"
		fluidDeleteCacheFrames;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluDeleteCacheFramesOptionsAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performDeleteFluidCacheFrames 1"
		fluidDeleteCacheFramesOpt;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluEmitterLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEmitterAnnot"))
		-image      "fluidEmitterAdd.png"
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluids 2 FluidEmitter 0")
		FluidEmitter;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluEmitterOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluids 2 FluidEmitter 3")
		FluidEmitterOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluGradientsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluGradientsAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluidGradients 0")
		FluidGradients;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluGradientsOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performFluidGradients 1")
		FluidGradientsOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluPaintToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPaintToolAnnot"))
		-image      "fluidPaint.png"
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("artFluidAttrToolScript 4")
		PaintFluidsTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPaintToolOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("artFluidAttrToolScript 3")
		PaintFluidsToolOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluWithCurveLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluWithCurveAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performSetFluidAttrFromCurve 0")
		SetFluidAttrFromCurve;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluWithCurveOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performSetFluidAttrFromCurve 1")
		SetFluidAttrFromCurveOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluInitialStatesLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluInitialStatesAnnot"))
		-image      "fluidGetInitialStatePresets.png"
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performInitialStates 0")
		InitialFluidStates;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluInitialStatesOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Add/Edit Contents")
		-command    ("performInitialStates 1")
		InitialFluidStatesOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluCreateOceanLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreateOceanAnnot"))
		-image      "fluidCreateOcean.png"
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performCreateOcean 0")
		CreateOcean;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreateOceanOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performCreateOcean 1")
		CreateOceanOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluPreviewPlaneLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPreviewPlaneAnnot"))
		-image      "fluidaddOceanPreviewPlane.png"
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("fluidOceanAddPreviewPlane")
		AddOceanPreviewPlane;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluOceanSurfLocLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluOceanSurfLocAnnot"))
		-image      "fluidaddOceanLocator.png"
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 0")
		AddOceanSurfaceLocator;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluCreateWakeLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreateWakeAnnot"))
		-image      "fluidaddOceanPreviewPlane.png"
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performCreateOceanWake 0")
		CreateOceanWake;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluCreateWakeOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performCreateOceanWake 1")
		CreateOceanWakeOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluOceanDynLocLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluOceanDynLocAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 1")
		AddOceanDynamicLocator;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluOceanDynLocOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 1")
		AddOceanDynamicLocatorOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluBoatLocLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluBoatLocAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 3")
		AddBoatLocator;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluBoatLocOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 3")
		AddBoatLocatorOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluDynBouyLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluDynBouyAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 2")
		AddDynamicBuoy;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluDynBouyOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 2")
		AddDynamicBuoyOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluFloatSelObjLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluFloatSelObjAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 4")
		FloatSelectedObjects;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluFloatSelObjOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 4")
		FloatSelectedObjectsOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluMakeBoatsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMakeBoatsAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 5")
		MakeBoats;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluMakeBoatsOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 5")
		MakeBoatsOptions;

	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluMakeMotorBoatsLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMakeMotorBoatsAnnot"))
		-image      "fluidOceanMotorBoats.png"
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 0 6")
		MakeMotorBoats;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluMakeMotorBoatsOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Ocean")
		-command    ("performOceanLocator 1 6")
		MakeMotorBoatsOptions;

	// Pond Commands
	runTimeCommand -default true
	    -label      (uiRes("m_defaultRunTimeCommands.kFluCreatePondLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreatePondAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performCreatePond 0")
		CreatePond;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreatePondOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performCreatePond 1")
		CreatePondOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluCreatePondWakeAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performCreateWake 0")
		CreateWake;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluCreatePondWakeOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performCreateWake 1")
		CreateWakeOptions;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluPondSurfLocAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 0")
		AddPondSurfaceLocator;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPondDynLocAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 1")
		AddPondDynamicLocator;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kPondDynLocOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 1")
		AddPondDynamicLocatorOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondBoatLocAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 3")
		AddPondBoatLocator;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondBoatLocOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 3")
		AddPondBoatLocatorOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondDynBouyAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 2")
		AddPondDynamicBuoy;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluPondDynBouyOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 2")
		AddPondDynamicBuoyOptions;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluPondFloatSelObjAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 4")
		FloatSelectedPondObjects;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondFloatSelObjOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 4")
		FloatSelectedPondObjectsOptions;

	runTimeCommand -default true
		-annotation   (uiRes("m_defaultRunTimeCommands.kFluPondMakeBoatsAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 5")
		MakePondBoats;

	runTimeCommand -default true
		-annotation  (uiRes("m_defaultRunTimeCommands.kFluPondMakeBoatsOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 5")
		MakePondBoatsOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondMakeMotorBoatsAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 0 6")
		MakePondMotorBoats;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFluPondMakeMotorBoatsOptAnnot"))
		-category   ("Menu items.Dynamics.Fluids.Pond")
		-command    ("performPondLocator 1 6")
		MakePondMotorBoatsOptions;

//  Hair menu
//
// ----------------------------------------------------------------------

// These commands are not available in Maya Complete, and
// while their appearance (without being available) in the
// Hotkey Editor Categories can be viewed as a "teaser" on
// other platforms, Maya Unlimited is not even available on
// the Mac, so therefore we hide them.
//

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCreateHair")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-image 		"hairCreate.png"
		-command    "performCreateHair 0 "
		CreateHair;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateHairOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performCreateHair 1"
		CreateHairOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kTransplant")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kTransplantHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performTransplantHair 0 "
		-image 		"hairTransplant.png"
		TransplantHair;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTransplantHairOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performTransplantHair 1"
		TransplantHairOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kRandomize")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kRandomizeFolliclesAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performRandomizeFollicles 0 "
		RandomizeFollicles;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kRandomizeFolliclesOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performRandomizeFollicles 1"
		RandomizeFolliclesOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kScaleHair")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kScaleHairAnnot")) 
		-category   "Menu items.Dynamics.nHair"
		-image 		"hairScaleTool.png"
		-command    "scaleHairCtx"
		HairScaleTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kHairCollideAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "makeCollideHair"
		MakeCollideHair;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kMakeDynamic")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kDynamicHairAnnot"))
		-image 		"hairDynamicCurves.png"
		-category   "Menu items.Dynamics.nHair"
		-command    "performMakeCurvesDynamic 0 "
		MakeCurvesDynamic;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDynamicHairOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "performMakeCurvesDynamic 1"
		MakeCurvesDynamicOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kHairConstraintAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performAssignHairConstraint 0 "
		AssignHairConstraint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kHairConstraintOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performAssignHairConstraint 1"
		AssignHairConstraintOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kBrushToHair")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kBrushHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-image 		"hairAssignPFXbrush.png"
		-command    "evalEcho(\"assignBrushToHairSystem\")"
		AssignBrushToHairSystem;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kPfxToHair")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kPfxHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "evalEcho(\"addPfxToHairSystem\")"
		AddPfxToHairSystem;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCurvesToHair")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kCurvesHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "evalEcho(\"addCurvesToHairSystem\")"
		AddCurvesToHairSystem;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kGetHairExample"))
		-annotation (uiRes("m_defaultRunTimeCommands.kGetHairExampleAnnot"))
		-image 		"hairGetExamples.png"
		-category   "Menu items.Dynamics.nHair"
		-command	("{ ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/FX/Hair\"); }")
		GetHairExample;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kPaintFollicles")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintFolliclesAnnot")) 
		-image 		"hairPaint.png"
		-category   "Menu items.Dynamics.nHair"
		-command	("paintHairTool 0")
		PaintHairFollicles;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintHairOptions")) 
		-image 		"hairPaint.png"
		-category   "Menu items.Dynamics.nHair"
		-command	("paintHairTool 1")
		PaintHairFolliclesOptions;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kBaldness")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kBaldnessAnnot")) 
		-category   "Menu items.Dynamics.nHair.Paint Hair Textures"
		-image 		"hairPaintBaldness.png"
		-command	("paintHairTexture \"baldnessMap\" \"Baldness\" ")
		PaintHairBaldness;	

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kHairColor")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kHairColorAnnot")) 
		-category   "Menu items.Dynamics.nHair.Paint Hair Textures"
		-image 		"hairPaintColor.png"
		-command	("paintHairTexture \"hairColor\" \"Hair Color\" ")
		PaintHairColor;	

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kHairSpecular")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kHairSpecularAnnot")) 
		-category   "Menu items.Dynamics.nHair.Paint Hair Textures"
		-image 		"hairPaintSpecular.png"
		-command	("paintHairTexture \"specularColor\" \"Specular Color\" ")
		PaintHairSpecularColor;	

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCacheHairAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performHairDiskCache 0"
		CreateHairCache;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCacheHairOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performHairDiskCache 1"
		CreateHairCacheOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAppendHairCacheAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performAppendHairCache 0"
		AppendToHairCache;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAppendHairCacheOptionsAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performAppendHairCache 1"
		AppendToHairCacheOptions;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTruncateHairCacheAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "doTruncateHairCache"
		TruncateHairCache;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteHairCacheAnnot"))
		-category   "Menu items.Dynamics.nHair.Classic Hair"
		-command    "performDeleteHairPB 0"
		DeleteHairCache;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteHairSystem")) 
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteHairSystemAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "evalEcho(\"deleteEntireHairSystem\")"
		-image 		"hairDeleteEntire.png"
		DeleteEntireHairSystem;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kDeleteHair"))
		-annotation (uiRes("m_defaultRunTimeCommands.kDeleteHairAnnot"))
		-category   "Menu items.Dynamics.nHair"
		-command    "evalEcho(\"deleteHair\")"
		-image 		"hairDelete.png"
		DeleteHair;
        
//
//	Toon menu.
//
// ----------------------------------------------------------------------

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kGetToonAnnot"))
		-category   "Menu items.Rendering.Toon"
		-command	("{ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/Lighting And Rendering/Toon\"); }")
		GetToonExample;
		

//
//	Fields menu.
//
// ----------------------------------------------------------------------


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAir"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAirAnnot"))
	-image 		"posAir.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Air 0")
	Air;

runTimeCommand -default true
	-image 		"posAir.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kAirOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Air 1")
	AirOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDrag"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDragAnnot"))
	-image 		"posDrag.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Drag 0")
	Drag;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDragOptionsAnnot"))
	-image 		"posDrag.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Drag 1")
	DragOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGravity"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kGravityAnnot"))
	-image 		"posGravity.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Gravity 0")
	Gravity;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGravityOptionsAnnot"))
	-image 		"posGravity.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Gravity 1")
	GravityOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNewton")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewtonAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-image 		"posNewton.png"
	-command    ("performDynamics 1 Newton 0")
	Newton;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNewtonOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Newton 1")
	-image 		"posNewton.png"
	NewtonOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRadial"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRadialAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Radial 0")
	-image 		"posRadial.png"
	Radial;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRadialOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Radial 1")
	-image 		"posRadial.png"
	RadialOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTurbulence"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kTurbulenceAnnot"))
	-image 		"posTurbulence.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Turbulence 0")
	Turbulence;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTurbulenceOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Turbulence 1")
	-image 		"posTurbulence.png"
	TurbulenceOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUniform"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kUniformAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Uniform 0")
	-image 		"posUniform.png"
	Uniform;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUniformOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Uniform 1")
	-image 		"posUniform.png"
	UniformOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kVortex")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kVortexAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Vortex 0")
	-image 		"posVortex.png"
	Vortex;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kVortexOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 Vortex 1")
	-image 		"posVortex.png"
	VortexOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kVolumeAxis")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kVolumeAxisAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 VolumeAxis 0")
	-image 		"posVolumeAxis.png"
	VolumeAxis;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kVolumeAxisOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 1 VolumeAxis 1")
	-image 		"posVolumeAxis.png"
	VolumeAxisOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kVolumeCurve")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kVolumeCurveAnnot")) 
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("createCurveField")
	-image 		"posVolumeAxis.png"
	CreateCurveField;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUseSelected")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachSelectedAsSourceFieldAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("addDynamic")
	-image 		"selectedFields.png"
	AttachSelectedAsSourceField;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAssignToSelected"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kAffectSelectedAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamicsConnect 1")
	-image 		"connectField.png"
	AffectSelectedObject;

//
//	Soft/Rigid Bodies menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateActiveRigidBodyLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateActiveRigidBodyAnnot"))
	-image "rigid.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 ActiveRigid 0")
	CreateActiveRigidBody;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateActiveRigidBodyOptionsAnnot"))
	-image "rigid.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 ActiveRigid 1")
	CreateActiveRigidBodyOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreatePassiveRigidBodyLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePassiveRigidBodyAnnot"))
	-image "rigidPassive.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 PassiveRigid 0")
	CreatePassiveRigidBody;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePassiveRigidBodyOptionsAnnot"))
	-image "rigidPassive.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 PassiveRigid 1")
	CreatePassiveRigidBodyOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kCreateNailConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNailConstraintAnnot")) 
	-image "constraint.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command "optionVar -iv constrainTypesOM 1;CreateConstraint" 
	CreateNailConstraint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateNailConstraintOptionsAnnot")) 
	    -image "constraint.png"
		-category   ("Menu items.Dynamics.Fields/Solvers")
	    -command "optionVar -iv constrainTypesOM 1;CreateConstraintOptions"
		CreateNailConstraintOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kCreatePinConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePinConstraintAnnot")) 
	-image "constraint.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command "optionVar -iv constrainTypesOM 2;CreateConstraint" 
	CreatePinConstraint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreatePinConstraintOptionsAnnot")) 
	    -image "constraint.png"
		-category   ("Menu items.Dynamics.Fields/Solvers")
	    -command "optionVar -iv constrainTypesOM 2;CreateConstraintOptions"
		CreatePinConstraintOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kCreateHingeConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateHingeConstraintAnnot")) 
	-image "constraint.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command "optionVar -iv constrainTypesOM 3;CreateConstraint" 
	CreateHingeConstraint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateHingeConstraintOptionsAnnot")) 
	    -image "constraint.png"
		-category   ("Menu items.Dynamics.Fields/Solvers")
	    -command "optionVar -iv constrainTypesOM 3;CreateConstraintOptions"
		CreateHingeConstraintOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kCreateSpringConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpringConstraintAnnot")) 
	-image "constraint.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command "optionVar -iv constrainTypesOM 4;CreateConstraint" 
	CreateSpringConstraint;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpringConstraintOptionsAnnot")) 
	    -image "constraint.png"
		-category   ("Menu items.Dynamics.Fields/Solvers")
	    -command "optionVar -iv constrainTypesOM 4;CreateConstraintOptions"
		CreateSpringConstraintOptions;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kCreateBarrierConstraintLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateBarrierConstraintAnnot")) 
	-image "constraint.png"
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command "optionVar -iv constrainTypesOM 5;CreateConstraint" 
	CreateBarrierConstraint;
	
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kCreateBarrierConstraintOptionsAnnot")) 
	    -image "constraint.png"
		-category   ("Menu items.Dynamics.Fields/Solvers")
	    -command "optionVar -iv constrainTypesOM 5;CreateConstraintOptions"
		CreateBarrierConstraintOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstraintAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 Constrain 0")
	CreateConstraint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateConstraintOptionsAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("performDynamics 2 Constrain 1")
	CreateConstraintOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetActiveKeyLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetActiveKeyAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("setRigidKeyframe(1)")
	SetActiveKey;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetPassiveKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetPassiveKeyAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("setRigidKeyframe(0)")
	SetPassiveKey;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBreakRigidBodyConnectionLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBreakRigidBodyConnectionAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("breakRigidBodyConnections")
	BreakRigidBodyConnection;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateSoftBodyLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSoftBodyAnnot"))
	-image "soft.png"
	-category   ("Other items.Soft and Rigid Bodies")
	-command    ("performDynamics 2 Soft 0")
	-showInHotkeyEditor false
	CreateSoftBody;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSoftBodyOptionsAnnot"))
	-image "soft.png"
	-category   ("Other items.Soft and Rigid Bodies")
	-command    ("performDynamics 2 Soft 1")
	-showInHotkeyEditor false
	CreateSoftBodyOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateNSoftBodyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNSoftBodyAnnot"))
	-image "soft.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 2 NSoft 0")
	CreateNSoftBody;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNSoftBodyOptionsAnnot"))
	-image "soft.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 2 NSoft 1")
	CreateNSoftBodyOptions;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPaintSoftWeightsLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kPaintSoftWeightsAnnot"))
    -image "attrPaint.png"
    -category   ("Menu items.Dynamics.nParticles")
    -command "artAttrToolScript 4 \"particle\"" 
    PaintSoftWeights;

    runTimeCommand -default true
            -annotation (uiRes("m_defaultRunTimeCommands.kPaintSoftWeightsOptionsAnnot"))
            -image "attrPaint.png"
            -category   ("Menu items.Dynamics.nParticles")
            -command "artAttrToolScript 3 \"particle\"" 
            PaintSoftWeightsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateSpringLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpringAnnot"))
	-image "spring.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 2 Spring 0")
	CreateSpring;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateSpringOptionsAnnot"))
	-image "spring.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 2 Spring 1")
	CreateSpringOptions;

$annotation = "Particle Create Option";
$category = "Menu items.Dynamics.nParticles.Create Options";

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kNParticleStylePointsLbl"))
    -annotation $annotation
	-image "nPartPoints.png"
	-category $category
	-command "optionVar -stringValue NParticleStyle \"Points\"" 
	NParticleStylePoints;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kNParticleStyleBallsLbl"))
	-annotation $annotation
	-image "nPartBalls.png"
	-category $category
	-command "optionVar -stringValue NParticleStyle \"Balls\"" 
	NParticleStyleBalls;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kNParticleStyleCloudLbl"))
	-annotation $annotation
	-image "nPartCloud.png"
	-category $category
	-command "optionVar -stringValue NParticleStyle \"Cloud\"" 
	NParticleStyleCloud;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kNParticleStyleThickCloudLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNParticleStyleThickCloudAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNParticleStyleThickCloudLongAnnot"))
	-image "nPartThickCloud.png"
	-category $category
	-command "optionVar -stringValue NParticleStyle \"ThickCloud\"" 
	NParticleStyleThickCloud;		

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kNParticleStyleWaterLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNParticleStyleWaterAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNParticleStyleWaterLongAnnot"))
	-image "nPartWater.png"
	-category $category
	-command "optionVar -stringValue NParticleStyle \"Water\"" 
	NParticleStyleWater;

//
//	Effects menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateFire"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kFireAnnot"))
	-image 		"fire.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Fire 0")
	Fire;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFireOptionsAnnot"))
	-image 		"fire.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects  Fire 1")
	FireOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSmoke"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSmokeAnnot"))
	-image 		"smoke.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Smoke 0")
	Smoke;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSmokeOptionsAnnot"))
	-image 		"smoke.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects  Smoke 1")
	SmokeOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateFireworks")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFireworksAnnot"))
	-image 		"fireworks.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Fireworks 0")
	Fireworks;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFireworksOptionsAnnot"))
	-image 		"fireworks.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects  Fireworks 1")
	FireworksOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateLightning")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLightningAnnot"))
	-image 		"lightning.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Lightning 0")
	Lightning;

runTimeCommand -default true
	-image 		"lightning.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kLightningOptionsAnnot"))
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Lightning 1")
	LightningOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateShatter"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kShatterAnnot"))
	-image 		"shatter.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Shatter 0")
	Shatter;

runTimeCommand -default true
	-image 		"shatter.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kShatterOptionsAnnot"))
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Shatter 1")
	ShatterOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateFlowCurve"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveFlowAnnot"))
	-image 		"flow.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects Flow 0")
	CurveFlow;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveFlowOptionsAnnot"))
	-image 		"flow.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects  Flow 1")
	CurveFlowOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateSurfaceFlow"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceFlowAnnot"))
	-image 		"flowSurface.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects SurfaceFlow 0")
	SurfaceFlow;

runTimeCommand -default true
	-image 		"flowSurface.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kSurfaceFlowOptionsAnnot"))
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects SurfaceFlow 1")
	SurfaceFlowOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteSurfaceFlow"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteSurfaceFlowAnnot"))
	-image 		"flowSurfaceDelete.png"
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects DeleteSurfaceFlow 0")
	DeleteSurfaceFlow;

runTimeCommand -default true
	-image 		"flowSurfaceDelete.png"
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteSurfaceFlowOptionsAnnot"))
	-category   ("Menu items.Dynamics.Effects")
	-command    ("performDynamicsClipEffects DeleteSurfaceFlow 1")
	DeleteSurfaceFlowOptions;

//
//	Solvers menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRigidBodySolver"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kRigidBodySolverAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("invokeRigidSolverEditor")
	RigidBodySolver;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateRigidBodySolverLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateRigidBodySolverAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("evalEcho rigidSolver -create")
	CreateRigidBodySolver;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetRigidBodyInterpenetrationLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetRigidBodyInterpenetrationAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("rigidBodyInterpenetrate 1")
	SetRigidBodyInterpenetration;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetRigidBodyCollisionLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSetRigidBodyCollisionAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("rigidBodyInterpenetrate 0")
	SetRigidBodyCollision;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnable")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableMemoryCachingAnnot"))
	-category   ("Menu items.Dynamics.nCache.Memory Caching")
	-command    ("cacheControl 1")
	EnableMemoryCaching;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisable")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableMemoryCachingAnnot"))
	-category   ("Menu items.Dynamics.nCache.Memory Caching")
	-command    ("cacheControl 0")
	DisableMemoryCaching;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDelete")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteMemoryCachingAnnot"))
	-category   ("Menu items.Dynamics.nCache.Memory Caching")
	-command    ("cacheDelete")
	DeleteMemoryCaching;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateParticleCache")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateParticleDiskCacheAnnot"))
	-category   ("Menu items.Dynamics.nCache")
	-command    ("performDynamics 0 ParticleRenderCache 0")
	-image  	 "bakeParticles.png"
	CreateParticleDiskCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateParticleDiskCacheOptionsAnnot"))
	-category   ("Menu items.Dynamics.nCache")
	-command    ("performDynamics 2 ParticleRenderCache 1")
	CreateParticleDiskCacheOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEditOversampling")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEditOversamplingForCacheSettingsAnnot"))
	-category   ("Menu items.Dynamics.nCache")
	-command    ("invokeDynGlobalsEditor")
	EditOversamplingForCacheSettings;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kInteractivePlayback")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kInteractivePlaybackAnnot"))
	-category   ("Menu items.Dynamics.Fields/Solvers")
	-command    ("play -record")
	-image 		"interactivePlayback.png"
	InteractivePlayback;

//
//	nParticle menus.
//
// ----------------------------------------------------------------------
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kNParticleToolLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNParticleToolAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kNParticleToolLongAnnot"))
	-image "particle.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("setToolTo dynParticleContext; dynParticleCtx -e -nc 1 dynParticleContext;")
	NParticleTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNParticleToolOptionsAnnot"))
	-image "particle.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("setToolTo dynParticleContext; dynParticleCtx -e -nc 1 dynParticleContext; toolPropertyWindow")
	NParticleToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kNCreateEmitterLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNCreateEmitterAnnot"))
	-image "posEmitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 1 nEmitter 0")
	NCreateEmitter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNCreateEmitterOptionsAnnot"))
	-image "posEmitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("dynParticleCtx -e -nc 1 dynParticleContext; performDynamics 1 nEmitter 1")
	NCreateEmitterOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kNEmitFromObjectLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kNEmitFromObjectAnnot"))
	-image "emitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("performDynamics 0 nEmitter 0")
	NEmitFromObject;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNEmitFromObjectOptionsAnnot"))
	-image "emitter.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command    ("dynParticleCtx -e -nc 1 dynParticleContext; performDynamics 0 nEmitter 1")
	NEmitFromObjectOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kParticleFillLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleFillAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kParticleFillLongAnnot"))
	-image "nPartfillObject.png"
	-category	("Menu items.Dynamics.nParticles")
	-command	("performParticleFill 0")
	ParticleFill;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kParticleFillOptionsAnnot"))
	-category	("Menu items.Dynamics.nParticles")
	-command	("performParticleFill 1")
	ParticleFillOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kGetnParticleEGLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGetnParticleEGAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kGetnParticleEGLongAnnot"))
	-image "nPartExample.png"
	-category   ("Menu items.Dynamics.nParticles")
	-command		("{ ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/FX/nParticles Examples\"); }")
	nucleusGetnParticleExample;


//
//	Effects Assets menu.
//
// ----------------------------------------------------------------------
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGetExample")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGetEffectsAssetsAnnot"))
	-image 		"nPartExample.png"
	-category   ("Menu items.Dynamics.Effects")
	-command		("{ ContentBrowserWindow;"+
					"contentBrowserSetLocation(\"Examples/FX/Effects Assets\"); }")

	nucleusGetEffectsAsset;

//
//	nCache menus.
//
// ----------------------------------------------------------------------
runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kAttachCache"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("doAttachCacheArgList(0,{})")
	-image 		"nClothCacheExisting.png"
	attachCache;

runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kAppendCache"))
		-annotation (uiRes("m_defaultRunTimeCommands.kAppendCacheAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performAppendCache 0"
		-image 		"nClothCacheAppend.png"
		cacheAppend;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAppendCacheOptionsAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performAppendCache 1"
		-image 		"nClothCacheAppend.png"
		cacheAppendOpt;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kPerformReplaceCacheFrames"))
		-annotation (uiRes("m_defaultRunTimeCommands.kPerformReplaceCacheFramesAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performReplaceCacheFrames 0"
		-image 		"nClothCacheReplaceFrames.png"
		replaceCacheFrames;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kReplaceCacheFramesOptionsAnnot"))
		-category   ("Menu items.Dynamics.nCache")
		-command    "performReplaceCacheFrames 1"
		-image 		"nClothCacheReplaceFrames.png"
		replaceCacheFramesOpt;
//
//	nCloth menus.
//
// ----------------------------------------------------------------------
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetNClothInitialState"))
	-category	("Menu items.Dynamics.Solvers.Initial State")
	-command	("performSetNClothStartState 1")
	setNClothStartState;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kClearNClothInitialState"))
	-category	("Menu items.Dynamics.Solvers.Initial State")
	-command	("performSetNClothStartState 0")
	clearNClothStartState;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSetForSelected"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSetDynInitialState"))
	-category	("Menu items.Dynamics.Solvers.Initial State")
	-command	("performSetDynStartState 1")
	setDynStartState;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kClearDynStartState"))
	-annotation (uiRes("m_defaultRunTimeCommands.kClearDynInitialState"))
	-category	("Menu items.Dynamics.Solvers.Initial State")
	-command	("performSetDynStartState 0")
	clearDynStartState;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateNclothLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNclothAnnot"))
	-image 		"nClothCreate.png"
	-category	("Menu items.Dynamics.nCloth")
	-command	("performCreateNCloth 0")
	nClothCreate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateNclothOptionsAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command	("performCreateNCloth 1")
	nClothCreateOptions;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kSetStartFromMesh"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetNClothStartFromMeshAnnot"))
	-category	("Menu items.Dynamics.Fields/Solvers.Initial State")
	-command	("setNClothStartFromMesh")
	SetNClothStartFromMesh;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetForAllDynamic"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kSetForAllDynamicAnnot")) 
	-category	("Menu items.Dynamics.Fields")
	-command	("evalEcho saveInitialState -all")
	SaveInitialStateAll;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kRelaxInitialState"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRelaxInitialStateAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRelaxInitialStateLongAnnot"))
	-category	("Menu items.Dynamics.Fields/Solvers.Initial State")
	-command	("performRelaxInitialState 0")
	RelaxInitialState;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRelaxInitialStateOptionsAnnot"))
	-category	("Menu items.Dynamics.Fields/Solvers.Initial State")
	-command	("performRelaxInitialState 1")
	RelaxInitialStateOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kResolveInterpenetration"))
	-annotation (uiRes("m_defaultRunTimeCommands.kResolveInterpenetrationAnnot"))
	-category	("Menu items.Dynamics.Fields/Solvers.Initial State")
	-command	("performResolveInterpenetration 0")
	ResolveInterpenetration;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResolveInterpenetrationOptionsAnnot"))
	-category	("Menu items.Dynamics.Fields/Solvers.Initial State")
	-command	("performResolveInterpenetration 1")
	ResolveInterpenetrationOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMakeNclothCollideLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeNclothCollideAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kMakeNclothCollideLongAnnot"))
	-image 		"nClothCreatePassive.png"
	-category	("Menu items.Dynamics.nCloth")
	-command	("performMakeCollideNCloth 0")
	nClothMakeCollide;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeCollideNclothOptionsAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command	("performMakeCollideNCloth 1")
	nClothMakeCollideOptions;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kNClothDisplayCurrentMeshLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNClothDisplayCurrentMeshAnnot"))
	-image 		"nClothDisplayCurrent.png"
	-category	("Menu items.Dynamics.nCloth")
	-command 	"displayNClothMesh \"current\""
	nClothDisplayCurrentMesh;

runTimeCommand -default true 
	-label		(uiRes("m_defaultRunTimeCommands.kNClothDisplayInputMeshLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNClothDisplayInputMeshAnnot"))
	-image 		"nClothDisplayInput.png"
	-category	("Menu items.Dynamics.nCloth")
	-command 	"displayNClothMesh \"input\""
	nClothDisplayInputMesh;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRemoveNclothLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveNclothAnnot"))
	-image 		"nClothRemove.png"
	-category	("Menu items.Dynamics.nCloth")
	-command	("performRemoveNCloth 0 \"selected\"")
	nClothRemove;

runTimeCommand -default true 
	-label  	(uiRes("m_defaultRunTimeCommands.kRestToInputStartLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kRestToInputStartAnnot")) 
	-category	("Menu items.Dynamics.nCloth")
	-command 	"doSetNClothRestShape \"start\""
	nClothRestToInputStart;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kRestToInputLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kRestToInputAnnot")) 
	-category	("Menu items.Dynamics.nCloth")
	-command 	"doSetNClothRestShape \"input\""
	nClothRestToInput;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kRestToMeshLbl"))
    -annotation (uiRes("m_defaultRunTimeCommands.kRestToMeshAnnot")) 
	-category	("Menu items.Dynamics.nCloth")
	-command 	"doSetNClothRestShape \"mesh\""
	nClothRestToMesh;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kLocalToWorldLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLocalToWorldAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command 	"nClothConvertOutput 0"
	nClothLocalToWorld;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kWorldToLocalLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kWorldToLocalAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command 	"nClothConvertOutput 1"
	nClothWorldToLocal;

// nConstraint Menu

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kComponentLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kComponentAnnot")) 
   	-longAnnotation (uiRes("m_defaultRunTimeCommands.kComponentLongAnnot")) 
	-image 		"nConstraintComponent.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateComponentNConstraint 0"
	nConstraintComponent;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateComponentNConstraint 1"
	    nConstraintComponentOptions;
		
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kComponentToComponentLblLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kComponentToComponentAnnot")) 
	-image 		"nConstraintComponent.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"pointToPoint\""
	nConstraintComponentToComponent;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"pointToPoint\""
	    nConstraintComponentToComponentOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kForceFieldLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kForceFieldAnnot")) 
	-image 		"nConstraintForceField.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"force\""
	nConstraintForceField;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"force\""
	    nConstraintForceFieldOptions;
		
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kPointToSurfaceLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kPointToSurfaceAnnot")) 
	-image 		"nConstraintPointoSurface.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"pointToSurface\""
	nConstraintPointToSurface;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"pointToSurface\""
	    nConstraintPointToSurfaceOptions;
		
runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kSlideOnSurfaceLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kSlideOnSurfaceAnnot")) 
	-image 		"nConstraintSlideonSurface.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"slideOnSurface\""
	nConstraintSlideOnSurface;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"slideOnSurface\""
	    nConstraintSlideOnSurfaceOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kTearableSurfaceLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kTearableSurfaceAnnot")) 
	-image 		"nConstraintTearable.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"tearableSurface\""
	nConstraintTearableSurface;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"tearableSurface\""
	    nConstraintTearableSurfaceOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kTransformLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kTransformAnnot")) 
   	-longAnnotation (uiRes("m_defaultRunTimeCommands.kTransformLongAnnot")) 
	-image 		"nConstraintTransform.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"transform\""
	nConstraintTransform;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"transform\""
	    nConstraintTransformOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kAttractToMatchLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kAttractToMatchAnnot")) 
	-image 		"nClothMatchingMesh.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"match\""
	nConstraintAttractToMatch;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"match\""
	    nConstraintAttractToMatchOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kDisableCollisionLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kDisableCollisionAnnot")) 
	-image 		"nConstraintDisableCollision.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"disableCollision\""
	nConstraintDisableCollision;
    runTimeCommand -default true 
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"disableCollision\""
	    nConstraintDisableCollisionOptions;

runTimeCommand -default true  
	-label 		(uiRes("m_defaultRunTimeCommands.kCollisionExclusionLbl")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kCollisionExclusionAnnot")) 
	-image 		"nConstraintExcludeCollision.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"collisionExclusion\""
	nConstraintCollisionExclusion;
    runTimeCommand -default true
		-category 	("Menu items.Dynamics.nConstraint")
	    -command 	 "performCreateDynamicConstraint 1 \"collisionExclusion\""
	    nConstraintCollisionExclusionOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRemoveDynamicConstraintLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveDynamicConstraintAnnot"))
	-image 		"nConstraintRemove.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command	("performRemoveDynamicConstraint 0 \"selected\"")
	dynamicConstraintRemove;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kWeldBorders")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kWeldBordersAnnot")) 
	-image 		"nConstraintWeldBorders.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"performCreateDynamicConstraint 0 \"weldBorders\""
	nConstraintWeldBorders;
    runTimeCommand -default true
		-category	("Menu items.Dynamics.nConstraint")
	    -command   "performCreateDynamicConstraint 1 \"weldBorders\""
		nConstraintWeldBordersOptions;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kConstraintMembershipTool")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kConstraintMembershipToolAnnot")) 
	-image 		"nConstraintMembership.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"nConstraintMembershipTool"
	nConstraintConstraintMembershipTool;

runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kAddMembers")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kAddMembersAnnot"))
	-image 		"nConstraintAddMembers.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"dynamicConstraintMembership \"add\""
	nConstraintAddMembers;	
	
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kRemoveMembers")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveMembersAnnot")) 
	-image 		"nConstraintRemoveMembers.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"dynamicConstraintMembership \"remove\""
	nConstraintRemoveMembers;	
	
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kReplaceMembers")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceMembersAnnot")) 
	-image 		"nConstraintReplaceMembers.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"dynamicConstraintMembership \"replace\""
	nConstraintReplaceMembers;
	
runTimeCommand -default true 
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectMembers")) 
   	-annotation (uiRes("m_defaultRunTimeCommands.kSelectMembersAnnot")) 
	-image 		"nConstraintSelectMembers.png"
	-category	("Menu items.Dynamics.nConstraint")
	-command 	"dynamicConstraintMembership \"select\""
	nConstraintSelectMembers;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDeleteNclothHistoryLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothHistoryAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command	("performDeleteNClothHistory 0")
	nClothDeleteHistory;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothHistoryOptAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command	("performDeleteNClothHistory 1")
	nClothDeleteHistoryOpt;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kCacheNObject"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAddNclothCacheAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kAddNclothCacheLongAnnot"))
	-category	("Menu items.Dynamics.nCloth")
	-command	("performCreateNclothCache 0 \"add\"")
	-image 		"nClothCacheCreate.png"
	nClothCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachNclothCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("doImportCacheArgList(0,{})")
	attachNclothCache;

runTimeCommand -default true
	-label 		 (uiRes("m_defaultRunTimeCommands.kReplaceCacheNObject"))
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceNclothCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performCreateNclothCache 0 \"replace\"")
	-image 		"nClothCacheReplace.png" 
	nClothReplaceCache;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMergeCacheNObject"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeNclothCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performCreateNclothCache 0 \"merge\"")
	-image 		"nClothCacheMerge.png"
	nClothMergeCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performDeleteNclothCache 0")
	deleteNclothCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddNclothCacheOptAnnot"))
	-image 		"nClothCacheCreate.png"
	-category	("Menu items.Dynamics.nCache")
	-command	("performCreateNclothCache 1 \"add\"")
	nClothCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceNclothCacheOptAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performCreateNclothCache 1 \"replace\"")
	-image 		"nClothCacheMerge.png" 
	nClothReplaceCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeNclothCacheOptAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performCreateNclothCache 1 \"merge\"")
	-image 		"nClothCacheMerge.png" 
	nClothMergeCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothCacheOptAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("performDeleteNclothCache 1")
	nClothDeleteCacheOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAppendNclothCacheAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performAppendNclothCache 0"
	nClothAppend;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAppendNclothCacheOptionsAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performAppendNclothCache 1"
	nClothAppendOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceNclothCacheFramesAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performReplaceNclothCacheFrames 0"
	nClothReplaceFrames;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kReplaceNclothCacheFramesOptionsAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performReplaceNclothCacheFrames 1"
	nClothReplaceFramesOpt;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothCacheFramesAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performDeleteNclothCacheFrames 0"
	nClothDeleteCacheFrames;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteNclothCacheFramesOptionsAnnot"))
	-category   "Menu items.Dynamics.nCache"
	-command    "performDeleteNclothCacheFrames 1"
	nClothDeleteCacheFramesOpt;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintCache"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintCacheToolAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("artAttrCacheToolScript 4 ")
	-image 		"paintCacheWeights.png"
	PaintCacheTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintCacheOptAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("artAttrCacheToolScript 3 ")
	-image 		"paintCacheWeights.png"	
	PaintCacheToolOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTransferCacheToInput"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("moveCacheToInput 0")
	-image 		"nClothCacheTransfer.png"
	MoveCacheToInput;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEnableAllCache"))
	-annotation (uiRes("m_defaultRunTimeCommands.kEnableAllCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("setCacheEnable 1 0 {}")
	-image 		"nClothCacheEnable.png"
	EnableAllCaches;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisableAllCache"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDisableAllCacheAnnot"))
	-category	("Menu items.Dynamics.nCache")
	-command	("setCacheEnable 0 0 {}")
	-image 		"nClothCacheDisable.png"
	DisableAllCaches;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayNComponentNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayNComponentNodes")
	nucleusDisplayNComponentNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayDynamicConstraintNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayDynamicConstraintNodes")
	nucleusDisplayDynamicConstraintNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayMaterialNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayMaterialNodes")
	nucleusDisplayMaterialNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayTextureNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayTextureNodes")
	nucleusDisplayTextureNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayTransformNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayTransformNodes")
	nucleusDisplayTransformNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNucleusDisplayOtherNodes"))
	-category	("Menu items.Dynamics.Solvers.AE Display")
	-command    ("performNucleusDisplayOtherNodes")
	nucleusDisplayOtherNodes;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGetnClothEGLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGetnClothEGAnnot"))
	-category   ("Menu items.Dynamics.nCloth")
	-command	("{ ContentBrowserWindow;"+
				"contentBrowserSetLocation(\"Examples/FX/nCloth Examples\"); }")
			
	nucleusGetnClothExample;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDistributedSimulationSubmission"))
	-category   ("Other items.nCloth")
	-command    ("buildSendToBackburnerDialogInternal")
	-showInHotkeyEditor false
	buildSendToBackburnerDialog;



}
particleMenus(); 

// ======================================================================
// ======================================================================
//
//	Rendering menu set, ie. Lighting/Shading, Render, and Paint Effects.
//
// ======================================================================
// ======================================================================
proc renderingMenus() {
//
//	Lighting/Shading menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAssignNewMaterialAnnot"))
	-category   ("Other items.Lights and Shading")
	-command    ("doCreateAssignNewMaterialTreeLister \"\"")
	-showInHotkeyEditor false
	AssignNewMaterial;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMakeLightLinks")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeLightLinksAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("lightlink -make -useActiveLights -useActiveObjects")
	MakeLightLinks;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBreakLightLinks")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBreakLightLinksAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("lightlink -break -useActiveLights -useActiveObjects")
	BreakLightLinks;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectObjectsIlluminated")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectObjectsIlluminatedByLightAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("RenLightingSelectObjects")
	SelectObjectsIlluminatedByLight;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSelectLights")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectLightsIlluminatingObjectAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("RenLightingSelectLights")
	SelectLightsIlluminatingObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMakeShadowLinks"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeShadowLinksAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("lightlink -make -shadow -useActiveLights -useActiveObjects")
	MakeShadowLinks;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBreakShadowLinks"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBreakShadowLinksAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("lightlink -break -shadow -useActiveLights -useActiveObjects")
	BreakShadowLinks;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectObjectsShadowed"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectObjectsShadowedByLightAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("RenShadowingSelectObjects")
	SelectObjectsShadowedByLight;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectLightsShadowingObject"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectLightsShadowingObjectAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("RenShadowingSelectLights")
	SelectLightsShadowingObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kMaterialAttributes")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowShadingGroupAttributeEditorAnnot"))
	-category   ("Menu items.Rendering.Lighting/Shading")
	-command    ("showShadingGroupAttrEditor")
	ShowShadingGroupAttributeEditor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kTextureToGeometryLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTextureToGeometryAnnot")) 
	-image 		"textureToGeom.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"performTextureToGeom 0"
	TextureToGeometry;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTextureToGeometryOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command 	"performTextureToGeom 1"
		TextureToGeometryOptions; 

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisplacementToPolygonLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplacementToPolygonAnnot"))
	-image 		"displaceToPolygons.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performDisplacementToPoly")
	DisplacementToPolygon;

runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kDisplacementToPolygonsHistLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplacementToPolygonsHistAnnot")) 
	-image 		"displaceToPolygonsHistory.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"setupAnimatedDisplacement"
	SetupAnimatedDisplacement;


runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kFluidsToPolygonsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFluidsToPolygonsAnnot")) 
	-image 		"fluidtoPoly.png" 
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"performFluids 1 FluidToPoly 0"
	FluidsToPolygons;
	
runTimeCommand -default true
    -label 		(uiRes("m_defaultRunTimeCommands.kNParticleToPolygonsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNParticleToPolygonsAnnot")) 
	-image 		"nParticleToPolygons.png" 
	-category   ("Menu items.Common.Modify.Convert")
	-command 	"doParticleToPoly"
	NParticleToPolygons;



// 3d Paint Tool.
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintTool")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kArt3dPaintToolAnnot"))
	-image 		"art3dPaint.png"
	-category   ("Menu items.Rendering.Texturing")
	-command    ("art3dPaintToolScript 4")
	Art3dPaintTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kArt3dPaintToolOptionsAnnot"))
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintToolOptionBox")) 
	-image 		"art3dPaint.png"
	-category   ("Menu items.Rendering.Texturing")
	-command    ("art3dPaintToolScript 3")
	Art3dPaintToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateTextureReferenceObjectLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateTextureReferenceObjectAnnot"))
	-image "createTextRefObj.png"
	-category   ("Menu items.Rendering.Texturing")
	-command    ("makeReferenceObject")
	CreateTextureReferenceObject;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteTextureReferenceObjectLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteTextureReferenceObjectAnnot"))
	-image "deleteTextRefObj.png"
	-category   ("Menu items.Rendering.Texturing")
	-command    ("deleteReferenceObject")
	DeleteTextureReferenceObject;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSelectTextureReferenceObjectLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectTextureReferenceObjectAnnot"))
	-image "selectTextRefObj.png"
	-category   ("Menu items.Rendering.Texturing")
	-command    ("selectReferenceObject")
	SelectTextureReferenceObject;

runTimeCommand -default true
	-image 		"texturePlacement.png"
	-label 		(uiRes("m_defaultRunTimeCommands.kNURBSTexturePlacementTool")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSTexturePlacementToolAnnot"))
	-category   ("Menu items.Rendering.Texturing")
	-command    ("setToolTo defaultTexturePlacementContext")
	NURBSTexturePlacementTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNURBSTexturePlacementToolOptionsAnnot"))
	-category   ("Menu items.Rendering.Texturing")
	-command    ("setToolTo defaultTexturePlacementContext; toolPropertyWindow")
	NURBSTexturePlacementToolOptions;
//
//	Render menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
    -label (uiRes("m_defaultRunTimeCommands.kRenderCurrentFrame")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderIntoNewWindowAnnot"))
	-category   ("Menu items.Animation.Playback;Menu items.Rendering.Render")
	-command    ("renderIntoNewWindow render")
	RenderIntoNewWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRedoPreviousRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRedoPreviousRenderAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("redoPreviousRender render")
	RedoPreviousRender;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRenderOptionBox")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderOptionsAnnot"))
    -category   ("Menu items.Rendering.Render")
	-command    ("renderOptions")
	RenderOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMayaPreviewRenderIntoNewWindowAnnot"))
	-category   ("Other items.Render")
	-command    ("renderIntoNewWindow mayaPreviewRender")
	-showInHotkeyEditor false
	mayaPreviewRenderIntoNewWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kIPRRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kIPRRenderIntoNewWindowAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("renderIntoNewWindow iprRender")
	IPRRenderIntoNewWindow;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRedoPreviousIPRRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRedoPreviousIPRRenderAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("redoPreviousRender iprRender")
	RedoPreviousIPRRender;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIPROptionsAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("iprOptions")
	IPROptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRenderDiagnosticsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderDiagnosticsAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("mayaRenderDiagnostics")
	RenderDiagnostics;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRenderSequence")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderSequenceAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("renderSequence")
	RenderSequence;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderSequenceOptionBoxAnnotation")) 
	-category   ("Menu items.Rendering.Render")
	-command    ("renderSequenceOptionsWindow")
	RenderSequenceOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBatchRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBatchRenderAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("mayaBatchRender")
	BatchRender;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBatchRenderOptionsAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("batchRenderOptions")
	BatchRenderOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCancelBatchRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCancelBatchRenderAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("cancelBatchRender")
	CancelBatchRender;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShowBatchRender")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kShowBatchRenderAnnot"))
	-category   ("Menu items.Rendering.Render")
	-command    ("showBatchRender")
	ShowBatchRender;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportBackburner"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportBackburnerAnn"))	
	-category   ("Menu items.Rendering.Render")
	-command    ("performExportToBackburner")
	PerformExportToBackburner;

if (!`about -nt` && !`about -mac`) {
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kDistributeRenderAnnot"))
		-category   ("Other items.Render")
		-command    ("distributedRenderSession")
		DistributeRender;
}

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEditTextureAnnot"))
	-category   ("Other items.Render")
	-showInHotkeyEditor false
	EditTexture;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTestTextureAnnot"))
	-category   ("Other items.Render")
	-command    ("performCompositeTest 0")
	-showInHotkeyEditor false
	TestTexture;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTestTextureOptionsAnnot"))
	-category   ("Other items.Render")
	-command    ("performCompositeTest 1")
	-showInHotkeyEditor false
	TestTextureOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderTextureRangeAnnot"))
	-category   ("Other items.Render")
	-command    ("performComposite 0")
	-showInHotkeyEditor false
	RenderTextureRange;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenderTextureRangeOptionsAnnot"))
	-category   ("Other items.Render")
	-command    ("performComposite 1")
	-showInHotkeyEditor false
	RenderTextureRangeOptions;


//
//	Color Management menu.
//
// ----------------------------------------------------------------------
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementIncExposureFine"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView exposure exposureRenderViewFieldItem 0.1; resetRVExposureTogleState; updateRenderViewExposureSlider")
	IncreaseExposureFine;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementIncExposureCoarse"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView exposure exposureRenderViewFieldItem 0.5; resetRVExposureTogleState; updateRenderViewExposureSlider")
	IncreaseExposureCoarse;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementDecExposureFine"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView exposure exposureRenderViewFieldItem -0.1; resetRVExposureTogleState; updateRenderViewExposureSlider")
	DecreaseExposureFine;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementDecExposureCoarse"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView exposure exposureRenderViewFieldItem -0.5; resetRVExposureTogleState; updateRenderViewExposureSlider")
	DecreaseExposureCoarse;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementIncGammaFine"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView gamma gammaRenderViewFieldItem 0.05; resetRVGammaTogleState; updateRenderViewGammaSlider")
	IncreaseGammaFine;
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementIncGammaCoarse"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView gamma gammaRenderViewFieldItem 0.1; resetRVGammaTogleState; updateRenderViewGammaSlider")
	IncreaseGammaCoarse;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementDecGammaFine"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView gamma gammaRenderViewFieldItem -0.05; resetRVGammaTogleState; updateRenderViewGammaSlider")
	DecreaseGammaFine;
    
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kColorManagementDecGammaCoarse"))
	-category   ("Other items.Color Management")
	-command    ("incrementDynamicPropertyField renderView gamma gammaRenderViewFieldItem -0.1; resetRVGammaTogleState; updateRenderViewGammaSlider")
	DecreaseGammaCoarse;

//
//	Paint Effects menu.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsPanelAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorOpenPaintEffectsPanel_NamedCmd")
	PaintEffectsPanel;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintEffectsToolLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToolAnnot"))
	-image "paintEffectsTool.png"
	-category   ("Menu items.Modeling.Generate")
	-command    ("creatorSetPaintEffectCtx_NamedCmd")
	PaintEffectsTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToolOptionsAnnot"))
	-image "paintEffectsTool.png"
	-category   ("Menu items.Modeling.Generate")
	-command    ("setToolTo $gCreatorWireCtx; toolPropertyWindow;")
	PaintEffectsToolOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMakePaintableLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakePaintableAnnot"))
	-image "makePaintable.png"
	-category   ("Menu items.Modeling.Generate")
	-command    ("creatorMakePaintable_NamedCmd")
	MakePaintable;


runTimeCommand -default true 
    -label 		(uiRes("m_defaultRunTimeCommands.kPfxGetBrushLbl"))
	-annotation  (uiRes("m_defaultRunTimeCommands.kPfxGetBrushAnnot"))
	-image 		"paintEffectsBrushesLarge.png"
	-category   ("Menu items.Modeling.Generate")
	-command ("{ ContentBrowserWindow;"+
			 "contentBrowserSetLocation(\"Examples/Paint Effects/Airbrush\"); }")
	PfxGetBrush;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kTemplateBrushSettingsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kTemplateBrushSettingsAnnot"))
	-image "templateBrushSettings.png" 
	-category   ("Menu items.Modeling.Generate")
	-command    ("brushToolSettings")
	TemplateBrushSettings;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kResetTemplateBrushLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kResetTemplateBrushAnnot"))
	-image "resetTemplateBrush.png"  
	-category   ("Menu items.Modeling.Generate")
	-command    ("resetBrush")
	ResetTemplateBrush;


runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPfxFlipTubeDirLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPfxFlipTubeDirAnnot"))
	-image "flipTube.png"
	-category   ("Menu items.Modeling.Generate")
	-command "changeTubeDirection" 
	PfxFlipTubeDir;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPfxMakeCollideLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPfxMakeCollideAnnot"))
	-image "hairCollide.png"
	-category   ("Menu items.Modeling.Generate")
	-command "makeCollidePaintEffects" 
	PfxMakeCollide;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintOnPaintableObjectsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintOnPaintableObjectsAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("dynWireCtx -e -dp 1 $gCreatorWireCtx")
	PaintOnPaintableObjects;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePaintOnPaintableObjectsAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorTogglePaintOnPaintable_NamedCmd")
	TogglePaintOnPaintableObjects;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintOnViewPlaneLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintOnViewPlaneAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("dynWireCtx -e -dp 0 $gCreatorWireCtx")
	PaintOnViewPlane;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kApplySettingsToLastStrokeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kApplySettingsToLastStrokeAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("copyTemplateBrushToSelected")
	ApplySettingsToLastStroke;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kGetSettingsFromSelectedStrokeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGetSettingsFromSelectedStrokeAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("setTemplateToCurrentBrush")
	GetSettingsFromSelectedStroke;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kApplySettingsToSelectedStrokeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kApplySettingsToSelectedStrokeAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("copyTemplateBrushToSelected")
	ApplySettingsToSelectedStroke;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kShareOneBrushLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kShareOneBrushAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("useSameBrush")
	ShareOneBrush;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kRemoveBrushSharingLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveBrushSharingAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("unShareBrush")
	RemoveBrushSharing;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kSelectBrushNamesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectBrushNamesAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("selectBrushesWhoseNameContains")
	SelectBrushNames;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kLoopBrushAnimationLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kLoopBrushAnimationAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performLoopBrushAnim false")
	LoopBrushAnimation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLoopBrushAnimationOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performLoopBrushAnim true")
	LoopBrushAnimationOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMakeBrushSpringLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeBrushSpringAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performMakeBrushSpring false")
	MakeBrushSpring;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMakeBrushSpringOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performMakeBrushSpring true")
	MakeBrushSpringOptions;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kBakeSpringAnimationLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeSpringAnimationAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performBakeBrushSpringAnim false")
	BakeSpringAnimation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBakeSpringAnimationOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Brush Animation")
	-command    ("performBakeBrushSpringAnim true")
	BakeSpringAnimationOptions;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kSimplifyStrokePathCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSimplifyStrokePathCurvesAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command    ("simplifyStrokes 4")
	SimplifyStrokePathCurves;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetStrokeControlCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSetStrokeControlCurvesAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command    ("bindCurvesToStrokes")
	SetStrokeControlCurves;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAttachBrushToCurvesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAttachBrushToCurvesAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command    ("convertCurvesToStrokes")
	AttachBrushToCurves;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPfxBrushTransferLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPfxBrushTransferAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command "reparentStrokes"
	PfxBrushTransfer;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMakePressureCurveLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kMakePressureCurveAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command    ("performMakePressureCurve false")
	MakePressureCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMakePressureCurveOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Curve Utilities")
	-command    ("performMakePressureCurve true")
	MakePressureCurveOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintGridLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintGridAnnot"))
	-category   ("Menu items.Modeling.Generate.Auto Paint")
	-command    ("performPaintGrid false")
	PaintGrid;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintGridOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Auto Paint")
	-command    ("performPaintGrid true")
	PaintGridOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintRandomLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintRandomAnnot"))
	-category   ("Menu items.Modeling.Generate.Auto Paint")
	-command    ("performPaintRandom false")
	PaintRandom;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintRandomOptionsAnnot"))
	-category   ("Menu items.Modeling.Generate.Auto Paint")
	-command    ("performPaintRandom true")
	PaintRandomOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPaintEffectsGlobalSettingsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsGlobalSettingsAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("creatorGlobalSettings")
	PaintEffectsGlobalSettings;

runTimeCommand -default true
	-label  (uiRes("m_defaultRunTimeCommands.kPaintEffectsMeshQualityLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsMeshQualityAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("paintEffectsMeshQuality")
	PaintEffectsMeshQuality;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPfxPresetBlendLbl"))
	-annotation  (uiRes("m_defaultRunTimeCommands.kPfxPresetBlendAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command "checkPresetBlend" 
	PfxPresetBlend;

runTimeCommand -default true
	-label      (uiRes("m_defaultRunTimeCommands.kPresetBlendingWindowLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPresetBlendingWindowAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("brushPresetBlendWin")
	PresetBlendingWindow;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSaveBrushPresetLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSaveBrushPresetAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command    ("saveBrushToShelf")
	SaveBrushPreset;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kClearPaintEffectsViewAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("{if (`optionVar -q dynPaint23dToggle` == 2) " +
	             "{global string $gDynPaintEditorName; " +
				 "float $cc[] = `optionVar -q dynPaintPanelClearColour`; " +
				 "dynPaintEditor -e -cl $cc[0] $cc[1] $cc[2] " +
				 "$gDynPaintEditorName;}}")
	ClearPaintEffectsView;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUndoCanvasAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("dynPaintEditor -e -cu $gDynPaintEditorName;")
	UndoCanvas;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFlipTubeDirectionAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("setAttr (getDefaultBrush() + \".tubeDirection\")"
				+"(!( `getAttr( getDefaultBrush() + \".tubeDirection\" )`));")
	FlipTubeDirection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePaintAtDepthAnnot"))
	-category   ("Other items.Paint Effects")
	-command (
			"if (`dynWireCtx -q -pd dynWireCtx1`) {\n"
   			+"	dynWireCtx -e -pd false dynWireCtx1;\n"
			+"	print \"" + (uiRes("m_defaultRunTimeCommands.kPaintAtDepthNowOFF")) + "\";\n"
			+"} else {\n"
     		+"	dynWireCtx -e -pd true dynWireCtx1;\n"
			+"	print \"" + (uiRes("m_defaultRunTimeCommands.kPaintAtDepthNowON")) + "\";\n"
			+"}")
	TogglePaintAtDepth;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("setPresetBlend(0.2, 0.2)")
	BrushPresetBlend;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendOffAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("restorePresetBlend()")
	BrushPresetBlendOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendShadingAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("setPresetBlend(0.0, 0.3)")
	BrushPresetBlendShading;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendShadingOffAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("restorePresetBlend()")
	BrushPresetBlendShadingOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendShapeAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("setPresetBlend(0.3, 0.0)")
	BrushPresetBlendShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetBlendShapeOffAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("restorePresetBlend()")
	BrushPresetBlendShapeOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetReplaceShadingAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("setPresetBlend(0.0, 1.0)")
	BrushPresetReplaceShading;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushPresetReplaceShadingOffAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("restorePresetBlend()")
	BrushPresetReplaceShadingOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleOppositeFlagOfSelectedShapesAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("string $selectionList[] = `ls -sl -l -dag -leaf`;\n" +
	             "string $selection;\nfor ($selection in $selectionList) {\n" +
	             "    if (`nodeType $selection` == \"nurbsSurface\") {\n" +
	             "        int $op = `getAttr ($selection + \".opposite\")`;\n" +
	             "        $op = !$op;\n" +
	             "        setAttr ($selection + \".opposite\") $op;\n" +
	             "    }\n" +
	             "}")
	ToggleOppositeFlagOfSelectedShapes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushAnimationMarkingMenuAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorBrushAnimationMM")
	BrushAnimationMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kBrushAnimationMarkingMenuPopDownAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorDeletePopupMM")
	BrushAnimationMarkingMenuPopDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveUtilitiesMarkingMenuAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorCurveUtilityMM")
	CurveUtilitiesMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCurveUtilitiesMarkingMenuPopDownAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorDeletePopupMM")
	CurveUtilitiesMarkingMenuPopDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAutoPaintMarkingMenuAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorAutoPaintMM")
	AutoPaintMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAutoPaintMarkingMenuPopDownAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("creatorDeletePopupMM")
	AutoPaintMarkingMenuPopDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectPanelActivateAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("dynPaintSwapPanelPress")
	PaintEffectPanelActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectPanelDeactivateAnnot"))
	-category   ("Other items.Paint Effects")
	-command    ("dynPaintSwapPanelRelease")
	PaintEffectPanelDeactivate;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintEffectsToPolyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToPolyAnnot"))
	-image 		"paintFXtoPoly.png"
	-category   ("Menu items.Common.Modify.Convert;Menu items.Rendering.Toon")
	-command    ("performPaintEffectsToPoly  false")
	PaintEffectsToPoly;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToPolyOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert;Menu items.Rendering.Toon")
		-command    ("performPaintEffectsToPoly  true")
		PaintEffectsToPolyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintEffectsToNurbsLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToNurbsAnnot"))
	-image 		"paintFXtoNurbs.png"
	-category   ("Other items.Paint Effects")
	-command    ("performPaintEffectsToNurbs  false")
	PaintEffectsToNurbs;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToNurbsOptionsAnnot"))
		-category   ("Menu items.Common.Modify.Convert")
		-command    ("performPaintEffectsToNurbs  true")
		PaintEffectsToNurbsOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kPaintEffectsToCurveLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToCurveAnnot"))
	-image 		"paintFXtoCurve.png"
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performPaintEffectsToCurve  false")
	PaintEffectsToCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintEffectsToCurveOptionsAnnot"))
	-category   ("Menu items.Common.Modify.Convert")
	-command    ("performPaintEffectsToCurve  true")
	PaintEffectsToCurveOptions;


}

renderingMenus();

// ======================================================================
// ======================================================================
//
//	Some other category of commands.
//
// ======================================================================
// ======================================================================

global proc scriptedPanelRunTimeCmdBackfaceCulling( string $currentPanel )
{
	string $scriptedType = `scriptedPanel -q -type $currentPanel`;


	global string $gScriptedModelEditorTypes[];
	global string $gScriptedModelEditorList[];
	int $typeCount = size( $gScriptedModelEditorTypes );
	int $editorCount = size( $gScriptedModelEditorList );
	for ( $i = 0; $i < $typeCount; $i ++ ) {
		if ( $scriptedType == $gScriptedModelEditorTypes[$i] && $i < $editorCount )
		{
			int $culling = `modelEditor -query -backfaceCulling $gScriptedModelEditorList[$i]`;
			modelEditor -edit -backfaceCulling (1 - $culling) $gScriptedModelEditorList[$i];
			break;
		}
	}
}

global proc scriptedPanelRunTimeCmd( string $rootCmd, string $currentPanel )
{
	string $scriptedType = `scriptedPanel -q -type $currentPanel`;

	global string $gScriptedModelEditorTypes[];
	global string $gScriptedModelEditorList[];
	int $typeCount = size( $gScriptedModelEditorTypes );
	int $editorCount = size( $gScriptedModelEditorList );
	for ( $i = 0; $i < $typeCount; $i ++ ) {
		if ( $scriptedType == $gScriptedModelEditorTypes[$i] && $i < $editorCount )
		{
			string $theCmd = $rootCmd + " " + $gScriptedModelEditorList[$i];
			evalEcho( $theCmd );
			break;
		}
	}
}

proc miscCommands() {
//
//	Modeling Panel commands.
//
// ----------------------------------------------------------------------

//	Bug #185605
//	On Mac, the 'getPanel -underPointer', returns the panel on which the
//	cursor currently is. Hence, when Shading menu is torn off and moved onto the
//  orthographic panels, the panel is returned and not a NULL. Use getPanel
//	-withFocus on Mac, instead of -underPointer flag.

string $wireframeDisplay = (uiRes("m_defaultRunTimeCommands.kDisplayWireframeAnnot"));
string $wireframeDisplayIvm = ("inViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmWireframe")) + "\" -fade -pos topCenter;\n");
string $shadedDisplayIvm = ("inViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmShaded")) + "\" -fade -pos topCenter;\n");
string $shadedTextureDisplayIvm = ("inViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmShadedTexture")) + "\" -fade -pos topCenter;\n");
string $lightDisplayIvm = ("inViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmLight")) + "\" -fade -pos topCenter;\n");
if(`about -mac`)
{
	//	Display Wireframe for current panel.
	//
	runTimeCommand -default true
		-annotation $wireframeDisplay
		-category   ("Other items.Viewport items")
		-command	("displaySmoothness -full;\n" +
					 "{\n" +
	 				 "    string $currentPanel = `getPanel -withFocus`;\n" +
					 "    if (\"\" != $currentPanel) {\n" +
					 "        string $panelType = `getPanel -typeOf $currentPanel`;\n" +
					 "        if ($panelType ==  \"modelPanel\") {\n" +
					 "            modelEditor -edit -displayAppearance \"wireframe\" \n" +
					 "                -displayLights \"default\" $currentPanel;\n" +
								  $wireframeDisplayIvm +
					 "        } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -exists $currentPanel` \n" +
					 "            && `scriptedPanel -query -type $currentPanel` == \"dynPaintScriptedPanelType\") {\n" +
					 "            dynPaintEditor -edit -displayAppearance \"wireframe\" \n" +
					 "                -displayLights \"default\" $gDynPaintEditorName;\n" +
								  $wireframeDisplayIvm +
					 "        } else if ($panelType ==  \"scriptedPanel\" ) {\n " +
					 "			string $scriptedPanelType = `scriptedPanel -query -type $currentPanel`; \n " +
					 "			if($scriptedPanelType != \"nodeEditorPanel\" && $scriptedPanelType != \"hyperShadePanel\"){ \n " +
					 "			  string $cmd = \"modelEditor -edit -displayAppearance \\\"wireframe\\\" -displayLights \\\"default\\\" \";\n " +
					 "			  scriptedPanelRunTimeCmd( $cmd, $currentPanel );\n" +
								  $wireframeDisplayIvm +
					 "            }\n" +
					 "        }\n" +
					 "    }\n" +
					 "}\n"
					 )
		DisplayWireframe;
}
else
{
//	Display Wireframe for current panel.
//
runTimeCommand -default true
	-annotation $wireframeDisplay
	-category   ("Other items.Viewport items")
	-command	("displaySmoothness -full;\n" +
				 "{\n" +
				 "    string $currentPanel = `getPanel -underPointer`;\n" +
				 "    if (\"\" == $currentPanel) {\n" +
				 "        $currentPanel = `getPanel -withFocus`;\n" +
				 "    }\n" +
				 "    if (\"\" != $currentPanel) {\n" +
				 "        string $panelType = `getPanel -typeOf $currentPanel`;\n" +
				 "        if ($panelType ==  \"modelPanel\") {\n" +
				 "            modelEditor -edit -displayAppearance \"wireframe\" \n" +
				 "                -displayLights \"default\" $currentPanel;\n" +
							  $wireframeDisplayIvm +
				 "        } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -exists $currentPanel` \n" +
				 "            && `scriptedPanel -query -type $currentPanel` == \"dynPaintScriptedPanelType\") { \n" +
				 "            dynPaintEditor -edit -displayAppearance \"wireframe\" \n" +
				 "                -displayLights \"default\" $gDynPaintEditorName;\n" +
							  $wireframeDisplayIvm +
				 "        } else if ($panelType ==  \"scriptedPanel\" ) {\n " +
				 "			string $scriptedPanelType = `scriptedPanel -query -type $currentPanel`; \n " +
				 "			if($scriptedPanelType != \"nodeEditorPanel\" && $scriptedPanelType != \"hyperShadePanel\"){ \n " +
				 "			  string $cmd = \"modelEditor -edit -displayAppearance \\\"wireframe\\\" -displayLights \\\"default\\\" \"; \n" +
				 "			  scriptedPanelRunTimeCmd( $cmd, $currentPanel );\n" +
							  $wireframeDisplayIvm +
				 "            }\n" +
				 "        }\n" +
				 "    }\n" +
				 "}\n"
				 )
	DisplayWireframe;
}

//	Display Shaded for current panel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayShadedAnnot"))
	-category   ("Other items.Viewport items")
	-command	("{\n" +
				 "    string $currentPanel = `getPanel -underPointer`;\n" +
				 "    if (\"\" == $currentPanel) {\n" +
				 "        $currentPanel = `getPanel -withFocus`;\n" +
				 "    }\n" +
				 "    if (\"\" != $currentPanel) {\n" +
				 "        string $panelType = `getPanel -typeOf $currentPanel`;\n" +
				 "        if ($panelType ==  \"modelPanel\") {\n" +
				 "            modelEditor -edit -displayAppearance \"smoothShaded\" -displayTextures off \n" +
				 "                -displayLights \"default\" $currentPanel;\n" +
							  $shadedDisplayIvm +
				 "        } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -exists $currentPanel` \n" +
				 "            && `scriptedPanel -query -type $currentPanel` == \"dynPaintScriptedPanelType\") {\n" +
				 "            dynPaintEditor -edit -displayTextures 0 -displayAppearance \"smoothShaded\"\n" +
				 "                -displayLights \"default\" $gDynPaintEditorName;\n" +
							  $shadedDisplayIvm +
				 "        } else if ($panelType ==  \"scriptedPanel\" ) {\n " +
				 "			string $scriptedPanelType = `scriptedPanel -query -type $currentPanel`; \n " +
				 "			if($scriptedPanelType != \"nodeEditorPanel\" && $scriptedPanelType != \"hyperShadePanel\"){ \n " +
				 "			  string $cmd = \"modelEditor -edit -displayAppearance \\\"smoothShaded\\\" -displayTextures off -displayLights \\\"default\\\" \"; \n" +
				 "			  scriptedPanelRunTimeCmd( $cmd, $currentPanel ); \n" +
							  $shadedDisplayIvm +
				 "            }\n" +
				 "        }\n" +
				 "    }\n" +
				 "}\n"

				 )
	DisplayShaded;

//	Display Smooth Shaded without changing other parameters for current panel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplaySmoothShadedAnnot"))
	-category   ("Other items.Viewport items")
	-command	("{\n" +
				 "    string $currentPanel = `getPanel -underPointer`;\n" +
				 "    if (\"\" == $currentPanel) {\n" +
				 "        $currentPanel = `getPanel -withFocus`;\n" +
				 "    }\n" +
				 "    if (\"\" != $currentPanel) {\n" +
				 "        string $panelType = `getPanel -typeOf $currentPanel`;\n" +
				 "        if ($panelType ==  \"modelPanel\") {\n" +
				 "            modelEditor -edit -displayAppearance \"smoothShaded\" \n" +
				 "                $currentPanel;\n" +
				 "        } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -exists $currentPanel` \n" +
				 "            && `scriptedPanel -query -type $currentPanel` == \"dynPaintScriptedPanelType\") {\n" +
				 "            dynPaintEditor -edit -displayAppearance \"smoothShaded\"\n" +
				 "                $gDynPaintEditorName;\n" +
				 "        } else if ($panelType ==  \"scriptedPanel\") { \n" +
				 "			  string $cmd = \"modelEditor -edit -displayAppearance \\\"smoothShaded\\\"  \"; \n" +
				 "			  scriptedPanelRunTimeCmd( $cmd, $currentPanel ); \n" +
				 "        }\n" +
				 "    }\n" +
				 "}\n")
	DisplaySmoothShaded;

//	Display Shaded and Textured for current panel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayShadedAndTexturedAnnot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
				   "  string $currentPanel = `getPanel -withFocus`; " +
				   "  string $panelType = `getPanel -to $currentPanel`;" +
				   "  if ($panelType ==  \"modelPanel\") { " +
				   "   modelEditor -edit -da \"smoothShaded\" -displayTextures on " +
				   "       -dl \"default\" $currentPanel;" +
						$shadedTextureDisplayIvm +
				   "  } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -ex $currentPanel` && `scriptedPanel -q -type $currentPanel` == \"dynPaintScriptedPanelType\") {" +
				   "     dynPaintEditor -e -dtx 1 -dsa \"smoothShaded\" -dsl \"default\" $gDynPaintEditorName;" +
						$shadedTextureDisplayIvm +
				   "  } else if ($panelType ==  \"scriptedPanel\" ) {\n " +
  				   "	 string $scriptedPanelType = `scriptedPanel -query -type $currentPanel`; \n " +
				   "	 if($scriptedPanelType != \"nodeEditorPanel\" && $scriptedPanelType != \"hyperShadePanel\"){ \n " +
				   "	   string $cmd = \"modelEditor -edit -displayAppearance \\\"smoothShaded\\\" -displayTextures on -displayLights \\\"default\\\" \"; \n" +
				   "	   scriptedPanelRunTimeCmd( $cmd, $currentPanel ); \n" +
						$shadedTextureDisplayIvm +
				   "      }\n" +
				   "   }" +
				   "}"
				   )
	DisplayShadedAndTextured;

//	Toggle Use Default Material without changing other parameters for current panel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUseDefaultMaterialAnnot"))
	-category   ("Other items.Viewport items")
	-command	("{\n" +
				 "    string $currentPanel = `getPanel -underPointer`;\n" +
				 "    if (\"\" == $currentPanel) {\n" +
				 "        $currentPanel = `getPanel -withFocus`;\n" +
				 "    }\n" +
				 "    if (\"\" != $currentPanel) {\n" +
				 "        string $panelType = `getPanel -typeOf $currentPanel`;\n" +
				 "        if ($panelType ==  \"modelPanel\") {\n" +
				 "			  int $usingDefaultMaterial = `modelEditor -query -useDefaultMaterial $currentPanel`;\n" +
				 "            modelEditor -edit -useDefaultMaterial (1 - $usingDefaultMaterial) $currentPanel;\n" +
				 "        } \n" +
				 "    }\n" +
				 "}\n")
	ToggleUseDefaultMaterial;

//	Display Light for current panel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayLightAnnot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
				   "  string $currentPanel = `getPanel -withFocus`; " +
				   "  string $panelType = `getPanel -to $currentPanel`;" +
				   "  if ($panelType ==  \"modelPanel\") { " +
				   "   modelEditor -edit -dl \"all\" $currentPanel;" +
						$lightDisplayIvm +
				   "  } else if (`isTrue \"MayaCreatorExists\"` && `scriptedPanel -ex $currentPanel` && `scriptedPanel -q -type $currentPanel` == \"dynPaintScriptedPanelType\") {" +
				   "     dynPaintEditor -e -dtx 1 -dsl \"all\" $gDynPaintEditorName;" +
						$lightDisplayIvm +
				   "  } else if ($panelType ==  \"scriptedPanel\" ) {\n " +
  				   "	 string $scriptedPanelType = `scriptedPanel -query -type $currentPanel`; \n " +
				   "	 if($scriptedPanelType != \"nodeEditorPanel\" && $scriptedPanelType != \"hyperShadePanel\"){ \n " +
				   "	   string $cmd = \"modelEditor -edit -displayLights \\\"all\\\" \"; \n" +
				   "	   scriptedPanelRunTimeCmd( $cmd, $currentPanel ); \n" +
						$lightDisplayIvm +
				   "    }\n" +
				   "  }" +
				   "}"
				   )
	DisplayLight;

//	Toggle Backface Culling for current panel
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleBackfaceCullingAnnot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
				   "  string $currentPanel = `getPanel -withFocus`; " +
				   "  string $panelType = `getPanel -to $currentPanel`;" +
				   "  if ($panelType ==  \"modelPanel\") { " +
				   "    int $culling = `modelEditor -query -backfaceCulling $currentPanel`;" +
				   "    modelEditor -edit -backfaceCulling (1 - $culling) $currentPanel;" +
				   "  } else if ($panelType ==  \"scriptedPanel\") { " +
				   "	scriptedPanelRunTimeCmdBackfaceCulling( $currentPanel ); \n" +
				   "  }" +
				   "}")
	ToggleBackfaceCulling;


//	Shading Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayShadingMarkingMenuAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("buildShadingMM")
	DisplayShadingMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayShadingMarkingMenuPopDownAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("MarkingMenuPopDown")
	DisplayShadingMarkingMenuPopDown;

//	Frame selection without children in current panel view.
//
runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFrameSelectedWithoutChildrenAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("fitPanel -selectedNoChildren")
	FrameSelectedWithoutChildren;

//	Frame selection with children in current panel view.
//
runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFrameSelectedWithChildrenAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("fitPanel -selected")
	FrameSelected;

//	Frame all in current panel view.
//
runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kFrameAllAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("fitPanel -all")
	FrameAll;

//	Activate Viewport 2.0
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivateViewport20Annot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
				   "  global string $gViewport2; " + 
				   "  string $currentPanel = `getPanel -withFocus`; " +
				   "  string $panelType = `getPanel -to $currentPanel`;" +
				   "  if ($panelType ==  \"modelPanel\") { " +
				   "     setRendererInModelPanel $gViewport2 $currentPanel;" +
				   "  } else if ($panelType ==  \"scriptedPanel\") { " +
				   "	string $cmd = \"setRendererInModelPanel $gViewport2 \"; \n" +
				   "	scriptedPanelRunTimeCmd( $cmd, $currentPanel ); \n" +
				   "  }" +
				   "}")
	ActivateViewport20;

//	Show select all Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllMarkingMenuAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("buildSelectAllMM")
	SelectAllMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllMarkingMenuPopDownAnnot"))
	-category   ("Other items.Viewport items")
	-command    ("if(!`exists buildSelectAllMM`) source buildSelectAllMM; buildSelectAllMM_release;")
	SelectAllMarkingMenuPopDown;

// Toggle isolate select
//

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kSwitchDisplayMode"))
    -category ("Other items.Viewport items")
    -command ("switchDisplayMode")
    CycleDisplayMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleIsolateSelectAnnot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
				   "  string $currentPanel = `getPanel -withFocus`; " +
				   "  int $match = `gmatch $currentPanel \"modelPanel*\"`; " + //Ensure focus is on modelPanel
				   "  if($match == 1) {" +
				   "    string $state = `isolateSelect -q -state $currentPanel`;" +
				   "    if ($state)" +
				   "      enableIsolateSelect $currentPanel false;" +
				   "    else" +
				   "      enableIsolateSelect $currentPanel true;" +
				   "  }" +
				   "}" )
	ToggleIsolateSelect;

runTimeCommand -default true
    -annotation (uiRes("m_defaultRunTimeCommands.kToggleWireframeOnShadedAnnot"))
    -category ("Other items.Viewport items")
    -command  ("toggleWireframeOnShadedOption")
    ToggleWireframeOnShadedCmd;

runTimeCommand -default true
    -category ("Other items.Viewport items")
    -command  ("togglePolygonsOption")
    TogglePolygonsOptionCmd;

runTimeCommand -default true
    -category ("Other items.Viewport items")
    -command  ("toggleImagePlaneOption")
    ToggleImagePlaneOptionCmd;

runTimeCommand -default true
    -category ("Other items.Viewport items")
    -command  ("toggleNurbsCurvesOption")
    ToggleNurbsCurvesOptionCmd;


//
//	Status Line.
//
// ----------------------------------------------------------------------

//	Snap to curve.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToCurveAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -curve (!`snapMode -q -curve`)")
	SnapToCurve;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToCurvePressAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -curve 1")
	SnapToCurvePress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToCurveReleaseAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -curve 0")
	SnapToCurveRelease;

//	Snap to grid.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToGridAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -grid (!`snapMode -q -grid`)")
	SnapToGrid;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToGridPressAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -grid 1")
	SnapToGridPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToGridReleaseAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -grid 0")
	SnapToGridRelease;

//	Snap to pixel.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToPixelAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapModePixelSnap(1,!snapModePixelSnap(0,0))")
	SnapToPixel;

//	Snap to point.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToPointAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -point (!`snapMode -q -point`)")
	SnapToPoint;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToPointPressAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -point 1")
	SnapToPointPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToPointReleaseAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -point 0")
	SnapToPointRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToMeshCenterAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -mc (!`snapMode -q -mc`)")
	SnapToMeshCenter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToMeshCenterPressAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -mc 1")
	SnapToMeshCenterPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapToMeshCenterReleaseAnnot"))
	-category   ("Other items.Status Line")
	-command    ("snapMode -mc 0")
	SnapToMeshCenterRelease;

//	Toggle selection mode.
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectToggleModeLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToggleModeAnnot"))
	-image 		"polyObjectComponent.png" 
	-category   ("Menu items.Common.Select")
	-command    ("toggleSelMode; HideManipulators;")
	SelectToggleMode;

//	Selection masks.
//
string $selectVertexIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectVertex")) + "\" -fade -pos topCenter;\n");
string $selectEdgeIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectEdge")) + "\" -fade -pos topCenter;\n");
string $selectFaceIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectface")) + "\" -fade -pos topCenter;\n");
string $selectMultiCompIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectMultiComp")) + "\" -fade -pos topCenter;\n");
string $selectUVIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectUV")) + "\" -fade -pos topCenter;\n");
string $selectVertexFaceIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectVertexFace")) + "\" -fade -pos topCenter;\n");
string $selectUVShellIvm = ("\ninViewMessage -smg \"" + (uiRes("m_defaultRunTimeCommands.kIvmSelectUVShell")) + "\" -fade -pos topCenter;\n");
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectVertexMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectVertexMaskAnnot"))
	-image 		"polySelectVertex.png" 
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
	             "selectType -smp 1 -sme 0 -smf 0 -smu 0 -pv 1 -pe 0 " +
				 "-pf 0 -puv 0; " +
				 "HideManipulators; " +
				 $selectVertexIvm
				 )
	SelectVertexMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectEdgeMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectEdgeMaskAnnot"))
	-image 		"polySelectEdge.png" 
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
	             "selectType -smp 0 -sme 1 -smf 0 -smu 0 -pv 0 -pe 1 " +
				 "-pf 0 -puv 0; " +
				 "HideManipulators; " +
				 $selectEdgeIvm
				 )
	SelectEdgeMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectFacetMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectFacetMaskAnnot"))
	-image 		"polySelectFace.png" 
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
	             "selectType -smp 0 -sme 0 -smf 1 -smu 0 -pv 0 -pe 0 " +
				 "-pf 1 -puv 0; " +
				 "HideManipulators; " +
				 $selectFaceIvm
				 )
	SelectFacetMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectMultiCompMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectMultiCompMaskAnnot"))
	-image 		"polyMultiComponent.png"
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
	             "selectType -smp 0 -sme 0 -smf 0 -smu 0 -pv 0 -pe 0 " +
				 "-pf 0 -puv 0 -meshComponents 1; " +
				 "HideManipulators; " +
				 $selectMultiCompIvm)
	SelectMultiComponentMask;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectUVMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVMaskAnnot"))
	-image 		"polySelectUV.png"
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
	             "selectType -pv 0 -pe 0 -pf 0 -puv 1 -smp 0 -sme 0 -smf 0 -smu 1; " + 
				 "HideManipulators; " +
				 $selectUVIvm
				 )
	SelectUVMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectVertexFaceMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectVertexFaceMaskAnnot"))
	-image 		"polySelectVertexFace.png" 
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
				 "selectType -pvf 1 -pe 0 -pf 0 -puv 0; " +
				 "HideManipulators; " +
				 $selectVertexFaceIvm
				)
	SelectVertexFaceMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectUVShellAMaskLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVShellAMaskAnnot"))
	-image 		"polySelectUVShell.png"
	-category	("Menu items.Common.Select.Components")
	-command    ("setSelectMode components Components; " +
				 "selectType -msh 1 -pe 0 -pf 0 -puv 0 -pv 0; " +
				 "HideManipulators; " +
				 $selectUVShellIvm
				)
	SelectMeshUVShell;


// Nurbs surface/curve components
//

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCVsAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode vertices Components;")
	SelectCVsMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectPointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPointsAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode points Components;")
	SelectPointsMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectSurfacePointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectSurfacePointsAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode surfacePoints Components;")
	SelectSurfacePointsMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCurvePointsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCurvePointsAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode surfacePoints Components;")
	SelectCurvePointsMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectLinesLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectLinesAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode lines Components;")
	SelectLinesMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectHullsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectHullsAnnot"))
	-category   ("Menu items.Common.Select.Components")
	-command    ("setSelectMode hulls Components;")
	SelectHullsMask;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectCVSelectionBoundaryLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectCVSelectionBoundaryAnnot")) 
	-image 		"selectCVboundary.png"
	-category   ("Menu items.Common.Select.Components")
	-command 	"nurbsSelect -bs"
	SelectCVSelectionBoundary;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSelectSurfaceBorderLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectSurfaceBorderAnnot")) 
	-image 		"selectSurfaceBorder.png"
	-category   ("Menu items.Common.Select.Components")
	-command 	"performSelectNurbsBorder 0"
	SelectSurfaceBorder;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSelectSurfaceBorderOptionsAnnot")) 
		-category   ("Menu items.Common.Select.Components")
		-command 	"performSelectNurbsBorder 1"
		SelectSurfaceBorderOptions;

//	Select all input/output.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllInputAnnot"))
	-category   ("Other items.Status Line")
	-command    ("selectAllInputOutput false")
	SelectAllInput;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectAllOutputAnnot"))
	-category   ("Other items.Status Line")
	-command    ("selectAllInputOutput true")
	SelectAllOutput;

//
//	Tools.
//
// ----------------------------------------------------------------------

//	Enter edit mode.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEnterEditModeAnnot"))
	-category   ("Other items.Tools")
	-command    ("ctxEditMode")
	EnterEditMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEnterEditModeAnnotPress"))
	-category   ("Other items.Tools")
	-command    ("ctxEditMode -buttonDown")
	EnterEditModePress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kEnterEditModeAnnotRelease"))
	-category   ("Other items.Tools")
	-command    ("ctxEditMode -buttonUp")
	EnterEditModeRelease;

//	Show manipulators.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowManipulatorsAnnot"))
	-category   ("Other items.Tools")
	-command    ("setToolTo ShowManips")
	ShowManipulators;

// Hide manipulators
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHideManipulatorsAnnot"))
	-category   ("Other items.Tools")
	-command    ("if (`currentCtx` == \"ShowManips\") SelectTool;")
	HideManipulators;

//	Select tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("global string $gSelect; setToolTo $gSelect;")
	SelectTool;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLassoToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("global string $gLasso; setToolTo $gLasso;")
	LassoTool;

//	Select the non sacred tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNonSacredToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("if ($gNonSacredTool != \"\") {ctxCompletion;  " +
	             "setToolTo $gNonSacredTool;}")
	NonSacredTool;

//	Show translate Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTranslateToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildXYZTransMM")
	TranslateToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTranslateToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	TranslateToolMarkingMenuPopDown;

//	Show rotate Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildXYZRotMM")
	RotateToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	RotateToolMarkingMenuPopDown;

//	Show scale Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildXYZScaleMM")
	ScaleToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	ScaleToolMarkingMenuPopDown;

//	Translate with snap Marking Menu
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTranslateToolWithSnapMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildTranslateMM")
	TranslateToolWithSnapMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTranslateToolWithSnapMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("destroySTRSMarkingMenu MoveTool")
	TranslateToolWithSnapMarkingMenuPopDown;

//	Rotate with snap Marking Menu
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolWithSnapMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildRotateMM")
	RotateToolWithSnapMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateToolWithSnapMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("destroySTRSMarkingMenu RotateTool")
	RotateToolWithSnapMarkingMenuPopDown;

//	Scale with snap Marking Menu
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolWithSnapMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildScaleMM")
	ScaleToolWithSnapMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kScaleToolWithSnapMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("destroySTRSMarkingMenu ScaleTool")
	ScaleToolWithSnapMarkingMenuPopDown;

//	Show select object Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildSelectObjectMM")
	SelectToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	SelectToolMarkingMenuPopDown;

//	Show select component Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectComponentToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildSelectComponentMM")
	SelectComponentToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectComponentToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	SelectComponentToolMarkingMenuPopDown;

//	Show select polygon Marking Menu.
//
runTimeCommand  -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPolygonToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildPolyMM")
	SelectPolygonToolMarkingMenu;

runTimeCommand  -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPolygonToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	SelectPolygonToolMarkingMenuPopDown;

//	Show select mask Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectMaskToolMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildSelectMaskMM")
	SelectMaskToolMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectMaskToolMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	SelectMaskToolMarkingMenuPopDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToolOptionsMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("buildSelectMM")
	SelectToolOptionsMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectToolOptionsMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	SelectToolOptionsMarkingMenuPopDown;

//	Time Dragger Tool (aka Virtual Time Slider).
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTimeDraggerToolActivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("storeLastAction( \"restoreLastContext \" + `currentCtx` );" +
	             "setToolTo TimeDragger")
	TimeDraggerToolActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTimeDraggerToolDeactivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("invokeLastAction")
	TimeDraggerToolDeactivate;

//	Move Nearest Picked Key tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveNearestPickedKeyToolActivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("storeLastAction( \"restoreLastContext \" + `currentCtx` );" +
	             "setToolTo directKeySuperContext")
	MoveNearestPickedKeyToolActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveNearestPickedKeyToolDeactivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("invokeLastAction")
	MoveNearestPickedKeyToolDeactivate;

//	Add Key tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddKeyToolActivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("storeLastAction( \"restoreLastContext \" + `currentCtx` );" +
	             "setToolTo setKeySuperContext")
	AddKeyToolActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAddKeyToolDeactivateAnnot"))
	-category   ("Other items.Tools")
	-command    ("invokeLastAction")
	AddKeyToolDeactivate;

//	Insert Key tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyToolActivateAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("storeLastAction( \"restoreLastContext \" + `currentCtx` );" +
	             "setToolTo insertKeySuperContext")
	InsertKeyToolActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kInsertKeyToolDeactivateAnnot"))
	-category   ("Editors.Graph Editor")
	-command    ("invokeLastAction")
	InsertKeyToolDeactivate;

//	Invoke last action.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLastActionToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("invokeLastAction")
	LastActionTool;

//	Complete current tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCompleteCurrentToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("ctxCompletion")
	CompleteCurrentTool;

//	Abort current tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAbortCurrentToolAnnot"))
	-category   ("Other items.Tools")
	-command    ("ctxAbort")
	AbortCurrentTool;

// Unfold3D brush tool
// 

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kActivateUnfold3DBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"Unfold3DBrush\") { " + 
				"	Unfold3DContext -e -ron $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("Unfold3DBrush")	
	U3DBrushSizeOn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateUnfold3DBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"Unfold3DBrush\") { " + 
				"	Unfold3DContext -e -rof $ctx;" +
				" } " +
				"} "
				)	
	-hotkeyCtx ("Unfold3DBrush")	
	U3DBrushSizeOff;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivateUnfold3DBrushPressureAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"Unfold3DBrush\") { " + 
				"	Unfold3DContext -e -pon $ctx;" +
				" } " +
				"} "
				)	
	-hotkeyCtx ("Unfold3DBrush")	
	U3DBrushPressureOn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateUnfold3DBrushPressureAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"Unfold3DBrush\") { " + 
				"	Unfold3DContext -e -pof $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("Unfold3DBrush")	
	U3DBrushPressureOff;


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kActivateSymmetrizeUVBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"SymmetrizeUVBrush\") { " + 
				"	SymmetrizeUVContext -e -ron $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("SymmetrizeUVBrush")	
	SymmetrizeUVBrushSizeOn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateSymmetrizeUVBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"SymmetrizeUVBrush\") { " + 
				"	SymmetrizeUVContext -e -rof $ctx;" +
				" } " +
				"} "
				)	
	-hotkeyCtx ("SymmetrizeUVBrush")	
	SymmetrizeUVBrushSizeOff;

// UV brush tool
// 

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kActivateTexSculptBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				"	texSculptCacheContext -e -adjustSize 1 $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("texSculptCacheContext")
	TexSculptActivateBrushSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateTexSculptBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" source texSculptCacheContextProperties;" +
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				"	texSculptCacheContext -e -adjustSize 0 $ctx;" +
				"	$size = `texSculptCacheContext -q -size $ctx`;" +
				"	texSculptCacheContextSetUnfoldBrushSize( $size );" +
				" } " +
				"} "
				)	
	-hotkeyCtx ("texSculptCacheContext")
	TexSculptDeactivateBrushSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivateTexSculptBrushStrengthAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				"	texSculptCacheContext -e -adjustStrength 1 $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("texSculptCacheContext")					
	TexSculptActivateBrushStrength;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateTexSculptBrushStrengthAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				"	texSculptCacheContext -e -adjustStrength 0 $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("texSculptCacheContext")
	TexSculptDeactivateBrushStrength;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kActivateTexSewBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texCutContext\") { " + 
				"	texCutContext -e -adjustSize 1 $ctx;" +
				" } " +
				"} "
				)
	-hotkeyCtx ("texCutContext")
	TexSewActivateBrushSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateTexSewBrushSizeAnnot"))
	-category	("Other items.Brush Tools")
	-command ( "{" +  
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texCutContext\") { " + 
				"	texCutContext -e -adjustSize 0 $ctx;" +
				" } " +
				"} "
				)	
	-hotkeyCtx ("texCutContext")
	TexSewDeactivateBrushSize;

runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTexSculptCacheUnPinAll"))
		-category   ("Other items.Brush Tools")
		-command    ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				" texSculptCacheContext -e -floodPin 0.0 $ctx;" +
				" } " +
				"} "
				)
		-hotkeyCtx ("texSculptCacheContext")
		TexSculptUnpinAll;

runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kTexSculptCacheInvertPin"))
		-category   ("Other items.Brush Tools")
		-command    ( "{" + 
				" string $ctx = `currentCtx`; " +
				" string $ctxType = `contextInfo -c $ctx`; " +
				" if ($ctxType == \"texSculptCacheContext\") { " + 
				" texSculptCacheContext -e -floodPin -1.0 $ctx;" +
				" } " +
				"} "
				)
		-hotkeyCtx ("texSculptCacheContext")
		TexSculptInvertPin;


//
//	Playback Controls.
//
// ----------------------------------------------------------------------

//	Move to next key.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kNextKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNextKeyAnnot"))
	-image      "timenext.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("currentTime -edit (`playbackOptions -q -slp` ? `findKeyframe -timeSlider -which next` : `findKeyframe -which next`)")
	NextKey;

//	Move to previous key.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPreviousKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPreviousKeyAnnot"))
	-image      "timeprev.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("currentTime -edit (`playbackOptions -q -slp` ? `findKeyframe -timeSlider -which previous` : `findKeyframe -which previous`)")
	PreviousKey;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSelectNextKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectNextKeyAnnot"))
	-category   ("Menu items.Animation.Playback")
	-command    ("selectNextOrPrevKey \"next\"")
	SelectNextKey;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kSelectPreviousKeyLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectPreviousKeyAnnot"))
	-category   ("Menu items.Animation.Playback")
	-command    ("selectNextOrPrevKey \"previous\"")
	SelectPreviousKey;

//	Move to next frame.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kNextFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kNextFrameAnnot"))
	-image      "timestart.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("nextOrPreviousFrame \"next\"")
	NextFrame;

//	Move to previous frame.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPreviousFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPreviousFrameAnnot"))
	-image      "timeend.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("nextOrPreviousFrame \"previous\"")	
	PreviousFrame;


//	Start playback forwards.
//
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPlaybackForwardLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackForwardAnnot"))
	-image "timeplay.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("evalEcho(\"play -forward true\")")
	PlaybackForward;

//	Start playback backwards.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kPlaybackBackwardLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackBackwardAnnot"))
	-image      "timerev.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("evalEcho(\"play -forward false\")")
	PlaybackBackward;

//	Stop playback.
//
runTimeCommand -default true
	 -label (uiRes("m_defaultRunTimeCommands.kPlaybackStopLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackStopAnnot"))
	-image "timestop.png" 
	-category   ("Menu items.Animation.Playback")
	-command    ("evalEcho(\"play -state off\")")
	PlaybackStop;

//	Toggle playback.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackToggleAnnot"))
	-category   ("Other items.Animation.Playback")
	-command    ("togglePlayback")
	PlaybackToggle;

//
//	Navigation commands.
//
// ----------------------------------------------------------------------

//	Turn off Transform no Selection mode.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTransformNoSelectOffToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("selectPref -xformNoSelect false")
	TransformNoSelectOffTool;

//	Turn on Transform no Selection mode.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTransformNoSelectOnToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("selectPref -xformNoSelect true")
	TransformNoSelectOnTool;

//	Tumble Tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTumbleToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("setToolTo tumbleContext")
	TumbleTool;

//	Track Tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTrackToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("setToolTo trackSuperContext")
	TrackTool;

//	Dolly Tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDollyToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("setToolTo dollySuperContext")
	DollyTool;

//	Zoom Tool.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kZoomToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("setToolTo boxZoomSuperContext")
	ZoomTool;

//  2D Pan/Zoom Tool.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPanZoomToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("global string $gPanZoomCtx;\nsetToolTo $gPanZoomCtx")
	PanZoomTool;

//  Walk Tool.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWalkToolAnnot"))
	-category   ("Other items.Navigation")
	-command    ("setToolTo walkContext")
	WalkTool;

//	SteeringWheel
//
if (exists("steeringWheel"))
{
	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kToggleSteeringWheel"))
		-category	("Other items.Navigation")
		-command	("toggleSteeringWheel")
		ToggleSteeringWheel;
}

//
//	Application commands.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowModelingUIAnnot"))
	-category   ("Other items.Menu Sets")
	// find the mode, and set (this should really be a seperate function?)
	-command    ( "if (`menuSet -q -exists modelingMenuSet`) { workingMode modelingMenuSet; } else { warning \"" + (uiRes("m_defaultRunTimeCommands.kModelingWarning")) + "\"; }" )
	ShowModelingUI;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowRiggingUIAnnot"))
	-category   ("Other items.Menu Sets")
	// find the mode, and set (this should really be a seperate function?)
	-command    ( "if (`menuSet -q -exists riggingMenuSet`) { workingMode riggingMenuSet; } else { warning \"" + (uiRes("m_defaultRunTimeCommands.kRiggingWarning")) + "\"; }" )
	ShowRiggingUI;

//	Show Animation UI.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAnimationUIAnnot"))
	-category   ("Other items.Menu Sets")
	// find the mode, and set (this should really be a seperate function?)
	-command    ( "if (`menuSet -q -exists animationMenuSet`) { workingMode animationMenuSet; } else { warning \"" + (uiRes("m_defaultRunTimeCommands.kAnimationWarning")) + "\"; }" )
	ShowAnimationUI;

//	Show Dynamics UI.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowDynamicsUIAnnot"))
	-category   ("Other items.Menu Sets")
	// find the mode, and set (this should really be a seperate function?)
	-command    ( "if (`menuSet -q -exists dynamicsMenuSet`) { workingMode dynamicsMenuSet; } else { warning \"" + (uiRes("m_defaultRunTimeCommands.kDynamicsWarning")) + "\"; }" )
	ShowDynamicsUI;

//	Show Rendering UI.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowRenderingUIAnnot"))
	// find the mode, and set (this should really be a separate function?)
	-command    ( "if (`menuSet -q -exists renderingMenuSet`) { workingMode renderingMenuSet; } else { warning \"" + (uiRes("m_defaultRunTimeCommands.kRenderingWarning")) + "\"; }" )
	-category   ("Other items.Menu Sets")
	ShowRenderingUI;

//	Show All UI.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAllUIAnnot"))
	-category   ("Other items.Menu Sets")
	-command    ("workingMode \"all\"")
	ShowAllUI;

//
//	Miscellaneous.
//
// ----------------------------------------------------------------------

//	Pop down the Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMarkingMenuPopDownAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if (`popupMenu -exists tempMM`) { deleteUI tempMM; }" +
				 "if (`popupMenu -exists tempMM2`) { deleteUI tempMM2; }")
	-showInHotkeyEditor false
	MarkingMenuPopDown;

//	Go to working frame.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToWorkingFrameAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("currentWorkingFrame \"goto\"")
	GoToWorkingFrame;

//	Set current frame to be the working frame.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetWorkingFrameAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("currentWorkingFrame \"store\"")
	SetWorkingFrame;

//	Pop current pane.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPanePopAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("panePop")
	PanePop;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCloseFrontWindowAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("closeFrontWindow")
	CloseFrontWindow;

//	Set keyboard focus to Command Line.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFocusToCommandLineAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("global string $gCommandLine; setFocus $gCommandLine;")
	SetFocusToCommandLine;

//	Set keyboard focus to Numeric Input Line.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetFocusToNumericInputLineAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("global string $gNumericalInputXField; " +
	             "setFocus $gNumericalInputXField;")
	SetFocusToNumericInputLine;

//	Show the Attribute Editor or swap with Channel Box.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowAttributeEditorOrChannelBoxAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if(`isAttributeEditorRaised`){if(!`isChannelBoxVisible`){setChannelBoxVisible(1);} else {raiseChannelBox;}" +
	             "}else{openAEWindow;}")
	ShowAttributeEditorOrChannelBox;

//	Toggle visibility of main menubar.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMainMenubarAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if (`optionVar -q mainWindowMenubarVis`) " +
	             "{setMainMenubarVisible 0;} else {setMainMenubarVisible 1;}")
	ToggleMainMenubar;

//	Toggle visibility of panel menubars.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kTogglePanelMenubarAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if (`optionVar -q allowMenusInPanels`) " +
	             "{toggleMenuBarsInAllPanels 0;} else {toggleMenuBarsInAllPanels 1;}")
	TogglePanelMenubar;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleModelEditorIconbarAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if (`optionVar -q collapseIconBarsInPanels`) " +
	             "{toggleModelEditorBarsInAllPanels 0;} else {toggleModelEditorBarsInAllPanels 1;}")
	ToggleModelEditorBars;

//	Hotbox display style
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFullHotboxDisplayAnnot"))
	-category   ("Other items.Hotbox")
	-command    ("hotBox -dh")
	FullHotboxDisplay;

//	Pixel move.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPixelMoveUpAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pixelMove 0 1")
	PixelMoveUp;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPixelMoveDownAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pixelMove 0 -1")
	PixelMoveDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPixelMoveLeftAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pixelMove -1 0")
	PixelMoveLeft;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPixelMoveRightAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pixelMove 1 0")
	PixelMoveRight;

// View dependant move
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveUpAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("editorDependentMove \"up\"")
	MoveUp;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveDownAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("editorDependentMove \"down\"")
	MoveDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveLeftAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("editorDependentMove \"left\"")
	MoveLeft;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveRightAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("editorDependentMove \"right\"")
	MoveRight;


//	Controller.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateControllersLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateControllersAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreateControllersLongAnnot"))
	-category   ("Other items.Controller")
	-command    ("controller")
	TagAsController;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kCreateControllersParentLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateControllersParentAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreateControllersParentLongAnnot"))
	-category   ("Other items.Controller")
	-command    ("controller -p")
	TagAsControllerParent;

runTimeCommand -default true 
	-label (uiRes("m_defaultRunTimeCommands.kRigCreateControlRigLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kRigCreateControlRigAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kRigCreateControlRigLongAnnot"))
	-category   ("Other items.Controller.HumanIK")
	-command "HIKCharacterControlsTool;hikCreateControlRig;hikOnSwitchContextualTabs" 
	CreateControlRig;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kControllerPickWalkOverride"))
	-category   ("Other items.Controller")
	-command    ("if(`optionVar -exists  ControllerPickWalking`)optionVar -intValue ControllerPickWalking (!`optionVar -q ControllerPickWalking`);else optionVar -intValue ControllerPickWalking 1;")
	PickWalkUseController;

//	Pick walking.
//

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkStopAtTrsAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("if(`optionVar -exists  PickWalkDownStopsAtTransforms`)optionVar -intValue PickWalkDownStopsAtTransforms (!`optionVar -q PickWalkDownStopsAtTransforms`);else optionVar -intValue PickWalkDownStopsAtTransforms 1;")
	PickWalkStopAtTransform;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkUpAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkUp")
	PickWalkUp;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkUpSelectAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalk -d up -r")
	PickWalkUpSelect;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkLeftSelectAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalk -d left -r")
	PickWalkLeftSelect;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkRightSelectAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalk -d right -r")
	PickWalkRightSelect;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkDownSelectAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalk -d down -r")
	PickWalkDownSelect;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkDownAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkDown")
	PickWalkDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkLeftAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkLeft")
	PickWalkLeft;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkRightAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkRight")
	PickWalkRight;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkInAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkIn")
	PickWalkIn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickWalkOutAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("pickWalkOut")
	PickWalkOut;

//	Repeat last action at mouse position.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRepeatLastActionAtMousePositionAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("{float $pos[] = `autoPlace -um`;repeatLast;"
		+ "move $pos[0] $pos[1] $pos[2];}")
	RepeatLastActionAtMousePosition;

//	Go to min frame.
//
runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kGoToMinFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToMinFrameAnnot"))
	-image      "timerew.png" 
	-category   ("Menu items.Animation.Playback")
	-command    ("currentTime -e `playbackOptions -query -min`")
	GoToMinFrame;

runTimeCommand -default true
    -label      (uiRes("m_defaultRunTimeCommands.kGoToMaxFrameLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kGoToMaxFrameAnnot"))
	-image      "timefwd.png"
	-category   ("Menu items.Animation.Playback")
	-command    ("currentTime -e `playbackOptions -query -max`")
	GoToMaxFrame;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kEnabledClipsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kEnabledClipsAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToEnabledClips"
	PlaybackRangeEnabledClips;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangeMinMaxLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangeMinMaxAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToMinMax" 
	PlaybackRangeMinMax;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangePrefsLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangePrefsAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToPrefs" 
	PlaybackRangePrefs;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangeHighlightLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangeHighlightAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToHighlight" 
	PlaybackRangeHighlight;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangeSoundLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangeSoundAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToSound" 
	PlaybackRangeSound;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangeStartEndLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangeStartEndAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho setPlaybackRangeToStartEnd" 
	PlaybackRangeStartEnd;


runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRangeAnimStartEndLbl"))  
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRangeAnimStartEndAnnot")) 
	-category   ("Menu items.Animation.Playback")
	-command "evalEcho playbackOptions -e -min `playbackOptions -q -ast` -max `playbackOptions -q -aet` " 
	PlaybackRangeAnimStartEnd;


runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackFreeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackFreeAnnot")) 
	-category   ("Menu items.Animation.Playback.Playback Looping")
	-command "evalEcho playbackOptions -e -playbackSpeed 0 -maxPlaybackSpeed 0"
	PlaybackFree;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackPefRealtimeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackPefRealtimeAnnot")) 
	-category   ("Menu items.Animation.Playback.Playback Looping")
	-command "evalEcho playbackOptions -e -playbackSpeed 0 -maxPlaybackSpeed 1"
	PlaybackPefRealtime;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackRealtimeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackRealtimeAnnot")) 
	-category   ("Menu items.Animation.Playback.Playback Looping")
	-command "evalEcho playbackOptions -e -playbackSpeed 1"
	PlaybackRealtime;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackLoopContinuousLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackLoopContinuousAnnot")) 
	-image  	"playbackLoopingContinuous.png"
	-category   ("Menu items.Animation.Playback.Playback Speed")			
	-command "evalEcho playbackOptions -loop  \"continuous\"" 
	PlaybackLoopContinuous;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackLoopOnceLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackLoopOnceAnnot")) 
	-image 		"playbackLoopingOnce.png"
	-category   ("Menu items.Animation.Playback.Playback Speed")	
	-command "evalEcho playbackOptions -loop \"once\""
	PlaybackLoopOnce;

runTimeCommand -default true  
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackLoopOscillateLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackLoopOscillateAnnot")) 
	-image 		"playbackLoopingOscillate.png"
	-category   ("Menu items.Animation.Playback.Playback Speed")				
	-command "evalEcho playbackOptions -loop \"oscillate\""
	PlaybackLoopOscillate;

runTimeCommand -default true   
    -label (uiRes("m_defaultRunTimeCommands.kPlaybackSteppedPreviewLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPlaybackSteppedPreviewAnnot"))
	-category   ("Menu items.Animation.Playback")	
	-command "playbackOptions -edit -blockingAnim (!`playbackOptions -q -blockingAnim`) "
	PlaybackSteppedPreview;

//	Marking menu for switching menubar mode.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUIModeMarkingMenuAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("menubarHotkeyMM")
	UIModeMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUIModeMarkingMenuPopDownAnnot"))
	-category   ("Other items.Marking menus")
	-command    ("MarkingMenuPopDown")
	UIModeMarkingMenuPopDown;

//	Cycle IK handle sticky state.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCycleIKHandleStickyStateAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("ikHandleCycleSticky")
	CycleIKHandleStickyState;

//	The following commands change the display smoothness of active (i.e.
//	selected) objects.  They are similar in function to the menu items
//	under "Display->NURBS Smoothness->...", however the menu items can be
//	made to operate on all objects, not just selected ones.  Also, the
//	menu items have option boxes for setting various parameters, whereas
//	the commands below have fixed parameters.
//
//	So, in short, do not remove the below commands thinking that their
//	functionality is already available in the
//	"Display->NURBS Smoothness->..." menu.  The commands are supposed
//	to be there, in addition to the menu items.
//

//	Default Display (for polygon objects)
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDefaultQualityDisplayAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("setDisplaySmoothness 0")
	DefaultQualityDisplay;

//	Low Quality Display.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLowQualityDisplayAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("setDisplaySmoothness 1")
	LowQualityDisplay;

//	Medium Quality Display.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMediumQualityDisplayAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("setDisplaySmoothness 2")
	MediumQualityDisplay;

//	High Quality Display.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHighQualityDisplayAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("setDisplaySmoothness 3")
	HighQualityDisplay;
	
//	Toggle Displacement.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleDisplacementAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("toggleDisplacement")
	ToggleDisplacement;	

//	Quality Display Marking Menu.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kQualityDisplayMarkingMenuAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("buildQualityDisplayMM")
	QualityDisplayMarkingMenu;
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kQualityDisplayMarkingMenuPopDownAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("buildQualityDisplayMM_release")
	QualityDisplayMarkingMenuPopDown;

//	Select Next Intermediate Object
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectNextIntermediatObjectAnnot"))
	-category   ("Other items.Miscellaneous")
	-command    ("cycleIntermediateObjectSibling 1")
	SelectNextIntermediatObject;

//	Enable isolate select.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectIsolateAnnot"))
	-category   ("Other items.Viewport items")
	-command    ( "{" +
			"  string $currentPanel = `getPanel -withFocus`; " +
			"  string $panelType = `getPanel -to $currentPanel`;" +
			"  if ($panelType ==  \"modelPanel\") { " +
			"  if (size(`ls -sl`) > 0) { " +
			"		enableIsolateSelect $currentPanel true;" +
			"	} else { " +
			"		enableIsolateSelect $currentPanel false; " +
			"	}" +
			"  }" +
			"}")
	SelectIsolate;

//
//	Manipulator commands.
//
// ----------------------------------------------------------------------

//	Next manipulator handle.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNextManipulatorHandleAnnot"))
	-category   ("Other items.Tool Manipulators")
	-command    ("shuffleManipHandleIndex -next")
	NextManipulatorHandle;

//	Previous manipulator handle.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPreviousManipulatorHandleAnnot"))
	-category   ("Other items.Tool Manipulators")
	-command    ("shuffleManipHandleIndex -previous")
	PreviousManipulatorHandle;

//	Increase manipulator size.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIncreaseManipulatorSizeAnnot"))
	-category   ("Other items.Tool Manipulators")
	-command    ("manipOptions -r -s 2.0")
	IncreaseManipulatorSize;

//	Increase manipulator size.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDecreaseManipulatorSizeAnnot"))
	-category   ("Other items.Tool Manipulators")
	-command    ("manipOptions -r -s 0.5")
	DecreaseManipulatorSize;

//
//	Hotbox commands.
//
// ----------------------------------------------------------------------

//	Show the Hotbox.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShowHotboxAnnot"))
	-category   ("Other items.Hotbox")
	-command    ("hotBox")
	ShowHotbox;

//	Hide the Hotbox.
//
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kHideHotboxAnnot"))
	-category   ("Other items.Hotbox")
	-command    ("hotBox -release")
	HideHotbox;

//
//	Artisan commands.
//
// ----------------------------------------------------------------------

//	Opacity virtual slider.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyOpacityPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"opacity\"")
	ModifyOpacityPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyOpacityReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyOpacityRelease;

//	Value virtual slider.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyPaintValuePressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"value\"")
	ModifyPaintValuePress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyPaintValueReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyPaintValueRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyStampDepthPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"stamp_depth\"")
	ModifyStampDepthPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyStampDepthReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyStampDepthRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyUVVectorPressAnnot"))
	-category   ("Other items.Artisan")
	-command ("artActivateScreenSlider \"uv_vector\"")
	ModifyUVVectorPress ;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyUVVectorReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command ("artDeactivateScreenSlider")
	ModifyUVVectorRelease ;

//	Paint Operation popup menu.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintOperationMarkingMenuPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artPaintOperationMenu")
	PaintOperationMarkingMenuPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPaintOperationMarkingMenuReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeletePopMenu")
	PaintOperationMarkingMenuRelease;

//	Flood.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFloodSurfacesAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artFloodSurfaces")
	FloodSurfaces;

//	Show Wireframe on/off.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleWireframeInArtisanAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artToggleWireframeDisplay")
	ToggleWireframeInArtisan;

//	Turn color feedback on/off.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleColorFeedbackAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artToggleColorFeedback")
	ToggleColorFeedback;

//	Turn multi color feedback on/off.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleMultiColorFeedbackAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artToggleMultiColorFeedback")
	ToggleMultiColorFeedback;

//	Copy vertex skin weights
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyVertexSkinWeightsAnnot"))
	-category   ("Other items.Artisan")
	-command    ("source artAttrSkinCallback;artAttrSkinWeightCopy;")
	CopyVertexSkinWeights;

//	Paste vertex skin weights
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPasteVertexSkinWeightsAnnot"))
	-category   ("Other items.Artisan")
	-command    ("source artAttrSkinCallback;artAttrSkinWeightPaste;")
	PasteVertexSkinWeights;

//	Prev paint mode
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPrevSkinPaintModeAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artAttrSkinPrevPaintMode")
	PrevSkinPaintMode;

//	Next paint mode
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNextSkinPaintModeAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artAttrSkinNextPaintMode")
	NextSkinPaintMode;


//	Pick color mode.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickColorActivateAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivatePickColorMode")
	PickColorActivate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPickColorDeactivateAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivatePickColorMode")
	PickColorDeactivate;

//	PolyBrush commands
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyBrushMarkingMenuAnnot"))
	-category   ("Other items.Artisan")
	-command    ("polyBrushControl -1 0")
	PolyBrushMarkingMenu;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyBrushMarkingMenuPopDownAnnot"))
	-category   ("Other items.Artisan")
	-command    ("deletePopupMenu")
	PolyBrushMarkingMenuPopDown;

//	Reflection.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleReflectionAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artisanToggleReflection")
	ToggleReflection;

//	Toggle Autosmooth.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleAutoSmoothAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artPuttyToggleAutosmooth")
	ToggleAutoSmooth;

//	Update Reference Surface.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateReferenceSurfaceAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artPuttyUpdateReferenceSurface")
	UpdateReferenceSurface;

//	Update Erase Surface.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdateEraseSurfaceAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artPuttyUpdateEraseSurface")
	UpdateEraseSurface;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptReferenceVectorMarkingMenuPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artPuttyReferenceVectorMarkingMenu")
	SculptReferenceVectorMarkingMenuPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSculptReferenceVectorMarkingMenuReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeletePuttyReferenceVectorPopMenu")
	SculptReferenceVectorMarkingMenuRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivateGlobalScreenSliderAnnot"))
	-category   ("Other items.Artisan")
	-command ("artActivateGlobalScreenSlider")
	ActivateGlobalScreenSlider ;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateGlobalScreenSliderAnnot"))
	-category   ("Other items.Artisan")
	-command ("artDeactivateGlobalScreenSlider")
	DeactivateGlobalScreenSlider ;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kActivateGlobalScreenSliderModeMarkingMenuAnnot"))
	-category   ("Other items.Artisan")
	-command ("artActivateGlobalScreenSliderModeMarkingMenu")
	ActivateGlobalScreenSliderModeMarkingMenu ;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeactivateGlobalScreenSliderModeMarkingMenuAnnot"))
	-category   ("Other items.Artisan")
	-command ("artDeactivateGlobalScreenSliderModeMarkingMenu")
	DeactivateGlobalScreenSliderModeMarkingMenu ;

//
//	Brush Tools.
//
// ----------------------------------------------------------------------

//	Commands for activating/deactivating screen sliders.
//
// New Artisan Tools.
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyUpperRadiusPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"upper_radius\"")
	ModifyUpperRadiusPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyUpperRadiusReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyUpperRadiusRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyLowerRadiusPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"lower_radius\"")
	ModifyLowerRadiusPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyLowerRadiusReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyLowerRadiusRelease;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyDisplacementPressAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artActivateScreenSlider \"displacement\"")
	ModifyDisplacementPress;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kModifyDisplacementReleaseAnnot"))
	-category   ("Other items.Artisan")
	-command    ("artDeactivateScreenSlider")
	ModifyDisplacementRelease;



//
//	Global disk cache commands.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCreateDiskCacheLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDiskCacheAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kCreateDiskCacheLongAnnot"))
	-image "jiggleCache.png"
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performDiskCache true false mcj")
	CreateDiskCache;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateDiskCacheOptionsAnnot"))
	-category   ("Menu items.Modeling.Deform.Paint Weight Tools;Menu items.Rigging.Deform.Paint Weight Tools")
	-command    ("performDiskCache true true mcj")
	CreateDiskCacheOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kGlobalDiskCacheControlLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kGlobalDiskCacheControlAnnot"))
	-longAnnotation (uiRes("m_defaultRunTimeCommands.kGlobalDiskCacheControlLongAnnot"))
	-image "jiggleCacheAttr.png"
	-category   ("Menu items.Modeling.Deform.Prune Membership;Menu items.Rigging.Deform.Prune Membership")
	-command    ("globalDiskCacheControl")
	GlobalDiskCacheControl;

//
//	UV Texture Editor commands.
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPinSelectionAnnot")) 
	-category   ("Editors.UV Editor")
	-command    ("performPolyPinSelectionUVOptions 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	PinSelection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPinSelectionOptionsAnnot")) 
	-category   ("Editors.UV Editor")
	-command    ("performPolyPinSelectionUVOptions 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	PinSelectionOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnpinSelectionAnnot")) 
	-category   ("Editors.UV Editor")
	-command    ("performPolyUnpinSelectionUV")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UnpinSelection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVEditorUnpinAll"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"string $objList[] = stringArrayCatenate(`ls -sl -dag -s -ni`, `ls -hl -dag -shapes -ni`);polyPinUV -op 2 $objList;\")")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorUnpinAll;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVEditorResetAllAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("resetUVEditorUIToDefault")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorResetAllToDefault;	
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVEditorInvertPin"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"string $objList[] = stringArrayCatenate(`ls -sl -dag -s -ni`, `ls -hl -dag -shapes -ni`);polyPinUV -op 3 $objList;\")")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorInvertPin;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVShellAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polySelectBorderShell 0")
	SelectUVShell;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSelectUVBorderAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polySelectBorderShell 1")
	SelectUVBorder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyUVsAnnot")) 
	-category   ("Editors.UV Editor")
	-command    ("polyClipboard -cp -uv")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	CopyUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kPasteUVsAnnot")) 
	-category   ("Editors.UV Editor")
	-command    ("polyClipboard -ps -uv")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	PasteUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNormalizeUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUV normalize 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	NormalizeUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNormalizeUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUV normalize 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	NormalizeUVsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFlipUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUV flip 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	FlipUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kFlipUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUV flip 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	FlipUVsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyRotateUVs 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RotateUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRotateUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyRotateUVs 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RotateUVsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kBestPlaneTexturingToolLbl"))   
	-annotation (uiRes("m_defaultRunTimeCommands.kBestPlaneTexturingToolAnnot"))
	-image "bestPlaneTxt.png"
	-category   ("Editors.UV Editor")
	-command    ("polyBestPlaneTexturingTool")
	BestPlaneTexturingTool;
	
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVAutomaticProjectionLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUVAutomaticProjectionAnnot"))
	-image "polyAutoProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyAutoProj 0")
	UVAutomaticProjection;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVAutomaticProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyAutoProj 1")
	UVAutomaticProjectionOptions;


runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVCameraBasedProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCameraBasedProjectionAnnot"))
	-image "polyCameraUVs.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"0\", \"camera\", \"ls -sl\", \"0\"} \"\";")
	UVCameraBasedProjection;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCameraBasedProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"1\", \"camera\", \"ls -sl\", \"0\"} \"\";")
	UVCameraBasedProjectionOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVCylindricProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCylindricProjectionAnnot"))
	-image "polyCylProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"0\", \"Cylindrical\", \"ls -sl\", \"0\"} \"\";")
	UVCylindricProjection;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCylindricProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"1\", \"Cylindrical\", \"ls -sl\", \"0\"} \"\";")
	UVCylindricProjectionOptions;
	
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVPlanarProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVPlanarProjectionAnnot"))
	-image "polyPlanProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"0\", \"Planar\", \"ls -sl\", \"0\"} \"\";")
	UVPlanarProjection;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVPlanarProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"1\", \"Planar\", \"ls -sl\", \"0\"} \"\";")
	UVPlanarProjectionOptions;
	
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVSphericalProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVSphericalProjectionAnnot"))
	-image "polySphereProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"0\", \"Spherical\", \"ls -sl\", \"0\"} \"\";")
	UVSphericalProjection;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVSphericalProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"1\", \"Spherical\", \"ls -sl\", \"0\"} \"\";")
	UVSphericalProjectionOptions;
	
runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVContourStretchProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVContourStretchProjectionAnnot"))
	-image "polyContourProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"0\", \"Contour\", \"ls -sl\", \"0\"} \"\";")
	UVContourStretchProjection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVContourStretchProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyProjectionArgList \"1\" {\"1\", \"Contour\", \"ls -sl\", \"0\"} \"\";")
	UVContourStretchProjectionOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVNormalBasedProjectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kUVNormalBasedProjectionAnnot"))
	-image "polyNormalProjLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performNormalBasedProjection 0;")
	UVNormalBasedProjection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVNormalBasedProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performNormalBasedProjection 1;")
	UVNormalBasedProjectionOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVStraightenAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyStraightenUVs 0;")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVStraighten;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVStraightenOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyStraightenUVs 1;")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVStraightenOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVOrientShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"texOrientShells\")")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVOrientShells;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVGatherShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"texGatherShells\")")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVGatherShells;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVUnstackShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performUnstackShells 0;")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVUnstackShells;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVUnstackShellsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performUnstackShells 1;")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVUnstackShellsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVStackSimilarShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performStackSimilarShells 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVStackSimilarShells;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVStackSimilarShellsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performStackSimilarShells 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVStackSimilarShellsOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVCreateSnapshotAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performUVSnapshot;")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVCreateSnapshot;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMapUVBorderAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUntangleUV map 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MapUVBorder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMapUVBorderOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUntangleUV map 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MapUVBorderOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRelaxUVShellAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUntangleUV relax 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RelaxUVShell;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRelaxUVShellOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUntangleUV relax 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RelaxUVShellOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOptimizeUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyOptimizeUV 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	OptimzeUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kOptimizeUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyOptimizeUV 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	OptimzeUVsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLayoutUVAnnot"))
	-category	("Editors.UV Editor")
	-command    ("performPolyLayoutUV 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	LayoutUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLayoutUVOptionsAnnot"))
	-category	("Editors.UV Editor")
	-command    ("performPolyLayoutUV 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	LayoutUVOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLayoutUVAlongAnnot"))
	-category	("Editors.UV Editor")
	-command    ("performPolyLayoutUVDirectional 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	LayoutUVAlong;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLayoutUVAlongOptionsAnnot"))
	-category	("Editors.UV Editor")
	-command    ("performPolyLayoutUVDirectional 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	LayoutUVAlongOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGridUVAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyGridUV 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	GridUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kGridUVOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyGridUV 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	GridUVOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCutUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyMapCut e 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	CutUVs;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kAutoSeamUVsLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kAutoSeamUVsAnnot")) 
	-image "polyAutoSeamsLarge.png" 
	-category   ("Editors.UV Editor")
	-command "performPolyAutoSeamUV 0" 
	AutoSeamUVs;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kAutoSeamUVsOptionsAnnot"))  
		-image "polyAutoSeams.png"
		-category   ("Editors.UV Editor")
		-command "performPolyAutoSeamUV 1"  
		AutoSeamUVsOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kCutUVEdgeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kCutUVEdgeAnnot"))
	-image "polyCutUVLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyMapCut e 0")
	CutUVsWithoutHotkey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLayoutUVRectangleAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyUVRectangle v 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	LayoutUVRectangle;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSewUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyMapSew")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	SewUVs;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSewUVEdgeLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSewUVEdgeAnnot"))
	-image "polySewUVLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyMapSew")
	SewUVsWithoutHotkey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMoveSewUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyMapSewMove e 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MoveSewUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyMapDel f 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DeleteUVs;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kDeleteUVLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteUVAnnot"))
	-image "polyMapDel.png"
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyMapDel f 0")
	DeleteUVsWithoutHotkey;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kIncreaseCheckerDensityAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "	string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				 "	int $density = `textureWindow -q -checkerDensity $texWinName[0]`;\n" +
				 "	$density = $density + 1;\n" +
				 "	textureWindow -e -checkerDensity $density $texWinName[0];\n" +
				 "}\n")
	IncreaseCheckerDensity;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDecreaseCheckerDensityAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "	string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +  
				 "	int $density = `textureWindow -q -checkerDensity $texWinName[0]`;\n" +
				 "	$density = ($density <= 1) ? 1 : $density - 1;\n" +
				 "	textureWindow -e -checkerDensity $density $texWinName[0];\n" +
				 "}\n")
	DecreaseCheckerDensity;

	runTimeCommand -default true
		-label (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabUVToolLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabUVToolAnnot"))
		-image "UV_3D_Grab_Brush.png"
		-category   ("Editors.UV Editor")
		-command    ("setMeshSculptTool \"UV\"")
		SetMeshGrabUVTool;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kMeshCacheGrabUVToolOpsAnnot"))
		-category   ("Editors.UV Editor")
		-command    ("SetMeshGrabUVTool; toolPropertyWindow;")
		ShowMeshGrabUVToolOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAutoProjectionAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("polyPerformAction polyAutoProjection f 0")
	-showInHotkeyEditor false
	AutoProjection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAutoProjectionOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyAutoProj 1")
	-showInHotkeyEditor false
	AutoProjectionOptions;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSetCurrentUVSetAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performSetCurrentUVSet 1")
	-showInHotkeyEditor false
	SetCurrentUVSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRenameCurrentUVSetAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performRenameCurrentUVSet 1")
	-showInHotkeyEditor false
	RenameCurrentUVSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDeleteCurrentUVSetAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performDeleteCurrentUVSet 0")
	-showInHotkeyEditor false
	DeleteCurrentUVSet;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kUVSetEditorLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUVSetEditorAnnot"))
	-image "polyUVSetEditor.png"
	-category   ("Editors.UV Editor")
	-command    ("uvSetEditor")
	UVSetEditor;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateEmptyUVSetAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"performCreateUVSet \\\"1\\\" {\\\"0\\\", \\\"uvSetMakeSelectCmd\\\", \\\"0\\\"} \\\"\\\"\")")
	-showInHotkeyEditor false
	CreateEmptyUVSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateEmptyUVSetOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("evalEcho(\"performCreateUVSet \\\"1\\\" {\\\"1\\\", \\\"uvSetMakeSelectCmd\\\", \\\"0\\\"} \\\"\\\"\")")
	-showInHotkeyEditor false
	CreateEmptyUVSetOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyUVsToUVSetAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performCopyCurrentUVSet \"1\" {\"0\", \"ls -selection\", \"0\"} \"\"")
	-showInHotkeyEditor false
	CopyUVsToUVSet;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCopyUVsToUVSetOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performCopyCurrentUVSet \"1\" {\"1\", \"ls -selection\", \"0\"} \"\"")
	-showInHotkeyEditor false
	CopyUVsToUVSetOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignUVAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performTextureViewAlignUVsOptions false")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	AlignUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kAlignUVOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performTextureViewAlignUVsOptions true")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	AlignUVOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWarpImageAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyWarpImage 1")
	WarpImage;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWarpImageOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyWarpImage 1")
	WarpImageOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStraightenUVBorderAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyStraightenUV 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	StraightenUVBorder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStraightenUVBorderOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyStraightenUV 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	StraightenUVBorderOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetrizeUVAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performSymmetrizeUVOptions 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	SymmetrizeUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSymmetrizeUVOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performSymmetrizeUVOptions 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	SymmetrizeUVOptions;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSplitUVLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSplitUVAnnot"))
	-image "polySplitUVsLarge.png"
	-category   ("Editors.UV Editor")
	-command    ("polySplitTextureUV")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	SplitUV;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kMergeUVLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeUVAnnot"))
	-image "polyMergeUV.png"
	-category   ("Editors.UV Editor")
	-command    ("performPolyMergeUV 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MergeUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMergeUVOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyMergeUV 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MergeUVOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnfoldUVAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performUnfold 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UnfoldUV;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnfoldUVOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performUnfold 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UnfoldUVOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateUVsBasedOnCameraAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"0\", \"camera\", \"ls -selection\", \"0\"} \"\"")
	-showInHotkeyEditor false
	CreateUVsBasedOnCamera;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateUVsBasedOnCameraOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"1\", \"camera\", \"ls -selection\", \"0\"} \"\"")
	-showInHotkeyEditor false
	CreateUVsBasedOnCameraOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnitizeUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"0\", \"unitize\", \"ls -sl\", \"0\"} \"\"")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UnitizeUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnitizeUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyForceUVArgList \"1\" {\"1\", \"unitize\", \"ls -sl\", \"0\"} \"\"")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UnitizeUVsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateUVShellAlongBorderAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("createUVShellAlongBorder")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	CreateUVShellAlongBorder;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kSelectUVToolAnnot")) 
	-category   ("Editors.UV Editor")
	-command 	("SelectTool")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	SelectUVTool;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kMoveUVToolAnnot")) 
	-category   ("Editors.UV Editor")
	-command 	("MoveTool")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MoveUVTool;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kRotateUVToolAnnot")) 
	-category   ("Editors.UV Editor")
	-command 	("RotateTool")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RotateUVTool;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kScaleUVToolAnnot")) 
	-category   ("Editors.UV Editor")
	-command 	("ScaleTool")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ScaleUVTool;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kPolyUVsAssignShaderLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPolyUVsAssignShaderAnnot")) 
	-image "polyCheck.png"
	-category   ("Editors.UV Editor")
	-command    ("togglePolyCreateShaderWithMapping")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	TogglePolyUVsCreateShader;

runTimeCommand -default true
	-label (uiRes("m_defaultRunTimeCommands.kSetCutSewUVToolLbl"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kSetCutSewUVToolAnnot")) 
	-longAnnotation	(uiRes("m_defaultRunTimeCommands.kSetCutSewUVToolLongAnnot")) 
	-image "CutSewUVTool.png"
	-category   ("Menu items.Modeling.Mesh Tools")
	-command 	("texCutContext -edit -mode Cut texCutUVContext;setToolTo superCutUVContext")
	SetCutSewUVTool;
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kCutUVs3DAnnot")) 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command 	("polyUVCutCtxAction(1)")
	-hotkeyCtx  ("polyCutUV")
	CutUVs3D;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kSewUVs3DAnnot")) 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command 	("polyUVCutCtxAction(2)")
	-hotkeyCtx  ("polyCutUV")
	SewUVs3D;
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kUnfoldPackUVs3DInCurrentTileAnnot")) 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command 	("polyUVCutCtxAction(3)")
	-hotkeyCtx  ("polyCutUV")
	UnfoldPackUVs3DInCurrentTile;
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kUnfoldPackUVs3DInEmptyTileAnnot")) 
	-category   ("Menu items.Modeling.Mesh Tools")
	-command 	("polyUVCutCtxAction(4)")
	-hotkeyCtx  ("polyCutUV")
	UnfoldPackUVs3DInEmptyTile;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVWireframeAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "	textureWindowSolidMap(1,0);\n" +
				 "  string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`; \n"+
	             "  txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 ); \n"+
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DisplayUVWireframe;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kShadedUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "	textureWindowSolidMap(1,1);\n" +
				 "  string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`; \n"+
				 "  txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 ); \n"+
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DisplayUVShaded;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVDistortionAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "	  string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				 "	  textureWindowToggleUVDistortion( $texWinName[0], \"textureWindow\" );\n" +
				 "	  txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVDistortion;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleTextureShellBordersAnnot"))
	-category   ("Editors.UV Editor")
	-command	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "	  int $borders[] = `polyOptions -q -displayShellBorder`;\n" +
				 "	  float $borderWidth[] = `optionVar -q displayPolyBorderEdgeSize`;\n" +
				 "	  polyOptions -displayShellBorder (!$borders[0]) -sizeBorder $borderWidth[1];\n" +
				 "	  string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				 "	  txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVShellBorder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleTextureBordersAnnot"))
	-category   ("Editors.UV Editor")
	-command	("int $borders[] = `polyOptions -q -displayMapBorder`; " +
				 "float $borderWidth[] = `optionVar -q displayPolyBorderEdgeSize`; " +
				 "polyOptions -displayMapBorder (!$borders[0]) -sizeBorder $borderWidth[1]" )
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleTextureBorder;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayImageAnnot"))
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "	  string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				 "	  textureWindowToggleTextureImage( $texWinName[0], \"textureWindow\" );\n" +
				 "	  txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVTextureImage;

runTimeCommand - default true
	-annotation (uiRes("m_defaultRunTimeCommands.kViewSelectedAnnot"))
	-category("Editors.UV Editor")
	-command("textureEditorToggleIsolateSelect")
	-hotkeyCtx("polyTexturePlacementPanel")
	ToggleUVIsolateViewSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kLoadSetAnnot")) 
	-category   ("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "    string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				 "    optionVar -iv textureWindowShaderFacesMode 2;\n" +
				 "    txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				 "    eval ( \"textureWindow\" + \" -e -useFaceGroup 1 \"+ $texWinName[0] );\n" +
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVIsolateLoadSet;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUVEditorUVPositionHUDAnnot"))
	-category   ("Editors.UV Editor")
	-command    ( "{\n" +
				  "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				  "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				  "    string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				  "    int $display = textureWindowUVEditorUVPositionHUD(0, 0); " +
				  "    textureWindowUVEditorUVPositionHUD(1, !($display)); " +
				  "    txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				  "  }\n" +
				  "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVEditorUVPositionHUD;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUVEditorIsolateSelectHUDAnnot"))
	-category   ("Editors.UV Editor")
	-command    ( "{\n" +
				  "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				  "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				  "    string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				  "    int $display = textureWindowUVEditorIsolateSelectHUD(0, 0); " +
				  "    textureWindowUVEditorIsolateSelectHUD(1, !($display)); " +
				  "    txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				  "  }\n" +
				  "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVEditorIsolateSelectHUD;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUVEditorUVStatisticsHUDAnnot"))
	-category   ("Editors.UV Editor")
	-command    ( "{\n" +
				  "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				  "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				  "   string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" +
				  "   int $display = textureWindowUVEditorDisplayUVStatisticsHUD(0, 0); " +
				  "   textureWindowUVEditorDisplayUVStatisticsHUD(1, !($display)); " +
				  "   txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				  "  }\n" +
				  "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVEditorUVStatisticsHUD;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleUVEditorUVStatisticsHUDOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performTextureViewUVStatisticsHUDOptions 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	ToggleUVEditorUVStatisticsHUDOptions;
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kUVFrameAllAnnot"))
	-category   ("Editors.UV Editor")
	-command	("FrameAll")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorFrameAll;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kUVFrameSelectionAnnot"))
	-category   ("Editors.UV Editor")
	-command	("FrameSelected")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorFrameSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUVEditorToggleTextureBorderDisplayAnnot"))
	-category 	("Editors.UV Editor")
	-command 	("{\n" +
				 "  string $visiblePanels[] = `getPanel -visiblePanels`;\n" +
				 "  if(stringArrayContains(\"polyTexturePlacementPanel1\", $visiblePanels)){\n" +
				 "    string $texWinName[] = `getPanel -sty polyTexturePlacementPanel`;\n" + 
				 "    performTextureViewTextureBordersOptions 0; ToggleTextureBorderDisplay(); \n" + 
				 "    txtWndUpdateEditor( $texWinName[0], \"textureWindow\", \"null\", 101 );\n" +
				 "  }\n" +
				 "}\n")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVEditorToggleTextureBorderDisplay; 

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRandomizeShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performTextureViewRandomizeShellsOptions false")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RandomizeShells;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kRandomizeShellsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performTextureViewRandomizeShellsOptions true")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	RandomizeShellsOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchTogetherAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUVStitchTogether 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	StitchTogether;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kStitchTogetherOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUVStitchTogether 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	StitchTogetherOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDistributeUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyDistributeUVs 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DistributeUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDistributeUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyDistributeUVs 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DistributeUVsOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDistributeShellsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyDistributeShells 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DistributeShells;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kDistributeShellsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyDistributeShells 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	DistributeShellsOptions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchUVsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyMatchUVs 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MatchUVs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kMatchUVsOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyMatchUVs 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	MatchUVsOptions;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapTogetherAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUVSnapPoints 0")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVSnapTogether;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSnapTogetherOptionsAnnot"))
	-category   ("Editors.UV Editor")
	-command    ("performPolyUVSnapPoints 1")
	-hotkeyCtx  ("polyTexturePlacementPanel")
	UVSnapTogetherOptions;
	
runTimeCommand - default true
	- annotation (uiRes("m_defaultRunTimeCommands.kLatticeUVToolAnnot"))
	- category  ("Editors.UV Editor")
	- command   ("ConvertSelectionToUVs;setToolTo texLatticeDeformSuperContext")
	- hotkeyCtx ("polyTexturePlacementPanel")
	LatticeUVTool;

runTimeCommand - default true
	- annotation (uiRes("m_defaultRunTimeCommands.kLatticeUVToolOptionsAnnot"))
	- category  ("Editors.UV Editor")
	- command   ("ConvertSelectionToUVs;setToolTo texLatticeDeformSuperContext;toolPropertyWindow")
	- hotkeyCtx ("polyTexturePlacementPanel")
	LatticeUVToolOptions;
	
//
// Soft Select and Reflection
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResetSoftSelectOptions"))
	-category   ("Other items.Polygon Modeling")
	-command    ("softSelect -softSelectReset")
	ResetSoftSelectOptions;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kResetReflectionOptions"))
	-category   ("Other items.Polygon Modeling")
	-command    ("symmetricModelling -reset")
	ResetReflectionOptions;


//
//	Node Editor commands
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPickWalkUpAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("pickWalkUp")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPickWalkUp;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPickWalkDownAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("pickWalkDown")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPickWalkDown;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPickWalkLeftAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("pickWalkLeft")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPickWalkLeft;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPickWalkRightAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("pickWalkRight")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPickWalkRight;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAllShapesAnnot"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` on on"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphAllShapes;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAllShapesExceptShading"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` on off"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphAllShapesExceptShading;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorNoShapesAnnot"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` off off"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphNoShapes;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorClearGraph"))
	-category	"Editors.Node Editor"
	-command	"nodeEdClearAll `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphClearGraph;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorGraphAddSelected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdAddSelected `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphAddSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRemoveSelected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdRemoveSelected `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphRemoveSelected;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRearrange"))
	-category	"Editors.Node Editor"
	-command	"nodeEdFrameLayout `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphRearrange;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleCreateNodePane"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleCreateNode"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleCreateNodePane;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleSyncedSelection"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleSyncSelection `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleSyncedSelection;


runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorGraphUpstream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdGraph `getCurrentNodeEditor` true false"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphUpstream;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorGraphUpdownstream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdGraph `getCurrentNodeEditor` true true"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphUpDownstream;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorGraphDownstream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdGraph `getCurrentNodeEditor` false true"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphDownstream;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRemoveUnselected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -removeUnselected"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphRemoveUnselected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRemoveUpstream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -removeUpstream"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphRemoveUpstream;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRemoveDownstream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -removeDownstream"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGraphRemoveDownstream;


// Traversal Depth controls
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSetTraversalDepthZero"))
	-category	"Editors.Node Editor"
	-command	"nodeEdSetTraversalDepth `getCurrentNodeEditor` 0"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSetTraversalDepthZero;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorReduceTraversalDepth"))
	-category	"Editors.Node Editor"
	-command	"nodeEdReduceTraversalDepth `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorReduceTraversalDepth;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorIncreaseTraversalDepth"))
	-category	"Editors.Node Editor"
	-command	"nodeEdIncreaseTraversalDepth `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorIncreaseTraversalDepth;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSetTraversalDepthUnlim"))
	-category	"Editors.Node Editor"
	-command	"nodeEdSetTraversalDepth `getCurrentNodeEditor` -1"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSetTraversalDepthUnlim;
	
	
// LOD & Pin Controls
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorHideAttributes"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeViewMode simple"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorHideAttributes;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowConnectedAttrs"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeViewMode connected"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShowConnectedAttrs;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowAllAttrs"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeViewMode all"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShowAllAttrs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowAllCustomAttrs"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeViewMode \"custom:all\""
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShowAllCustomAttrs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowCustomAttrs"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeViewMode custom"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShowCustomAttrs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleNodeTitleMode"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleTitleMode `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleNodeTitleMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleSelectedPins"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -toggleSelectedPins"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleNodeSelectedPins;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleAttrFilter"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -toggleAttrFilter"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleAttrFilter;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleSwatchSize"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -toggleSwatchSize \"\""
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleNodeSwatchSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSetLargeSwatchSize"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeSwatchSize large"
	NodeEditorSetLargeNodeSwatchSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSetSmallSwatchSize"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -nodeSwatchSize small"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSetSmallNodeSwatchSize;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPinSelected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdIntOption `getCurrentNodeEditor` -pinSelectedNodes on"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorPinSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorLayout"))
	-category	"Editors.Node Editor"
	-command	"nodeEdLayout `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorLayout;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorUnpinSelected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdIntOption `getCurrentNodeEditor` -pinSelectedNodes off"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorUnpinSelected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorDeleteNode"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -del"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorDeleteNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectSelectedNodes"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -csn"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectSelectedNodes;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateNodePopup"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -bcn"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorCreateNodePopup;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSelectConnected"))
	-category	"Editors.Node Editor"
	-command	"nodeEdSelect `getCurrentNodeEditor` true true"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSelectConnected;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSelectUpStream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdSelect `getCurrentNodeEditor` true false"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSelectUpStream;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorSelectDownStream"))
	-category	"Editors.Node Editor"
	-command	"nodeEdSelect `getCurrentNodeEditor` false true"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorSelectDownStream;


// Lock current view
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorToggleLockUnlock"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleLockUnlock `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleLockUnlock;

// View menu
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorZoomIn"))
	-category	"Editors.Node Editor"
	-command	"nodeEdFloatOption `getCurrentNodeEditor` -scaleView 1.25"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleZoomIn;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorZoomOut"))
	-category	"Editors.Node Editor"
	-command	"nodeEdFloatOption `getCurrentNodeEditor` -scaleView 0.8"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleZoomOut;

// Tabs menu
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateTabAnnot"))
	-category	"Editors.Node Editor"
	-command	"nodeEdCreateTab `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorCreateTab;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRenameActiveTabAnnot"))
	-category	"Editors.Node Editor"
	-command	"nodeEdRenameTab `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorRenameActiveTab;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCloseActiveTabAnnot"))
	-category	"Editors.Node Editor"
	-command	"nodeEdCloseTab `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorCloseActiveTab;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCloseAllTabs"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -closeAllTabs"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorCloseAllTabs;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRestoreLastClosedTab"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -restoreLastClosedTab"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorRestoreLastClosedTab;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRedockThisTab"))
	-category	"Editors.Node Editor"
	-command	"nodeEdOption `getCurrentNodeEditor` -redockTab"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorRedockTornOffTab;

// Compound menu
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdCreateCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCreateCompound;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateDoWhileCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdCreateDoWhileCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCreateDoWhileCompound;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateForEachCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdCreateForEachCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCreateForEachCompound;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCreateIterateCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdCreateIterateCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCreateIterateCompound;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAddIterationStatePortsAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdAddIterationStatePorts")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorAddIterationStatePorts;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorExportCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdPublishCurrentCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPublishCompound;


// Options menu
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorRenderSwatches"))
	-category	"Editors.Node Editor"
	-command	"nodeEdRenderSwatches `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorRenderSwatches;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAddOnNodeCreate"))
	-category	"Editors.Node Editor"
	-command	"nodeEdAddOnCreate `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorAddOnNodeCreate;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAutoSizeNodes"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -autoSizeNodes ASNI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorAutoSizeNodes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorAdditiveGraphingMode"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -additiveGraphingMode AGMI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorAdditiveGraphingMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectedGraphingMode"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -connectedGraphingMode CGMI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectedGraphingMode;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPinByDefault"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -defaultPinnedState PBDI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorPinByDefault;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectOnCreation"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -connectNodeOnCreation"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectNodeOnCreation;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCopyConnectionsOnPaste"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -copyConnectionsOnPaste"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorCopyConnectionsOnPaste;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectOnDrop"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -connectOnDrop CNOD"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectOnDrop;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorHighlightConnectionsOnNodeSelection"))
	-category	"Editors.Node Editor"
	-command	"nodeEdHighlightConnections `getCurrentNodeEditor`"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorHighlightConnectionsOnNodeSelection;

//Display menu
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShapeMenuStateAll"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` on on"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShapeMenuStateAll;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShapeMenuStateAllExceptShadingGroupMembers"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` on off"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShapeMenuStateAllExceptShadingGroupMembers;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShapeMenuStateNoShapes"))
	-category	"Editors.Node Editor"
	-command	"nodeEdShowShapes `getCurrentNodeEditor` off off"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorShapeMenuStateNoShapes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectionStyleBezier"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -connectionStyle bezier"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectionStyleBezier;
	
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectionStyleStraight"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -connectionStyle straight"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectionStyleStraight;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectionStyleCorner"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -connectionStyle corner"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectionStyleCorner;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConnectionStyleSShape"))
	-category	"Editors.Node Editor"
	-command	"nodeEdStringOption `getCurrentNodeEditor` -connectionStyle sshape"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorConnectionStyleSShape;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorTransforms"))
	-category   "Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -showTransforms STI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorTransforms;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorExtendToShapes"))
	-category   "Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -extendToShapes ETSI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorExtendToShapes;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowUnitConversions"))
	-category	"Editors.Node Editor"
	-command	"nodeEdMenuOption `getCurrentNodeEditor` -showUnitConversions SUCI"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorUnitConversions;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorShowNamespace"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -showNamespace"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleShowNamespace;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorConsistentNodeNameSize"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -consistentNameSize"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleConsistentNodeNameSize;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorUseAssetsAndPublishedAttributes"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -useAssets"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorToggleUseAssetsAndPublishedAttributes;	

// Grid controls

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kNodeEditorToggleGridVisibility"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -gridVisibility"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGridToggleVisibility;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kNodeEditorToggleGridSnap"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -gridSnap"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGridToggleSnap;

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kNodeEditorToggleCrosshairOnEdgeDragging"))
	-category	"Editors.Node Editor"
	-command	"nodeEdToggleOption `getCurrentNodeEditor` -crosshairOnEdgeDragging"
	-hotkeyCtx	"nodeEditorPanel"
	NodeEditorGridToggleCrosshairOnEdgeDragging;

//Copy, Cut and Paste
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCopyAnno"))
	-category	("Editors.Node Editor")
	-command    ("nodeEdCopy")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCopy;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorCutAnno"))
	-category	("Editors.Node Editor")
	-command    ("nodeEdCut")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorCut;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorPasteAnno"))
	-category	("Editors.Node Editor")
	-command    ("nodeEdPaste")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorPaste;

//Explode Compound
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorExplodeCompoundAnnot"))
	-category   ("Editors.Node Editor")
	-command    ("nodeEdExplode")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorExplodeCompound;

//Navigation in and out compounds
runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorDiveIntoCompoundAnno"))
	-category	("Editors.Node Editor")
	-command    ("nodeEdDiveIntoCompound")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorDiveIntoCompound;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kNodeEditorBackToParentAnno"))
	-category	("Editors.Node Editor")
	-command    ("nodeEdBackToParent")
	-hotkeyCtx	("nodeEditorPanel")
	NodeEditorBackToParent;

//
//	Shape Editor commands
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kShapeEditorNewGroupLbl"))  
	-annotation	(uiRes("m_defaultRunTimeCommands.kShapeEditorNewGroupAnnot"))
	-image 		"blendShapeEditor.png" 
	-category	("Editors.Shape Editor")
	-hotkeyCtx	("shapePanel")
	-command	("blendShapeCreateGroupForSelected")
	ShapeEditorNewGroup;
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kShapeEditorDuplicateTargetAnnot"))
	-category	("Editors.Shape Editor")
	-hotkeyCtx	("shapePanel")
	-command	("blendShapeEditorDuplicateTargets")
	ShapeEditorDuplicateTarget;
		
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kShapeEditorDeselectAllAnnot"))
	-category	("Editors.Shape Editor")
	-hotkeyCtx	("shapePanel")
	-command	("SelectNone; shapeEditor -e -cs shapePanel1;")
	ShapeEditorSelectNone;
		
//
//	Pose Editor commands
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kPoseInterpolatorNewGroupAnnot"))
	-category	("Editors.Pose Editor")
	-hotkeyCtx	("posePanel")
	-command	("performInterpolatorCreateGroup {}")
	PoseInterpolatorNewGroup;
		
//
//	What's New Highlighting
//
// ----------------------------------------------------------------------

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWhatsNewHighlightingOnAnnot"))
	-category   ("Other items.What's New Highlighting")
	-command    ("whatsNewHighlight -highlightOn true")
	-showInHotkeyEditor false
	WhatsNewHighlightingOn;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kWhatsNewHighlightingOffAnnot"))
	-category   ("Other items.What's New Highlighting")
	-command    ("whatsNewHighlight -highlightOn false")
	-showInHotkeyEditor false
	WhatsNewHighlightingOff;

	
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToggleVisibilityAndKeepSelectionLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVisibilityAndKeepSelectionAnnot"))
	-category   ("Menu items.Display")
	-command    ("evalEcho(\"toggleVisibilityAndKeepSelection `optionVar -query toggleVisibilityAndKeepSelectionBehaviour`\")")
	ToggleVisibilityAndKeepSelection;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kToggleVisibilityAndKeepSelectionOptions"))
	-category   ("Menu items.Display")
	-command    ("toggleVisibilityAndKeepSelectionOptions")
	ToggleVisibilityAndKeepSelectionOptions;


//
//	Aliases
//
// ----------------------------------------------------------------------

eval("alias evalString eval");

}
miscCommands();



//
//	Hypershade commands
//
// ----------------------------------------------------------------------
global proc string getFocusedHypershade()
{

	string $hyperShadePanel = "hyperShadePanel1";
	if(`scriptedPanel -query -exists $hyperShadePanel` && `panel -q -control $hyperShadePanel` != "")
	{
		return $hyperShadePanel;
	}

	return "";				
}

global proc string getHypershadeNodeEditor()
{
    // if we have an active hypershade we get its node editor.
	if ("" != `getFocusedHypershade`) {
		global string $gHypershadeNodeEditor;
        if (`nodeEditor -exists $gHypershadeNodeEditor`)
            return $gHypershadeNodeEditor;
	}
	return "";		
}


proc hypershadeMenus()
{
    string $context = "hyperShadePanel";
	// Just set the variable the same as $context to avoid replacing
	string $NEcontext = $context;
    string $editorType = "Hypershade";
	string $NEeditorType = "HypershadeNE";


// Material Soloing controls
// -----------------------------------------------

string $category = "Editors.Hypershade.Soloing";

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSoloMaterial"))
	-category   ($category)
	-command    ("{\n" +
				 "	string $nodes[] = `ls -selection`;\n" +
				 "	if(size($nodes) > 0) {\n" +
				 "		soloMaterial -node $nodes[0];\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx	($NEcontext)
	SoloMaterial;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kUnSoloMaterial"))
	-category   ($category)
	-command    ("soloMaterial -unsolo")
	-hotkeyCtx	($NEcontext)
	RemoveMaterialSoloing;

runTimeCommand -default true
	-annotation (uiRes("m_defaultRunTimeCommands.kSoloLastOutput"))
	-category   ($category)
	-command    ("soloMaterial -last")
	-hotkeyCtx	($NEcontext)
	SoloLastOutput;

    // Browser category
    // -------------------------------------------------------------
    
$category = "Editors.Hypershade.Browser";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kRefreshSelectedSwatchesAnnot"))
	-category	($category)
	-command 	("{\n" +
				 "	string $materials[] = `ls -selection -materials`;\n" +
				 "	for ($material in $materials) {\n" +
				 "		updateFileNodeSwatch($material);\n" +
				 "	}\n" +
				 "	string $textures[] = `ls -selection -textures`;\n" +
				 "	for ($texture in $textures) {\n" +
				 "		updateFileNodeSwatch($texture);\n" +
				 "	}\n" +
				 "}\n")
	-hotkeyCtx	($context)
	($editorType + "RefreshSelectedSwatches");

    // Graph category
    // -------------------------------------------------------------

$category = "Editors.Hypershade.Graph";

runTimeCommand -default true
	-annotation	((uiRes("m_defaultRunTimeCommands.kGraphMaterialsOnSelectedObjects")))
	-category	($category)
	-command    ("hyperShadePanelGraphCommand("
					+ "`getFocusedHypershade`"
					+ ", \"graphMaterials\")")
	-hotkeyCtx	($NEcontext)
	($editorType + "GraphMaterialsOnSelectedObjects");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphClearGraph"))
	-category	$category
	-command	"nodeEdClearAll `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphClearGraph");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphAddSelected"))
	-category	$category
	-command	"nodeEdAddSelected `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphAddSelected");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphRemoveSelected"))
	-category	$category
	-command	"nodeEdRemoveSelected `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphRemoveSelected");


runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphRearrange"))
	-category	$category
	-command	"nodeEdFrameLayout `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphRearrange");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphUpstream"))
	-category	$category
	-command	"nodeEdGraph `getHypershadeNodeEditor` true false"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphUpstream");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphUpDownstream"))
	-category	$category
	-command	"nodeEdGraph `getHypershadeNodeEditor` true true"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphUpDownstream");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGraphDownstream"))
	-category	$category
	-command	"nodeEdGraph `getHypershadeNodeEditor` false true"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphDownstream");

// Traversal Depth controls
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorSetTraversalDepthZero"))
	-category	$category
	-command	"nodeEdSetTraversalDepth `getHypershadeNodeEditor` 0"
	-hotkeyCtx	$NEcontext
	($editorType + "SetTraversalDepthZero");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorReduceTraversalDepth"))
	-category	$category
	-command	"nodeEdReduceTraversalDepth `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "ReduceTraversalDepth");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorIncreaseTraversalDepth"))
	-category	$category
	-command	"nodeEdIncreaseTraversalDepth `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "IncreaseTraversalDepth");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorSetTraversalDepthUnlim"))
	-category	$category
	-command	"nodeEdSetTraversalDepth `getHypershadeNodeEditor` -1"
	-hotkeyCtx	$NEcontext
	($editorType + "SetTraversalDepthUnlim");
	
// LOD & Pin Controls
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorHideAttributes"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeViewMode simple"
	-hotkeyCtx	$NEcontext
	($editorType + "HideAttributes");
	
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShowConnectedAttrs"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeViewMode connected"
	-hotkeyCtx	$NEcontext
	($editorType + "ShowConnectedAttrs");
	
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShowAllAttrs"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeViewMode all"
	-hotkeyCtx	$NEcontext
	($editorType + "ShowAllAttrs");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShowCustomAttrs"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeViewMode custom"
	-hotkeyCtx	$NEcontext
	($editorType + "ShowCustomAttrs");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorToggleNodeTitleMode"))
	-category	$category
	-command	"nodeEdToggleTitleMode `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleNodeTitleMode");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorDeleteNodes"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -del"
	-hotkeyCtx	$NEcontext
	($editorType + "DeleteNodes");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorGraphRemoveUnselected"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -removeUnselected"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphRemoveUnselected");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorGraphRemoveUpstream"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -removeUpstream"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphRemoveUpstream");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorGraphRemoveDownstream"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -removeDownstream"
	-hotkeyCtx	$NEcontext
	($editorType + "GraphRemoveDownstream");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("PickWalkUp"))
	-category 	($category)
	-command    ("pickWalkUp")
	-hotkeyCtx	($NEcontext)
	($editorType + "PickWalkUp");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("PickWalkDown"))
	-category 	($category)
	-command    ("pickWalkDown")
	-hotkeyCtx	($NEcontext)
	($editorType + "PickWalkDown");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("PickWalkLeft"))
	-category 	($category)
	-command    ("pickWalkLeft")
	-hotkeyCtx	($NEcontext)
	($editorType + "PickWalkLeft");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("PickWalkRight"))
	-category 	($category)
	-command    ("pickWalkRight")
	-hotkeyCtx	($NEcontext)
	($editorType + "PickWalkRight");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorToggleAttrFilter"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -toggleAttrFilter"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleAttrFilter");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorToggleNodeSwatchSize"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -toggleSwatchSize \"\""
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleNodeSwatchSize");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorSetLargeNodeSwatchSize"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeSwatchSize large"
	-hotkeyCtx	$NEcontext
	($editorType + "SetLargeNodeSwatchSize");

runTimeCommand -default true
	-annotation (getRunTimeCommandAnnotation("NodeEditorSetSmallNodeSwatchSize"))
	-category	$category
	-command	"nodeEdStringOption `getHypershadeNodeEditor` -nodeSwatchSize small"
	-hotkeyCtx	$NEcontext
	($editorType + "SetSmallNodeSwatchSize");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorPinSelected"))
	-category	$category
	-command	"nodeEdIntOption `getHypershadeNodeEditor` -pinSelectedNodes on"
	-hotkeyCtx	$NEcontext
	($editorType + "PinSelected");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorUnpinSelected"))
	-category	$category
	-command	"nodeEdIntOption `getHypershadeNodeEditor` -pinSelectedNodes off"
	-hotkeyCtx	$NEcontext
	($editorType + "UnpinSelected");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorSelectConnected"))
	-category	$category
	-command	"nodeEdSelect `getHypershadeNodeEditor` true true"
	-hotkeyCtx	$NEcontext
	($editorType + "SelectConnected");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorSelectUpStream"))
	-category	$category
	-command	"nodeEdSelect `getHypershadeNodeEditor` true false"
	-hotkeyCtx	$NEcontext
	($editorType + "SelectUpStream");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorSelectDownStream"))
	-category	$category
	-command	"nodeEdSelect `getHypershadeNodeEditor` false true"
	-hotkeyCtx	$NEcontext
	($editorType + "SelectDownStream");

// View menu
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorToggleZoomIn"))
	-category	$category
	-command	"nodeEdFloatOption `getHypershadeNodeEditor` -scaleView 1.25"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleZoomIn");
	
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorToggleZoomOut"))
	-category	$category
	-command	"nodeEdFloatOption `getHypershadeNodeEditor` -scaleView 0.8"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleZoomOut");

// Tabs menu
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorCreateTab"))
	-category	$category
	-command	"nodeEdCreateTab `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "CreateTab");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorRenameActiveTab"))
	-category	$category
	-command	"nodeEdRenameTab `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "RenameActiveTab");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorCloseActiveTab"))
	-category	$category
	-command	"nodeEdCloseTab `getHypershadeNodeEditor`"
	-hotkeyCtx	$NEcontext
	($editorType + "CloseActiveTab");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorCloseAllTabs"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -closeAllTabs"
	-hotkeyCtx	$NEcontext
	($editorType + "CloseAllTabs");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorRestoreLastClosedTab"))
	-category	$category
	-command	"nodeEdOption `getHypershadeNodeEditor` -restoreLastClosedTab"
	-hotkeyCtx	$NEcontext
	($editorType + "RestoreLastClosedTab");

//Display menu
runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShapeMenuStateAll"))
	-category	$category
	-command	"nodeEdShowShapes `getHypershadeNodeEditor` on on"
	-hotkeyCtx	$NEcontext
	($editorType + "ShapeMenuStateAll");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShapeMenuStateAllExceptShadingGroupMembers"))
	-category	$category
	-command	"nodeEdShowShapes `getHypershadeNodeEditor` on off"
	-hotkeyCtx	$NEcontext
	($editorType + "ShapeMenuStateAllExceptShadingGroupMembers");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorShapeMenuStateNoShapes"))
	-category	$category
	-command	"nodeEdShowShapes `getHypershadeNodeEditor` off off"
	-hotkeyCtx	$NEcontext
	($editorType + "ShapeMenuStateNoShapes");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorToggleShowNamespace"))
	-category	$category
	-command	"nodeEdToggleOption `getHypershadeNodeEditor` -showNamespace"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleShowNamespace");	

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorToggleUseAssetsAndPublishedAttributes"))
	-category	$category
	-command	"nodeEdToggleOption `getHypershadeNodeEditor` -useAssets"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleUseAssetsAndPublishedAttributes");	

// Grid controls

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGridToggleVisibility"))
	-category	$category
	-command	"nodeEdToggleOption `getHypershadeNodeEditor` -gridVisibility"
	-hotkeyCtx	$NEcontext
	($editorType + "GridToggleVisibility");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGridToggleSnap"))
	-category	$category
	-command	"nodeEdToggleOption `getHypershadeNodeEditor` -gridSnap"
	-hotkeyCtx	$NEcontext
	($editorType + "GridToggleSnap");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("NodeEditorGridToggleCrosshairOnEdgeDragging"))
	-category	$category
	-command	"nodeEdToggleOption `getHypershadeNodeEditor` -crosshairOnEdgeDragging"
	-hotkeyCtx	$NEcontext
	($editorType + "ToggleCrosshairOnEdgeDragging");

    // Tabs category
    // -------------------------------------------------------------

    $category = "Editors.Hypershade.Tabs";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeCreateNewTabAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"createNewTab\")")
	-hotkeyCtx	($context)
	($editorType + "CreateNewTab");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeMoveTabUpAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"moveTabUp\")")
	-hotkeyCtx	($context)
	($editorType + "MoveTabUp");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeMoveTabDownAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"moveTabDown\")")
	-hotkeyCtx	($context)
	($editorType + "MoveTabDown");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeMoveTabLeftAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"moveTabLeft\")")
	-hotkeyCtx	($context)
	($editorType + "MoveTabLeft");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeMoveTabRightAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"moveTabRight\")")
	-hotkeyCtx	($context)
	($editorType + "MoveTabRight");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRenameTabAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"renameTab\")")
	-hotkeyCtx	($context)
	($editorType + "RenameTab");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRemoveTabAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"removeTab\")")
	-hotkeyCtx	($context)
	($editorType + "RemoveTab");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRevertToDefaultTabsAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"revertToDefaultTabs\")")
	-hotkeyCtx	($context)
	($editorType + "RevertToDefaultTabs");

    // Disk Tab Options category
    // -------------------------------------------------------------

    $category = "Editors.Hypershade.Tabs.Disk Tab Options";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeShowDirectoriesOnlyAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"showDirectoriesOnly\")")
	-hotkeyCtx	($context)
	($editorType + "ShowDirectoriesOnly");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeShowDirectoriesAndFilesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"showDirectoriesAndFiles\")")
	-hotkeyCtx	($context)
	($editorType + "ShowDirectoriesAndFiles");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRefreshFileListingAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"refreshFileListing\")")
	-hotkeyCtx	($context)
	($editorType + "RefreshFileListing");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRefreshSelectedSwatchesOnDiskAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"refreshSelectedSwatches\")")
	-hotkeyCtx	($context)
	($editorType + "RefreshSelectedSwatchesOnDisk");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRefreshAllSwatchesOnDiskAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"refreshAllSwatches\")")
	-hotkeyCtx	($context)
	($editorType + "RefreshAllSwatchesOnDisk");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeGenerateSwatchFilesForImagesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"saveSwatchesToDisk\")")
	-hotkeyCtx	($context)
	($editorType + "SaveSwatchesToDisk");


    $category = "Editors.Hypershade.Options.Display";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeNoShapesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"displayNoShapes\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayNoShapes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAllShapesExceptShadingGroupMembersAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"displayInterestingShapes\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayInterestingShapes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAllShapesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"displayAllShapes\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAllShapes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDisplayTransformToggleAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"toggleTransformDisplay\")")
	-hotkeyCtx	($context)
	($editorType + "ToggleTransformDisplay");



$category = "Editors.Hypershade.File";


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeImportShadingNetwork"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"import\")")
	-hotkeyCtx	($context)
	($editorType + "Import");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeExportSelectedNetworkAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"exportSelectedNetwork\")")
	-hotkeyCtx	($context)
	($editorType + "ExportSelectedNetwork");



$category = "Editors.Hypershade.Edit";


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"delete\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteSelected");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteUnusedNodesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteUnusedNodes\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteUnusedNodes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteDuplicateShadingNetworkAnnot"))
	-category	($category)
	-command    ("removeDuplicateShadingNetworks( 1 )")
	-hotkeyCtx	($context)
	($editorType + "DeleteDuplicateShadingNetworks");




$category = "Editors.Hypershade.Edit.DeleteByType";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeShadingGroupsAndMaterialsAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteShadingGroupsAndMaterials\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllShadingGroupsAndMaterials");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteAllTextures"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"DeleteTextures\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllTextures");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteallLights"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteLights\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllLights");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteallUtilityNodes"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteUtilities\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllUtilities");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeCamerasandImagePlanesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteCamerasAndImagePlanes\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllCamerasAndImagePlanes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeDeleteallBakeSets"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"deleteBakeSets\")")
	-hotkeyCtx	($context)
	($editorType + "DeleteAllBakeSets");



$category = "Editors.Hypershade.Edit";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRevertSelectedSwatchesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"revertSelectedSwatches\")")
	-hotkeyCtx	($context)
	($editorType + "RevertSelectedSwatches");



$category = "Editors.Hypershade.Edit.Select All by Type";


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectShadingGroupsAndMaterialsAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectShadingGroupsAndMaterials\")")
	-hotkeyCtx	($context)
	($editorType + "SelectShadingGroupsAndMaterials");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectAllTexturesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectTextures\")")
	-hotkeyCtx	($context)
	($editorType + "SelectTextures");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectAllLightsAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectLights\")")
	-hotkeyCtx	($context)
	($editorType + "SelectLights");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectAllUtilityNodesAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectUtilities\")")
	-hotkeyCtx	($context)
	($editorType + "SelectUtilities");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectAllCamerasandImagePlaneAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectCamerasAndImagePlanes\")")
	-hotkeyCtx	($context)
	($editorType + "SelectCamerasAndImagePlanes");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectAllBakeSetsAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"selectBakeSets\")")
	-hotkeyCtx	($context)
	($editorType + "SelectBakeSets");



$category = "Editors.Hypershade.Edit";


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectObjectsWithMaterials"))
	-category	($category)
	-command    ("hyperShade -objects \"\"")
	-hotkeyCtx	($context)
	($editorType + "SelectObjectsWithMaterials");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSelectMaterialsFromObjects"))
	-category	($category)
	-command    ("hyperShade -smn \"\"")
	-hotkeyCtx	($context)
	($editorType + "SelectMaterialsFromObjects");



$category = "Editors.Hypershade.Edit.Duplicate";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeShadingNetworkAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"duplicateShadingNetwork\")")
	-hotkeyCtx	($context)
	($editorType + "DuplicateShadingNetwork");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeWithoutNetworkAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"duplicateWithoutNetwork\")")
	-hotkeyCtx	($context)
	($editorType + "DuplicateWithoutNetwork");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeWithConnectionsToNetworkAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"duplicateWithConnections\")")
	-hotkeyCtx	($context)
	($editorType + "DuplicateWithConnections");



$category = "Editors.Hypershade.Edit";


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeConvertToFileTextureAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"convertToFileTexture\")")
	-hotkeyCtx	($context)
	($editorType + "ConvertToFileTexture");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeConvertToFileTextureDlgAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"convertToFileTextureOptionBox\")")
	-hotkeyCtx	($context)
	($editorType + "ConvertToFileTextureOptionBox");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeConvertPSDToLayeredTextureAnnot"))
	-category	($category)
	-command    ("hypergraphConvertSelectedPsdNodesToLT")
	-hotkeyCtx	($context)
	($editorType + "ConvertPSDToLayeredTexture");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeConvertPSDToFileTextureAnnot"))
	-category	($category)
	-command    ("hypergraphConvertSelectedPsdNodesToFile")
	-hotkeyCtx	($context)
	($editorType + "ConvertPSDToFileTexture");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeCreatePSDNetworkAnnot"))
	-category	($category)
	-command    ("photoShopPaintTex")
	-hotkeyCtx	($context)
	($editorType + "CreatePSDFile");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeEditPSDNetworkAnnot"))
	-category	($category)
	-command    ("photoshopEditTexture")
	-hotkeyCtx	($context)
	($editorType + "EditPSDFile");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeUpdatePSDNetworksAnnot"))
	-category	($category)
	-command    ("psdUpdateTextures")
	-hotkeyCtx	($context)
	($editorType + "UpdatePSDNetworks");


runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("CreateContainer"))
	-category	($category)
	-command    ("hyperShadePanelGraphCommand("
					+ "`getFocusedHypershade`"
					+ ", \"createContainer\")")
	-hotkeyCtx	($context)
	($editorType + "CreateAsset");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("CreateContainerOptions"))
	-category	($category)
	-command    ("CreateContainerOptions")
	-hotkeyCtx	($context)
	($editorType + "CreateContainerOptions");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("TransferAttributeValues"))
	-category	($category)
	-command    ("TransferAttributeValues")
	-hotkeyCtx	($context)
	($editorType + "TransferAttributeValues");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("TransferAttributeValuesOptions"))
	-category	($category)
	-command    ("TransferAttributeValuesOptions")
	-hotkeyCtx	($context)
	($editorType + "TransferAttributeValuesOptions");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation("PublishConnections"))
	-category	($category)
	-command    ("PublishConnections")
	-hotkeyCtx	($context)
	($editorType + "PublishConnections");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRemoveAssetAnnot"))
	-category	($category)
	-command    ("hyperShadePanelGraphCommand("
					+ "`getFocusedHypershade`"
					+ ", \"removeContainer\")")
	-hotkeyCtx	($context)
	($editorType + "RemoveAsset");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeCollapseAssetAnnot"))
	-category	($category)
	-command    ("hyperShadePanelGraphCommand("
					+ "`getFocusedHypershade`"
					+ ", \"collapseContainer\")")
	-hotkeyCtx	($context)
	($editorType + "CollapseAsset");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeExpandAssetAnnot"))
	-category	($category)
	-command    ("hyperShadePanelGraphCommand("
					+ "`getFocusedHypershade`"
					+ ", \"expandContainer\")")
	-hotkeyCtx	($context)
	($editorType + "ExpandAsset");


runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation ("EditTexture"))
	-category	($category)
	-command    ("EditTexture")
	-hotkeyCtx	($context)
	($editorType + "EditTexture");




runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation ("TestTexture"))
	-category	($category)
	-command    ("TestTexture")
	-hotkeyCtx	($context)
	($editorType + "TestTexture");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation ("TestTextureOptions"))
	-category	($category)
	-command    ("TestTextureOptions")
	-hotkeyCtx	($context)
	($editorType + "TestTextureOptions");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation ("RenderTextureRange"))
	-category	($category)
	-command    ("RenderTextureRange")
	-hotkeyCtx	($context)
	($editorType + "RenderTextureRange");

runTimeCommand -default true
	-annotation	(getRunTimeCommandAnnotation ("RenderTextureRangeOptions"))
	-category	($category)
	-command    ("RenderTextureRangeOptions")
	-hotkeyCtx	($context)
	($editorType + "RenderTextureRangeOptions");




$category = "Editors.Hypershade.View";

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeFrameAllAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"frameAll\")")
	-hotkeyCtx	($context)
	($editorType + "FrameAll");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeFrameSelectedAnnot"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"frameSelected\")")
	-hotkeyCtx	($context)
	($editorType + "FrameSelected");



runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsIcons"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"asIcons\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsIcons");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsList"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"asList\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsList");


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsSmallSwatches"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"smallIcons\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsSmallSwatches");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsMediumSwatches"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"mediumIcons\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsMediumSwatches");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsLargeSwatches"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"largeIcons\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsLargeSwatches");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAsExtraLargeSwatches"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"superIcons\")")
	-hotkeyCtx	($context)
	($editorType + "DisplayAsExtraLargeSwatches");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSortByName"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"byName\")")
	-hotkeyCtx	($context)
	($editorType + "SortByName");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSortByType"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"byType\")")
	-hotkeyCtx	($context)
	($editorType + "SortByType");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSortByTime"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"byTime\")")
	-hotkeyCtx	($context)
	($editorType + "SortByTime");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeSortReverse"))
	-category	($category)
	-command    ("hyperShadePanelMenuCommand("
					+ "`getFocusedHypershade`"
					+ ", \"reverseOrder\")")
	-hotkeyCtx	($context)
	($editorType + "SortReverseOrder");

$category = "Editors.Hypershade.Window";
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeBrowserWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenBrowserWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenBrowserWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadePropertyEditorWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenPropertyEditorWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenPropertyEditorWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeMaterialViewerWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenMaterialViewerWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenMaterialViewerWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeCreateWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenCreateWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenCreateWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeBinsWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenBinsWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenBinsWindow");
		
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeModelEditorWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenModelEditorWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenModelEditorWindow");
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeRenderViewWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenRenderViewWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenRenderViewWindow");
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeOutlinerWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenOutlinerWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenOutlinerWindow");
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeUVEditorWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenUVEditorWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenUVEditorWindow");
	
runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeGraphEditorWindowAnnot"))
	-category	($category)
	-command    ("hypershadeOpenGraphEditorWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenGraphEditorWindow");


runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeAttributeSpreadSheetAnnot"))
	-category	($category)
	-command    ("hypershadeOpenSpreadSheetWindow("
					+ "`getFocusedHypershade`"
					+ ", true)")
	-hotkeyCtx	($context)
	($editorType + "OpenSpreadSheetWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadekConnectionEditorAnnot"))
	-category	($category)
	-command    ("connectWindow 0 \"\" \"\"")
	-hotkeyCtx	($context)
	($editorType + "OpenConnectWindow");

runTimeCommand -default true
	-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeConnectSelectedAnnot"))
	-category	($category)
	-command    ("string $sel[] = `ls -sl`; connectWindowWith $sel[0] $sel[1]")
	-hotkeyCtx	($context)
	($editorType + "ConnectSelected");

string $shaderDebugging = `getenv MAYA_HYPERSHADE_SHADER_DEBUGGING`;
if ( $shaderDebugging != "" )
{
	runTimeCommand -default true
		-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeShaderSourceWindowAnnot"))
		-category	($category)
		-command    ("hypershadeOpenShaderSourceWindow("
						+ "`getFocusedHypershade`"
						+ ", true)")
		-hotkeyCtx	($NEcontext)
		($editorType + "OpenShaderSourceWindow");

	runTimeCommand -default true
		-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeFragmentSourceWindowAnnot"))
		-category	($category)
		-command    ("hypershadeOpenFragmentSourceWindow("
						+ "`getFocusedHypershade`"
						+ ", true)")
		-hotkeyCtx	($NEcontext)
		($editorType + "OpenFragmentSourceWindow");

	runTimeCommand -default true
		-annotation	(uiRes("m_defaultRunTimeCommands.kHypershadeFragmentEditorWindowAnnot"))
		-category	($category)
		-command    ("ogs -fe shaders")
		-hotkeyCtx	($NEcontext)
		($editorType + "OpenFragmentEditorWindow");
}

//	Toon Menu
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateModLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateModAnnot")) 
	-image      "toonLineModifier.png"
	-category   ("Menu items.Rendering.Toon;Menu items.Modeling.Generate")
	-command    ("createLineModifier")
	CreateLineModifier;

runTimeCommand -default true 
    -label (uiRes("m_defaultRunTimeCommands.kPfxSetLineModifierObjectLbl"))
	-annotation (uiRes("m_defaultRunTimeCommands.kPfxSetLineModifierObjecteAnnot"))
	-category   ("Menu items.Modeling.Generate")
	-command "setLineModifierFillObject"
	PfxSetLineModifierObject;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kReverseSurfLbl")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kReverseSurfAnnot")) 
	-image      "toonReverseSurfaces.png"
	-category   ("Menu items.Rendering.Toon")
	-command    ("reverseToonObjects 0")
	ReverseToonObjects;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kToonToPoly")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kToonToPolyAnnot")) 
	-image      "toonToPolygons.png"
	-category   ("Menu items.Rendering.Toon")
	-command    ("PaintEffectsToPoly")
	ConvertPaintEffectsToPoly;

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kPaintToPolyOptions")) 
		-category   ("Menu items.Rendering.Toon")
		-command    ("PaintEffectsToPolyOptions")
		ConvertPaintEffectsToPolyOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAssignBrush")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAssignBrushAnnot")) 
	-image      "toonAssignPfxBrush.png"
	-category   ("Menu items.Rendering.Toon")
	-command    ("assignBrushToPfxToon")
	AssignBrushToPfxToon;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kGetToon")) 
	-annotation (getRunTimeCommandAnnotation("GetToonExample"))
	-image      "toonGetExample.png"
	-category   ("Menu items.Rendering.Toon")
	-command    ("GetToonExample")
	GetCartoonExample;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLineWidth")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLineWidthAnnot"))
	-image      "toonPaintWidth.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"lineWidthMap\" \"Line Width\"")
	PaintToonLineWidth;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLineOffset")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLineOffsetAnnot"))
	-image      "toonPaintOffset.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"lineOffsetMap\" \"Line Offset\" ")
	PaintToonLineOffset;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLineOpacity")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kLineOpacityAnnot"))
	-image      "toonPaintOpacity.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"lineOpacityMap\" \"Line Opacity\" ")
	PaintToonLineOpacity;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kProfileColor")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kProfileColorAnnot"))
	-image      "toonPaintProfileColor.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"profileColor\" \"Profile Color\" ")
	PaintToonProfileColor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreateColor")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreateColorAnnot"))
	-image      "toonPaintCreaseColor.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"creaseColor\" \"Crease Color\" ")
	PaintToonCreaseColor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBorderColor")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBorderColorAnnot"))
	-image      "toonPaintBorderColor.png"
	-category   ("Menu items.Rendering.Toon.Painting")
	-command    ("paintToonAttribute \"borderColor\" \"Border Color\" ")
	PaintToonBorderColor;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSolid")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSolidAnnot"))
	-image      "toonSolid.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"solid\"")
	AssignToonShaderSolid;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kLightTwoTone")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kTwoToneAnnot"))
	-image      "toonLightAngle2.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"lightAngle\"")
	AssignToonShaderLightAngle;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBrightTwoTone")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBrightTwoToneAnnot"))
	-image      "toonBrightness2.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"shadedBrightness\"")
	AssignToonShaderShadedBrightness;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kBrightThreeTone")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kBrightThreeToneAnnot"))
	-image      "toonBrightness3.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"threeToneBrightness\"")
	AssignToonShaderThreeToneBrightness;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDark")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDarkAnnot"))
	-image      "toonDarkProfile.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"darkProfile\"")
	AssignToonShaderDarkProfile;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRim")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRimAnnot"))
	-image      "toonRimLight.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"rimLight\"")
	AssignToonShaderRimLight;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCircle")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCircleAnnot"))
	-image      "toonCircleHigh.png"
	-category   ("Menu items.Rendering.Toon.Assign Fill Shader")
	-command    ("assignToonShader \"circleHighlight\"")
	AssignToonShaderCircleHighlight;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kNewOutline")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kNewOutlineAnnot"))
	-image      "toonAddOutline.png"
	-category   ("Menu items.Rendering.Toon.Assign Outline")
	-command    ("assignNewPfxToon")
	AssignNewPfxToon;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRemoveOutline")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRemoveOutlineAnnot"))
	-image      "toonRemoveOutline.png"
	-category   ("Menu items.Rendering.Toon.Assign Outline")
	-command    ("removePfxToonOutlines")
	RemoveNewPfxToon;	


//	Render Menu
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSetNURBSTessellation")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kSetNURBSTessellationAnnotation")) 
	-category   ("Menu items.Rendering.Render")
	-command    ("performTessellationSetup 0")
	PerformTessellationSetup;	

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kSetNURBSTessellationOptionBoxAnnotation")) 
		-category   ("Menu items.Rendering.Render")
		-command    ("performTessellationSetup 1")
		PerformTessellationSetupOptions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kExportPrecompositing"))
	-annotation (uiRes("m_defaultRunTimeCommands.kExportPrecompositingAnn"))	
	-category   ("Menu items.Rendering.Render")
	-image 		"toxikicon.png"
	-command    ("performPrecompExport 0")
	PerformPrecompExport;	

	runTimeCommand -default true
		-annotation (uiRes("m_defaultRunTimeCommands.kExportPrecompositingOptAnn"))
		-category   ("Menu items.Rendering.Render")
		-command    ("performPrecompExport 1")
		PerformPrecompExportOptions;


runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCreatePSDNetwork")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCreatePSDNetworkAnnotation")) 
	-category   ("Menu items.Rendering.Texturing")
	-image 		"createPsdNetwork.png"
	-command    ("photoShopPaintTex")
	CreatePSDTextureItem;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kEditPSDNetwork")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kEditPSDNetworkAnnotation")) 
	-category   ("Menu items.Rendering.Texturing")
	-image 		"editPsdNetwork.png"
	-command    ("photoshopEditTexture")
	EditPSDTextureItem;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kUpdatePSDNetworks")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kUpdatePSDNetworksAnnotation")) 
	-category   ("Menu items.Rendering.Texturing")
	-image 		"updatePsdNetwork.png"
	-command    ("psdUpdateTextures")
	UpdatePSDTextureItem;	

//	nHair Display Menu
//
runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kAllCurves")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kAllCurvesAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayAll.png"
	-command    ("displayHairCurves \"all\" 1")
	DisplayHairCurves;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kDisplayCurrPos")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kDisplayCurrPosAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayCurrent.png"
	-command    ("displayHairCurves \"current\" 1")
	DisplayCurrentHairCurves;	

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStart"))
	-annotation (uiRes("m_defaultRunTimeCommands.kStartAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayStart.png"
	-command    ("displayHairCurves \"start\" 1")
	DisplayHairCurvesStart;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRest")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRestAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayRest.png"
	-command    ("displayHairCurves \"rest\" 1")
	DisplayHairCurvesRestPosition;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCurrAndStart")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCurrAndStartAnnot"))   
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayCurrentStart.png"
	-command    ("displayHairCurves \"currentAndStart\" 1")
	DisplayHairCurvesCurrentAndStart;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kCurrAndRest")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kCurrAndRestAnnot"))    
	-category   ("Menu items.Dynamics.nHair.Display")
	-image 		"hairDisplayCurrentRest.png"
	-command    ("displayHairCurves \"currentAndRest\" 1")
	DisplayHairCurvesCurrentAndRest;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartFromCurrent")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStartFromCurrentAnnot"))    
	-category   ("Menu items.Dynamics.nHair.Set Start Position")
	-image 		"hairStartFromCurrent.png"
	-command    ("setSelectedHairCurves \"current\" \"start\"")
	SetHairStartPositionFromCurrent;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartFromRest")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStartFromRestAnnot"))    
	-category   ("Menu items.Dynamics.nHair.Set Start Position")
	-image 		"hairStartFromRest.png"
	-command    ("setSelectedHairCurves \"rest\" \"start\"")
	SetHairStartPositionFromRest;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRestFromStart")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRestFromStartAnnot"))    
	-category   ("Menu items.Dynamics.nHair.Set Rest Position")
	-image 		"hairRestFromStart.png"
	-command    ("setSelectedHairCurves \"start\" \"rest\"")
	SetHairRestPositionFromStart;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRestFromCurrent")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRestFromCurrentAnnot"))   
	-category   ("Menu items.Dynamics.nHair.Set Rest Position")
	-image 		"hairRestFromCurrent.png"
	-command    ("setSelectedHairCurves \"current\" \"rest\"")
	SetHairRestPositionFromCurrent;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kFollicles")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kFolliclesAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertFollicles.png"
	-command    ("convertHairSelection \"follicles\"")
	ConvertHairSelectionToFollicles;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartCurves")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStartCurvesAnnot")) 
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertStart.png"
	-command    ("convertHairSelection \"startCurves\"")
	ConvertHairSelectionToStartCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRestCurves")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRestCurvesAnnot")) 
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertRest.png"
	-command    ("convertHairSelection \"restCurves\"")
	ConvertHairSelectionToRestCurves;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kConvertCurrPos")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kConvertCurrPosAnnot")) 
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertCurrent.png"
	-command    ("convertHairSelection \"current\"")
	ConvertHairSelectionToCurrentPositions;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHairSystems")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHairSystemsAnnot")) 
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertHairSystem.png"
	-command    ("convertHairSelection \"hairSystems\"")
	ConvertHairSelectionToHairSystems;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kHairConstraints")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kHairConstraintsAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertHairSystem.png"
	-command    ("convertHairSelection \"constraints\"")
	ConvertHairSelectionToConstraints;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartCurveEnd")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStartCurveEndAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertStartEndCVs.png"
	-command    ("convertHairSelection \"startCurveEndCvs\"")
	ConvertHairSelectionToStartCurveEndCVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kRestCurveEnd")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kRestCurveEndAnnot"))  
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertRestEndCVs.png"
	-command    ("convertHairSelection \"restCurveEndCvs\"")
	ConvertHairSelectionToRestCurveEndCVs;

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kStartRestEnd")) 
	-annotation (uiRes("m_defaultRunTimeCommands.kStartRestEndAnnot")) 
	-category   ("Menu items.Dynamics.nHair.Convert Selection")
	-image 		"hairConvertStartRestEndCVs.png"
	-command    ("convertHairSelection \"startAndRestEndCvs\"")
	ConvertHairSelectionToStartAndRestCurveEndCVs;

}

runTimeCommand -default true
	-label 		(uiRes("m_defaultRunTimeCommands.kSearchEngine"))
	-annotation (uiRes("m_defaultRunTimeCommands.kSearchEngineAnnot"))
	-category "Menu items.Help"
	-image "searchEngine.png"
	-commandLanguage "mel"
	-command ("python(\"import maya.app.TTF.window; maya.app.TTF.window.showWindow()\");")
	SearchEngine;


runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kCreateTimeSliderBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kCreateTimeSliderBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.bookmarkManager import CreateBookmarkDialog; cb = CreateBookmarkDialog(); cb.show()\")")
    -image      "createBookmark.png"
	CreateTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kQuickCreateTimeSliderBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kQuickCreateTimeSliderBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import createBookmark; createBookmark()\")")
	QuickCreateTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kFrameSliderBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kFrameTimeSliderBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import frameBookmarkAtCurrentTime; frameBookmarkAtCurrentTime()\")")
    -image      "frameBookmark.png"
	FrameTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kSelectNextBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kSelectNextBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import selectNextBookmarkAtCurrentTime; selectNextBookmarkAtCurrentTime()\")")
	NextTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kSelectPreviousBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kSelectPreviousBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import selectPreviousBookmarkAtCurrentTime; selectPreviousBookmarkAtCurrentTime()\")")
	PreviousTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kFrameNextBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kFrameNextBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import frameNextBookmarkAtCurrentTime; frameNextBookmarkAtCurrentTime()\")")
    -image      "nextBookmark.png"
	FrameNextTimeSliderBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kFramePreviousBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kFramePreviousBookmarkAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import framePreviousBookmarkAtCurrentTime; framePreviousBookmarkAtCurrentTime()\")")
    -image      "previousBookmark.png"
	FramePreviousTimeSliderBookmark;


runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kDeleteBookmarks"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteBookmarksAnnotation"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import deleteBookmarkAtCurrentTime; deleteBookmarkAtCurrentTime()\")")
    -image      "delete.png"
	DeleteCurrentBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kDeleteAllBookmarks"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteAllBookmarksAnnotation"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import deleteAllBookmark; deleteAllBookmark()\")")
	DeleteAllBookmarks;


runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kShowBookmarkManager"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kShowBookmarkManagerAnnot"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.bookmarkManager import showBookmarkManager; showBookmarkManager()\")")
	BookmarkManager;


runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kTimeSliderBookmarkVisibility"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kTimeSliderBookmarkVisibilityTip"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import toggleBookmarkVisibility; toggleBookmarkVisibility()\")")
	ToggleBookmarkVisibility;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kEditTimeSliderBookmarkVisibility"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kEditTimeSliderBookmarkVisibilityTip"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.bookmarkManager import editCurrentBookmark; editCurrentBookmark()\")")
	EditBookmark;

runTimeCommand -default true
	-label		(uiRes("m_defaultRunTimeCommands.kUpdateTimeSliderBookmark"))
	-annotation	(uiRes("m_defaultRunTimeCommands.kUpdateTimeSliderBookmarkTip"))
	-category	"Other items.Time Slider Bookmarks"
	-plugin 	"timeSliderBookmark"
	-command	("python(\"from maya.plugin.timeSliderBookmark.timeSliderBookmark import updateBookmarkAtCurrentTime; updateBookmarkAtCurrentTime()\")")
    -image      "updateBookmark.png"
	UpdateBookmarkWithSelection;


// Hypershade commands
//
// ----------------------------------------------------------------------

hypershadeMenus();

proc stereoMenus(){
	runTimeCommand -default true
		-label  	(uiRes("m_defaultRunTimeCommands.kCustomStereoRigLbl"))
		-annotation (uiRes("m_defaultRunTimeCommands.kCustomStereoRigAnnot"))
		-category 	"Menu items.Stereo"
		-command 	"python(\"from maya.app.stereo import stereoRigToolEditor; stereoRigToolEditor.customRigEditor()\")"
		CreateStereoRig;
	
	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kCustomStereoMultiRig"))
		-annotation (uiRes("m_defaultRunTimeCommands.kCustomStereoMultiRigAnnot"))
		-category 	"Menu items.Stereo"
		-command 	"python(\"from maya.app.stereo import cameraSetTool; cameraSetTool.createIt()\")"
		CreateMultiStereoRig;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kStereoMakeLinks"))
		-annotation (uiRes("m_defaultRunTimeCommands.kStereoMakeLinksAnnon"))
		-category 	"Menu items.Stereo"
		-command 	"python(\"from maya.app.stereo import stereoCameraSets; stereoCameraSets.makeLinks()\")"
		MakeStereoLinks;

	runTimeCommand -default true
		-label 		(uiRes("m_defaultRunTimeCommands.kStereoBreakLinks"))
		-annotation (uiRes("m_defaultRunTimeCommands.kStereoBreakLinksAnnon"))
		-category 	"Menu items.Stereo"
		-command 	"python(\"from maya.app.stereo import stereoCameraSets; stereoCameraSets.breakLinks()\")"
		BreakStereoRigs;
}
stereoMenus();

// Finally, call the runTimeCommands registered with the env variable (plug-ins, etc)
runEnvRunTimeCommandFiles();

//
// --- TTF Tag and Keyword additions : Begin ---
//
proc ttfTagsAndKeywords(){
// TTF Keywords
string $kw_Clear = (uiRes("m_defaultRunTimeCommands.kKw_Clear"));
string $kw_Scene_Explorer = (uiRes("m_defaultRunTimeCommands.kKw_Scene_Explorer"));
string $kw_Lister = (uiRes("m_defaultRunTimeCommands.kKw_Lister"));
string $kw_Find = (uiRes("m_defaultRunTimeCommands.kKw_Find"));
string $kw_Distance = (uiRes("m_defaultRunTimeCommands.kKw_Distance"));
string $kw_Selected = (uiRes("m_defaultRunTimeCommands.kKw_Selected"));
string $kw_Bone = (uiRes("m_defaultRunTimeCommands.kKw_Bone"));
string $kw_IK = (uiRes("m_defaultRunTimeCommands.kKw_IK"));
string $kw_Kinematics = (uiRes("m_defaultRunTimeCommands.kKw_Kinematics"));
string $kw_Armature = (uiRes("m_defaultRunTimeCommands.kKw_Armature"));
string $kw_detach = (uiRes("m_defaultRunTimeCommands.kKw_detach"));
string $kw_trim = (uiRes("m_defaultRunTimeCommands.kKw_trim"));
string $kw_strip = (uiRes("m_defaultRunTimeCommands.kKw_strip"));
string $kw_morph = (uiRes("m_defaultRunTimeCommands.kKw_morph"));
string $kw_Corrective_Smooth = (uiRes("m_defaultRunTimeCommands.kKw_Corrective_Smooth"));
string $kw_FFD = (uiRes("m_defaultRunTimeCommands.kKw_FFD"));
string $kw_Warp = (uiRes("m_defaultRunTimeCommands.kKw_Warp"));
string $kw_Mesh_Deform = (uiRes("m_defaultRunTimeCommands.kKw_Mesh_Deform"));
string $kw_Surface_Deform = (uiRes("m_defaultRunTimeCommands.kKw_Surface_Deform"));
string $kw_PSD = (uiRes("m_defaultRunTimeCommands.kKw_PSD"));
string $kw_Nonlinear = (uiRes("m_defaultRunTimeCommands.kKw_Nonlinear"));
string $kw_Displace = (uiRes("m_defaultRunTimeCommands.kKw_Displace"));
string $kw_Morph = (uiRes("m_defaultRunTimeCommands.kKw_Morph"));
string $kw_create_hair = (uiRes("m_defaultRunTimeCommands.kKw_create_hair"));
string $kw_create_fur = (uiRes("m_defaultRunTimeCommands.kKw_create_fur"));
string $kw_groom = (uiRes("m_defaultRunTimeCommands.kKw_groom"));
string $kw_style = (uiRes("m_defaultRunTimeCommands.kKw_style"));
string $kw_xgen = (uiRes("m_defaultRunTimeCommands.kKw_xgen"));
string $kw_hair = (uiRes("m_defaultRunTimeCommands.kKw_hair"));
string $kw_fur = (uiRes("m_defaultRunTimeCommands.kKw_fur"));
string $kw_save_hair = (uiRes("m_defaultRunTimeCommands.kKw_save_hair"));
string $kw_cache_hair = (uiRes("m_defaultRunTimeCommands.kKw_cache_hair"));
string $kw_create_hair_cache = (uiRes("m_defaultRunTimeCommands.kKw_create_hair_cache"));
string $kw_export_hair = (uiRes("m_defaultRunTimeCommands.kKw_export_hair"));
string $kw_load_hair = (uiRes("m_defaultRunTimeCommands.kKw_load_hair"));
string $kw_import_hair = (uiRes("m_defaultRunTimeCommands.kKw_import_hair"));
string $kw_delete_hair_cache = (uiRes("m_defaultRunTimeCommands.kKw_delete_hair_cache"));
string $kw_disable_hair_cache = (uiRes("m_defaultRunTimeCommands.kKw_disable_hair_cache"));
string $kw_individual_hairs = (uiRes("m_defaultRunTimeCommands.kKw_individual_hairs"));
string $kw_long = (uiRes("m_defaultRunTimeCommands.kKw_long"));
string $kw_short = (uiRes("m_defaultRunTimeCommands.kKw_short"));
string $kw_cards = (uiRes("m_defaultRunTimeCommands.kKw_cards"));
string $kw_strips = (uiRes("m_defaultRunTimeCommands.kKw_strips"));
string $kw_select_hair = (uiRes("m_defaultRunTimeCommands.kKw_select_hair"));
string $kw_add = (uiRes("m_defaultRunTimeCommands.kKw_add"));
string $kw_remove = (uiRes("m_defaultRunTimeCommands.kKw_remove"));
string $kw_thicken = (uiRes("m_defaultRunTimeCommands.kKw_thicken"));
string $kw_thin = (uiRes("m_defaultRunTimeCommands.kKw_thin"));
string $kw_rip_cloth = (uiRes("m_defaultRunTimeCommands.kKw_rip_cloth"));
string $kw_cloth_initial_state = (uiRes("m_defaultRunTimeCommands.kKw_cloth_initial_state"));
string $kw_settle = (uiRes("m_defaultRunTimeCommands.kKw_settle"));
string $kw_pin_cloth = (uiRes("m_defaultRunTimeCommands.kKw_pin_cloth"));
string $kw_constrain_cloth = (uiRes("m_defaultRunTimeCommands.kKw_constrain_cloth"));
string $kw_attach_cloth = (uiRes("m_defaultRunTimeCommands.kKw_attach_cloth"));
string $kw_cache_cloth = (uiRes("m_defaultRunTimeCommands.kKw_cache_cloth"));
string $kw_save_cloth = (uiRes("m_defaultRunTimeCommands.kKw_save_cloth"));
string $kw_constrain_cloth_vertices = (uiRes("m_defaultRunTimeCommands.kKw_constrain_cloth_vertices"));
string $kw_start_position = (uiRes("m_defaultRunTimeCommands.kKw_start_position"));
string $kw_intitial_state = (uiRes("m_defaultRunTimeCommands.kKw_intitial_state"));
string $kw_cloth = (uiRes("m_defaultRunTimeCommands.kKw_cloth"));
string $kw_pants = (uiRes("m_defaultRunTimeCommands.kKw_pants"));
string $kw_clothing = (uiRes("m_defaultRunTimeCommands.kKw_clothing"));
string $kw_cape = (uiRes("m_defaultRunTimeCommands.kKw_cape"));
string $kw_curtain = (uiRes("m_defaultRunTimeCommands.kKw_curtain"));
string $kw_flag = (uiRes("m_defaultRunTimeCommands.kKw_flag"));
string $kw_shirt = (uiRes("m_defaultRunTimeCommands.kKw_shirt"));
string $kw_rope = (uiRes("m_defaultRunTimeCommands.kKw_rope"));
string $kw_undo_cloth = (uiRes("m_defaultRunTimeCommands.kKw_undo_cloth"));
string $kw_revert_cloth = (uiRes("m_defaultRunTimeCommands.kKw_revert_cloth"));
string $kw_cloth_collider = (uiRes("m_defaultRunTimeCommands.kKw_cloth_collider"));
string $kw_fire = (uiRes("m_defaultRunTimeCommands.kKw_fire"));
string $kw_streak = (uiRes("m_defaultRunTimeCommands.kKw_streak"));
string $kw_fireworks = (uiRes("m_defaultRunTimeCommands.kKw_fireworks"));
string $kw_bomb = (uiRes("m_defaultRunTimeCommands.kKw_bomb"));
string $kw_explosion = (uiRes("m_defaultRunTimeCommands.kKw_explosion"));
string $kw_particle_flow = (uiRes("m_defaultRunTimeCommands.kKw_particle_flow"));
string $kw_blobby = (uiRes("m_defaultRunTimeCommands.kKw_blobby"));
string $kw_place_particles = (uiRes("m_defaultRunTimeCommands.kKw_place_particles"));
string $kw_single_particles = (uiRes("m_defaultRunTimeCommands.kKw_single_particles"));
string $kw_cotton = (uiRes("m_defaultRunTimeCommands.kKw_cotton"));
string $kw_create_particles = (uiRes("m_defaultRunTimeCommands.kKw_create_particles"));
string $kw_shoot_particles = (uiRes("m_defaultRunTimeCommands.kKw_shoot_particles"));
string $kw_move_particles = (uiRes("m_defaultRunTimeCommands.kKw_move_particles"));
string $kw_particle_volume = (uiRes("m_defaultRunTimeCommands.kKw_particle_volume"));
string $kw_particle_fill = (uiRes("m_defaultRunTimeCommands.kKw_particle_fill"));
string $kw_trigger_collisions = (uiRes("m_defaultRunTimeCommands.kKw_trigger_collisions"));
string $kw_effect = (uiRes("m_defaultRunTimeCommands.kKw_effect"));
string $kw_tears = (uiRes("m_defaultRunTimeCommands.kKw_tears"));
string $kw_laser = (uiRes("m_defaultRunTimeCommands.kKw_laser"));
string $kw_snow = (uiRes("m_defaultRunTimeCommands.kKw_snow"));
string $kw_dust = (uiRes("m_defaultRunTimeCommands.kKw_dust"));
string $kw_wave = (uiRes("m_defaultRunTimeCommands.kKw_wave"));
string $kw_Select = (uiRes("m_defaultRunTimeCommands.kKw_Select"));
string $kw_Sampling = (uiRes("m_defaultRunTimeCommands.kKw_Sampling"));
string $kw_Frame_Range = (uiRes("m_defaultRunTimeCommands.kKw_Frame_Range"));
string $kw_Resolution = (uiRes("m_defaultRunTimeCommands.kKw_Resolution"));
string $kw_Dimension = (uiRes("m_defaultRunTimeCommands.kKw_Dimension"));
string $kw_Format = (uiRes("m_defaultRunTimeCommands.kKw_Format"));
string $kw_Motion_Blur = (uiRes("m_defaultRunTimeCommands.kKw_Motion_Blur"));
string $kw_AOV = (uiRes("m_defaultRunTimeCommands.kKw_AOV"));
string $kw_Move = (uiRes("m_defaultRunTimeCommands.kKw_Move"));
string $kw_Rotate = (uiRes("m_defaultRunTimeCommands.kKw_Rotate"));
string $kw_Scale = (uiRes("m_defaultRunTimeCommands.kKw_Scale"));
string $kw_Reset = (uiRes("m_defaultRunTimeCommands.kKw_Reset"));
string $kw_point_helper = (uiRes("m_defaultRunTimeCommands.kKw_point_helper"));
string $kw_dummy = (uiRes("m_defaultRunTimeCommands.kKw_dummy"));
string $kw_null = (uiRes("m_defaultRunTimeCommands.kKw_null"));
string $kw_Reference = (uiRes("m_defaultRunTimeCommands.kKw_Reference"));
string $kw_Image = (uiRes("m_defaultRunTimeCommands.kKw_Image"));
string $kw_Redo = (uiRes("m_defaultRunTimeCommands.kKw_Redo"));
string $kw_Display = (uiRes("m_defaultRunTimeCommands.kKw_Display"));
string $kw_Repath = (uiRes("m_defaultRunTimeCommands.kKw_Repath"));
string $kw_Re_45_path = (uiRes("m_defaultRunTimeCommands.kKw_Re_45_path"));
string $kw_Missing_File = (uiRes("m_defaultRunTimeCommands.kKw_Missing_File"));
string $kw_Relink = (uiRes("m_defaultRunTimeCommands.kKw_Relink"));
string $kw_Re_45_link = (uiRes("m_defaultRunTimeCommands.kKw_Re_45_link"));
string $kw_Link = (uiRes("m_defaultRunTimeCommands.kKw_Link"));
string $kw_External = (uiRes("m_defaultRunTimeCommands.kKw_External"));
string $kw_animate = (uiRes("m_defaultRunTimeCommands.kKw_animate"));
string $kw_move = (uiRes("m_defaultRunTimeCommands.kKw_move"));
string $kw_motion = (uiRes("m_defaultRunTimeCommands.kKw_motion"));
string $kw_start = (uiRes("m_defaultRunTimeCommands.kKw_start"));
string $kw_animation = (uiRes("m_defaultRunTimeCommands.kKw_animation"));
string $kw_movement = (uiRes("m_defaultRunTimeCommands.kKw_movement"));
string $kw_key = (uiRes("m_defaultRunTimeCommands.kKw_key"));
string $kw_key_frame = (uiRes("m_defaultRunTimeCommands.kKw_key_frame"));
string $kw_translate  = (uiRes("m_defaultRunTimeCommands.kKw_translate"));
string $kw_position = (uiRes("m_defaultRunTimeCommands.kKw_position"));
string $kw_pose = (uiRes("m_defaultRunTimeCommands.kKw_pose"));
string $kw_time = (uiRes("m_defaultRunTimeCommands.kKw_time"));
string $kw_timing = (uiRes("m_defaultRunTimeCommands.kKw_timing"));
string $kw_key_pose = (uiRes("m_defaultRunTimeCommands.kKw_key_pose"));
string $kw_axis = (uiRes("m_defaultRunTimeCommands.kKw_axis"));
string $kw_forward = (uiRes("m_defaultRunTimeCommands.kKw_forward"));
string $kw_backward = (uiRes("m_defaultRunTimeCommands.kKw_backward"));
string $kw_side = (uiRes("m_defaultRunTimeCommands.kKw_side"));
string $kw_transform = (uiRes("m_defaultRunTimeCommands.kKw_transform"));
string $kw_up = (uiRes("m_defaultRunTimeCommands.kKw_up"));
string $kw_down = (uiRes("m_defaultRunTimeCommands.kKw_down"));
string $kw_left = (uiRes("m_defaultRunTimeCommands.kKw_left"));
string $kw_right = (uiRes("m_defaultRunTimeCommands.kKw_right"));
string $kw_adjust = (uiRes("m_defaultRunTimeCommands.kKw_adjust"));
string $kw_progress = (uiRes("m_defaultRunTimeCommands.kKw_progress"));
string $kw_rotate = (uiRes("m_defaultRunTimeCommands.kKw_rotate"));
string $kw_roll = (uiRes("m_defaultRunTimeCommands.kKw_roll"));
string $kw_turn = (uiRes("m_defaultRunTimeCommands.kKw_turn"));
string $kw_spin = (uiRes("m_defaultRunTimeCommands.kKw_spin"));
string $kw_curve = (uiRes("m_defaultRunTimeCommands.kKw_curve"));
string $kw_large = (uiRes("m_defaultRunTimeCommands.kKw_large"));
string $kw_big = (uiRes("m_defaultRunTimeCommands.kKw_big"));
string $kw_bigger = (uiRes("m_defaultRunTimeCommands.kKw_bigger"));
string $kw_smaller = (uiRes("m_defaultRunTimeCommands.kKw_smaller"));
string $kw_small = (uiRes("m_defaultRunTimeCommands.kKw_small"));
string $kw_size = (uiRes("m_defaultRunTimeCommands.kKw_size"));
string $kw_enlarge = (uiRes("m_defaultRunTimeCommands.kKw_enlarge"));
string $kw_expand = (uiRes("m_defaultRunTimeCommands.kKw_expand"));
string $kw_extend = (uiRes("m_defaultRunTimeCommands.kKw_extend"));
string $kw_grow = (uiRes("m_defaultRunTimeCommands.kKw_grow"));
string $kw_magnify = (uiRes("m_defaultRunTimeCommands.kKw_magnify"));
string $kw_minimize = (uiRes("m_defaultRunTimeCommands.kKw_minimize"));
string $kw_increase = (uiRes("m_defaultRunTimeCommands.kKw_increase"));
string $kw_decrease = (uiRes("m_defaultRunTimeCommands.kKw_decrease"));
string $kw_inbetween = (uiRes("m_defaultRunTimeCommands.kKw_inbetween"));
string $kw_in_between = (uiRes("m_defaultRunTimeCommands.kKw_in_between"));
string $kw_detail = (uiRes("m_defaultRunTimeCommands.kKw_detail"));
string $kw_link = (uiRes("m_defaultRunTimeCommands.kKw_link"));
string $kw_bridge = (uiRes("m_defaultRunTimeCommands.kKw_bridge"));
string $kw_driver = (uiRes("m_defaultRunTimeCommands.kKw_driver"));
string $kw_driven = (uiRes("m_defaultRunTimeCommands.kKw_driven"));
string $kw_associate = (uiRes("m_defaultRunTimeCommands.kKw_associate"));
string $kw_effector = (uiRes("m_defaultRunTimeCommands.kKw_effector"));
string $kw_link_attributes = (uiRes("m_defaultRunTimeCommands.kKw_link_attributes"));
string $kw_relationships = (uiRes("m_defaultRunTimeCommands.kKw_relationships"));
string $kw_before = (uiRes("m_defaultRunTimeCommands.kKw_before"));
string $kw_previous = (uiRes("m_defaultRunTimeCommands.kKw_previous"));
string $kw_step_backward = (uiRes("m_defaultRunTimeCommands.kKw_step_backward"));
string $kw_back = (uiRes("m_defaultRunTimeCommands.kKw_back"));
string $kw_step_back = (uiRes("m_defaultRunTimeCommands.kKw_step_back"));
string $kw_step_forward = (uiRes("m_defaultRunTimeCommands.kKw_step_forward"));
string $kw_jump = (uiRes("m_defaultRunTimeCommands.kKw_jump"));
string $kw_jump_forward = (uiRes("m_defaultRunTimeCommands.kKw_jump_forward"));
string $kw_step = (uiRes("m_defaultRunTimeCommands.kKw_step"));
string $kw_flatten = (uiRes("m_defaultRunTimeCommands.kKw_flatten"));
string $kw_wait = (uiRes("m_defaultRunTimeCommands.kKw_wait"));
string $kw_keep = (uiRes("m_defaultRunTimeCommands.kKw_keep"));
string $kw_autokey = (uiRes("m_defaultRunTimeCommands.kKw_autokey"));
string $kw_auto_key = (uiRes("m_defaultRunTimeCommands.kKw_auto_key"));
string $kw_key_chain = (uiRes("m_defaultRunTimeCommands.kKw_key_chain"));
string $kw_joint_chain = (uiRes("m_defaultRunTimeCommands.kKw_joint_chain"));
string $kw_joint = (uiRes("m_defaultRunTimeCommands.kKw_joint"));
string $kw_connect = (uiRes("m_defaultRunTimeCommands.kKw_connect"));
string $kw_control = (uiRes("m_defaultRunTimeCommands.kKw_control"));
string $kw_handle = (uiRes("m_defaultRunTimeCommands.kKw_handle"));
string $kw_blend = (uiRes("m_defaultRunTimeCommands.kKw_blend"));
string $kw_chain = (uiRes("m_defaultRunTimeCommands.kKw_chain"));
string $kw_convert = (uiRes("m_defaultRunTimeCommands.kKw_convert"));
string $kw_change = (uiRes("m_defaultRunTimeCommands.kKw_change"));
string $kw_person = (uiRes("m_defaultRunTimeCommands.kKw_person"));
string $kw_trax = (uiRes("m_defaultRunTimeCommands.kKw_trax"));
string $kw_set = (uiRes("m_defaultRunTimeCommands.kKw_set"));
string $kw_remap = (uiRes("m_defaultRunTimeCommands.kKw_remap"));
string $kw_mapping = (uiRes("m_defaultRunTimeCommands.kKw_mapping"));
string $kw_transfer = (uiRes("m_defaultRunTimeCommands.kKw_transfer"));
string $kw_move_animation = (uiRes("m_defaultRunTimeCommands.kKw_move_animation"));
string $kw_source = (uiRes("m_defaultRunTimeCommands.kKw_source"));
string $kw_target = (uiRes("m_defaultRunTimeCommands.kKw_target"));
string $kw_map = (uiRes("m_defaultRunTimeCommands.kKw_map"));
string $kw_group = (uiRes("m_defaultRunTimeCommands.kKw_group"));
string $kw_combine = (uiRes("m_defaultRunTimeCommands.kKw_combine"));
string $kw_group_characters = (uiRes("m_defaultRunTimeCommands.kKw_group_characters"));
string $kw_timewarp = (uiRes("m_defaultRunTimeCommands.kKw_timewarp"));
string $kw_speed_ramping = (uiRes("m_defaultRunTimeCommands.kKw_speed_ramping"));
string $kw_speed_up = (uiRes("m_defaultRunTimeCommands.kKw_speed_up"));
string $kw_slow_down = (uiRes("m_defaultRunTimeCommands.kKw_slow_down"));
string $kw_slow_mo = (uiRes("m_defaultRunTimeCommands.kKw_slow_mo"));
string $kw_slowmo = (uiRes("m_defaultRunTimeCommands.kKw_slowmo"));
string $kw_slow_motion = (uiRes("m_defaultRunTimeCommands.kKw_slow_motion"));
string $kw_Curve = (uiRes("m_defaultRunTimeCommands.kKw_Curve"));
string $kw_curve_editor = (uiRes("m_defaultRunTimeCommands.kKw_curve_editor"));
string $kw_fcurve = (uiRes("m_defaultRunTimeCommands.kKw_fcurve"));
string $kw_fcurve_editor = (uiRes("m_defaultRunTimeCommands.kKw_fcurve_editor"));
string $kw_animation_curve = (uiRes("m_defaultRunTimeCommands.kKw_animation_curve"));
string $kw_function_curve = (uiRes("m_defaultRunTimeCommands.kKw_function_curve"));
string $kw_function = (uiRes("m_defaultRunTimeCommands.kKw_function"));
string $kw_Time = (uiRes("m_defaultRunTimeCommands.kKw_Time"));
string $kw_Trax = (uiRes("m_defaultRunTimeCommands.kKw_Trax"));
string $kw_Clip = (uiRes("m_defaultRunTimeCommands.kKw_Clip"));
string $kw_Character = (uiRes("m_defaultRunTimeCommands.kKw_Character"));
string $kw_Story = (uiRes("m_defaultRunTimeCommands.kKw_Story"));
string $kw_Mixer = (uiRes("m_defaultRunTimeCommands.kKw_Mixer"));
string $kw_Track = (uiRes("m_defaultRunTimeCommands.kKw_Track"));
string $kw_Character_Set = (uiRes("m_defaultRunTimeCommands.kKw_Character_Set"));
string $kw_Composition = (uiRes("m_defaultRunTimeCommands.kKw_Composition"));
string $kw_Take = (uiRes("m_defaultRunTimeCommands.kKw_Take"));
string $kw_retime = (uiRes("m_defaultRunTimeCommands.kKw_retime"));
string $kw_offset = (uiRes("m_defaultRunTimeCommands.kKw_offset"));
string $kw_offset_animation = (uiRes("m_defaultRunTimeCommands.kKw_offset_animation"));
string $kw_dope_sheet = (uiRes("m_defaultRunTimeCommands.kKw_dope_sheet"));
string $kw_clip = (uiRes("m_defaultRunTimeCommands.kKw_clip"));
string $kw_character_set = (uiRes("m_defaultRunTimeCommands.kKw_character_set"));
string $kw_character = (uiRes("m_defaultRunTimeCommands.kKw_character"));
string $kw_layout = (uiRes("m_defaultRunTimeCommands.kKw_layout"));
string $kw_shot = (uiRes("m_defaultRunTimeCommands.kKw_shot"));
string $kw_shots = (uiRes("m_defaultRunTimeCommands.kKw_shots"));
string $kw_camera_manager = (uiRes("m_defaultRunTimeCommands.kKw_camera_manager"));
string $kw_multi_45_camera = (uiRes("m_defaultRunTimeCommands.kKw_multi_45_camera"));
string $kw_sequencer = (uiRes("m_defaultRunTimeCommands.kKw_sequencer"));
string $kw_sychronization = (uiRes("m_defaultRunTimeCommands.kKw_sychronization"));
string $kw_timeline = (uiRes("m_defaultRunTimeCommands.kKw_timeline"));
string $kw_track = (uiRes("m_defaultRunTimeCommands.kKw_track"));
string $kw_HIK = (uiRes("m_defaultRunTimeCommands.kKw_HIK"));
string $kw_Biped = (uiRes("m_defaultRunTimeCommands.kKw_Biped"));
string $kw_Make_character = (uiRes("m_defaultRunTimeCommands.kKw_Make_character"));
string $kw_make_rig = (uiRes("m_defaultRunTimeCommands.kKw_make_rig"));
string $kw_Rig = (uiRes("m_defaultRunTimeCommands.kKw_Rig"));
string $kw_Pose = (uiRes("m_defaultRunTimeCommands.kKw_Pose"));
string $kw_skeleton = (uiRes("m_defaultRunTimeCommands.kKw_skeleton"));
string $kw_Control_Rig = (uiRes("m_defaultRunTimeCommands.kKw_Control_Rig"));
string $kw_create_skeleton = (uiRes("m_defaultRunTimeCommands.kKw_create_skeleton"));
string $kw_retarget = (uiRes("m_defaultRunTimeCommands.kKw_retarget"));
string $kw_retargeting = (uiRes("m_defaultRunTimeCommands.kKw_retargeting"));
string $kw_Human = (uiRes("m_defaultRunTimeCommands.kKw_Human"));
string $kw_Person = (uiRes("m_defaultRunTimeCommands.kKw_Person"));
string $kw_biped = (uiRes("m_defaultRunTimeCommands.kKw_biped"));
string $kw_play = (uiRes("m_defaultRunTimeCommands.kKw_play"));
string $kw_begin = (uiRes("m_defaultRunTimeCommands.kKw_begin"));
string $kw_on = (uiRes("m_defaultRunTimeCommands.kKw_on"));
string $kw_rewind = (uiRes("m_defaultRunTimeCommands.kKw_rewind"));
string $kw_opposite = (uiRes("m_defaultRunTimeCommands.kKw_opposite"));
string $kw_reverse = (uiRes("m_defaultRunTimeCommands.kKw_reverse"));
string $kw_pause = (uiRes("m_defaultRunTimeCommands.kKw_pause"));
string $kw_freeze = (uiRes("m_defaultRunTimeCommands.kKw_freeze"));
string $kw_end = (uiRes("m_defaultRunTimeCommands.kKw_end"));
string $kw_halt = (uiRes("m_defaultRunTimeCommands.kKw_halt"));
string $kw_one_forward = (uiRes("m_defaultRunTimeCommands.kKw_one_forward"));
string $kw_plus_one = (uiRes("m_defaultRunTimeCommands.kKw_plus_one"));
string $kw_minimum = (uiRes("m_defaultRunTimeCommands.kKw_minimum"));
string $kw_first_frame = (uiRes("m_defaultRunTimeCommands.kKw_first_frame"));
string $kw_first = (uiRes("m_defaultRunTimeCommands.kKw_first"));
string $kw_maximum = (uiRes("m_defaultRunTimeCommands.kKw_maximum"));
string $kw_last_frame = (uiRes("m_defaultRunTimeCommands.kKw_last_frame"));
string $kw_last = (uiRes("m_defaultRunTimeCommands.kKw_last"));
string $kw_skip = (uiRes("m_defaultRunTimeCommands.kKw_skip"));
string $kw_framerate = (uiRes("m_defaultRunTimeCommands.kKw_framerate"));
string $kw_playrate = (uiRes("m_defaultRunTimeCommands.kKw_playrate"));
string $kw_skip_frames = (uiRes("m_defaultRunTimeCommands.kKw_skip_frames"));
string $kw_max = (uiRes("m_defaultRunTimeCommands.kKw_max"));
string $kw_no_skip = (uiRes("m_defaultRunTimeCommands.kKw_no_skip"));
string $kw_24fps = (uiRes("m_defaultRunTimeCommands.kKw_24fps"));
string $kw_realtime = (uiRes("m_defaultRunTimeCommands.kKw_realtime"));
string $kw_loop = (uiRes("m_defaultRunTimeCommands.kKw_loop"));
string $kw_repeat = (uiRes("m_defaultRunTimeCommands.kKw_repeat"));
string $kw_play_once = (uiRes("m_defaultRunTimeCommands.kKw_play_once"));
string $kw_back_and_forth = (uiRes("m_defaultRunTimeCommands.kKw_back_and_forth"));
string $kw_forward_backward = (uiRes("m_defaultRunTimeCommands.kKw_forward_backward"));
string $kw_pendulum = (uiRes("m_defaultRunTimeCommands.kKw_pendulum"));
string $kw_to_and_fro = (uiRes("m_defaultRunTimeCommands.kKw_to_and_fro"));
string $kw_sway = (uiRes("m_defaultRunTimeCommands.kKw_sway"));
string $kw_fluctuate = (uiRes("m_defaultRunTimeCommands.kKw_fluctuate"));
string $kw_motion_path = (uiRes("m_defaultRunTimeCommands.kKw_motion_path"));
string $kw_path = (uiRes("m_defaultRunTimeCommands.kKw_path"));
string $kw_animation_preview = (uiRes("m_defaultRunTimeCommands.kKw_animation_preview"));
string $kw_preview = (uiRes("m_defaultRunTimeCommands.kKw_preview"));
string $kw_see_keys = (uiRes("m_defaultRunTimeCommands.kKw_see_keys"));
string $kw_view_keys = (uiRes("m_defaultRunTimeCommands.kKw_view_keys"));
string $kw_360_camera = (uiRes("m_defaultRunTimeCommands.kKw_360_camera"));
string $kw_360 = (uiRes("m_defaultRunTimeCommands.kKw_360"));
string $kw_orbit = (uiRes("m_defaultRunTimeCommands.kKw_orbit"));
string $kw_generate = (uiRes("m_defaultRunTimeCommands.kKw_generate"));
string $kw_generate_geometry = (uiRes("m_defaultRunTimeCommands.kKw_generate_geometry"));
string $kw_transform_curve = (uiRes("m_defaultRunTimeCommands.kKw_transform_curve"));
string $kw_loft = (uiRes("m_defaultRunTimeCommands.kKw_loft"));
string $kw_snapshot = (uiRes("m_defaultRunTimeCommands.kKw_snapshot"));
string $kw_Playback = (uiRes("m_defaultRunTimeCommands.kKw_Playback"));
string $kw_review = (uiRes("m_defaultRunTimeCommands.kKw_review"));
string $kw_output = (uiRes("m_defaultRunTimeCommands.kKw_output"));
string $kw_render = (uiRes("m_defaultRunTimeCommands.kKw_render"));
string $kw_movie = (uiRes("m_defaultRunTimeCommands.kKw_movie"));
string $kw_flipbook = (uiRes("m_defaultRunTimeCommands.kKw_flipbook"));
string $kw_cube = (uiRes("m_defaultRunTimeCommands.kKw_cube"));
string $kw_box = (uiRes("m_defaultRunTimeCommands.kKw_box"));
string $kw_spline = (uiRes("m_defaultRunTimeCommands.kKw_spline"));
string $kw_rectangle = (uiRes("m_defaultRunTimeCommands.kKw_rectangle"));
string $kw_geosphere = (uiRes("m_defaultRunTimeCommands.kKw_geosphere"));
string $kw_omni = (uiRes("m_defaultRunTimeCommands.kKw_omni"));
string $kw_target_light = (uiRes("m_defaultRunTimeCommands.kKw_target_light"));
string $kw_line = (uiRes("m_defaultRunTimeCommands.kKw_line"));
string $kw_illustrator = (uiRes("m_defaultRunTimeCommands.kKw_illustrator"));
string $kw_adobe = (uiRes("m_defaultRunTimeCommands.kKw_adobe"));
string $kw_vector = (uiRes("m_defaultRunTimeCommands.kKw_vector"));
string $kw_label = (uiRes("m_defaultRunTimeCommands.kKw_label"));
string $kw_tag = (uiRes("m_defaultRunTimeCommands.kKw_tag"));
string $kw_tape_measure = (uiRes("m_defaultRunTimeCommands.kKw_tape_measure"));
string $kw_spring = (uiRes("m_defaultRunTimeCommands.kKw_spring"));
string $kw_cog = (uiRes("m_defaultRunTimeCommands.kKw_cog"));
string $kw_donut = (uiRes("m_defaultRunTimeCommands.kKw_donut"));
string $kw_select_polygon = (uiRes("m_defaultRunTimeCommands.kKw_select_polygon"));
string $kw_select_loop = (uiRes("m_defaultRunTimeCommands.kKw_select_loop"));
string $kw_select_path = (uiRes("m_defaultRunTimeCommands.kKw_select_path"));
string $kw_mtk = (uiRes("m_defaultRunTimeCommands.kKw_mtk"));
string $kw_nex = (uiRes("m_defaultRunTimeCommands.kKw_nex"));
string $kw_uv = (uiRes("m_defaultRunTimeCommands.kKw_uv"));
string $kw_texture_editor = (uiRes("m_defaultRunTimeCommands.kKw_texture_editor"));
string $kw_edit_uv = (uiRes("m_defaultRunTimeCommands.kKw_edit_uv"));
string $kw_unwrap = (uiRes("m_defaultRunTimeCommands.kKw_unwrap"));
string $kw_blendshape = (uiRes("m_defaultRunTimeCommands.kKw_blendshape"));
string $kw_morpher = (uiRes("m_defaultRunTimeCommands.kKw_morpher"));
string $kw_shape_authoring = (uiRes("m_defaultRunTimeCommands.kKw_shape_authoring"));
string $kw_sculpt = (uiRes("m_defaultRunTimeCommands.kKw_sculpt"));
string $kw_mudbox = (uiRes("m_defaultRunTimeCommands.kKw_mudbox"));
string $kw_psd = (uiRes("m_defaultRunTimeCommands.kKw_psd"));
string $kw_pose_space_deformation = (uiRes("m_defaultRunTimeCommands.kKw_pose_space_deformation"));
string $kw_properties = (uiRes("m_defaultRunTimeCommands.kKw_properties"));
string $kw_auto_uv = (uiRes("m_defaultRunTimeCommands.kKw_auto_uv"));
string $kw_create_uv = (uiRes("m_defaultRunTimeCommands.kKw_create_uv"));
string $kw_map_uv = (uiRes("m_defaultRunTimeCommands.kKw_map_uv"));
string $kw_cut_uv = (uiRes("m_defaultRunTimeCommands.kKw_cut_uv"));
string $kw_tweak_uv = (uiRes("m_defaultRunTimeCommands.kKw_tweak_uv"));
string $kw_history = (uiRes("m_defaultRunTimeCommands.kKw_history"));
string $kw_bake = (uiRes("m_defaultRunTimeCommands.kKw_bake"));
string $kw_collapse = (uiRes("m_defaultRunTimeCommands.kKw_collapse"));
string $kw_clone = (uiRes("m_defaultRunTimeCommands.kKw_clone"));
string $kw_copy = (uiRes("m_defaultRunTimeCommands.kKw_copy"));
string $kw_instance = (uiRes("m_defaultRunTimeCommands.kKw_instance"));
string $kw_array = (uiRes("m_defaultRunTimeCommands.kKw_array"));
string $kw_shrinkwrap = (uiRes("m_defaultRunTimeCommands.kKw_shrinkwrap"));
string $kw_shrink_wrap = (uiRes("m_defaultRunTimeCommands.kKw_shrink_wrap"));
string $kw_cap = (uiRes("m_defaultRunTimeCommands.kKw_cap"));
string $kw_poly_reduce = (uiRes("m_defaultRunTimeCommands.kKw_poly_reduce"));
string $kw_optimize = (uiRes("m_defaultRunTimeCommands.kKw_optimize"));
string $kw_mesh_smooth = (uiRes("m_defaultRunTimeCommands.kKw_mesh_smooth"));
string $kw_smooth_mesh = (uiRes("m_defaultRunTimeCommands.kKw_smooth_mesh"));
string $kw_msmooth = (uiRes("m_defaultRunTimeCommands.kKw_msmooth"));
string $kw_tessellate = (uiRes("m_defaultRunTimeCommands.kKw_tessellate"));
string $kw_quadrify = (uiRes("m_defaultRunTimeCommands.kKw_quadrify"));
string $kw_symmetry = (uiRes("m_defaultRunTimeCommands.kKw_symmetry"));
string $kw_make_symmetrical = (uiRes("m_defaultRunTimeCommands.kKw_make_symmetrical"));
string $kw_mesh_cleanup = (uiRes("m_defaultRunTimeCommands.kKw_mesh_cleanup"));
string $kw_fix = (uiRes("m_defaultRunTimeCommands.kKw_fix"));
string $kw_repair = (uiRes("m_defaultRunTimeCommands.kKw_repair"));
string $kw_xview = (uiRes("m_defaultRunTimeCommands.kKw_xview"));
string $kw_unify = (uiRes("m_defaultRunTimeCommands.kKw_unify"));
string $kw_flip = (uiRes("m_defaultRunTimeCommands.kKw_flip"));
string $kw_crease = (uiRes("m_defaultRunTimeCommands.kKw_crease"));
string $kw_smooth = (uiRes("m_defaultRunTimeCommands.kKw_smooth"));
string $kw_soften = (uiRes("m_defaultRunTimeCommands.kKw_soften"));
string $kw_set_normal_angle = (uiRes("m_defaultRunTimeCommands.kKw_set_normal_angle"));
string $kw_auto_edge = (uiRes("m_defaultRunTimeCommands.kKw_auto_edge"));
string $kw_cpv_44__color_per_vertex = (uiRes("m_defaultRunTimeCommands.kKw_cpv_44__color_per_vertex"));
string $kw_fill = (uiRes("m_defaultRunTimeCommands.kKw_fill"));
string $kw_split = (uiRes("m_defaultRunTimeCommands.kKw_split"));
string $kw_insert = (uiRes("m_defaultRunTimeCommands.kKw_insert"));
string $kw_insert_edge_loop = (uiRes("m_defaultRunTimeCommands.kKw_insert_edge_loop"));
string $kw_slide = (uiRes("m_defaultRunTimeCommands.kKw_slide"));
string $kw_pinch = (uiRes("m_defaultRunTimeCommands.kKw_pinch"));
string $kw_draw = (uiRes("m_defaultRunTimeCommands.kKw_draw"));
string $kw_slice = (uiRes("m_defaultRunTimeCommands.kKw_slice"));
string $kw_split_polygon = (uiRes("m_defaultRunTimeCommands.kKw_split_polygon"));
string $kw_interactive_split = (uiRes("m_defaultRunTimeCommands.kKw_interactive_split"));
string $kw_quickslice = (uiRes("m_defaultRunTimeCommands.kKw_quickslice"));
string $kw_cut_faces = (uiRes("m_defaultRunTimeCommands.kKw_cut_faces"));
string $kw_outline = (uiRes("m_defaultRunTimeCommands.kKw_outline"));
string $kw_retopology = (uiRes("m_defaultRunTimeCommands.kKw_retopology"));
string $kw_retopologize = (uiRes("m_defaultRunTimeCommands.kKw_retopologize"));
string $kw_topology = (uiRes("m_defaultRunTimeCommands.kKw_topology"));
string $kw_topologize = (uiRes("m_defaultRunTimeCommands.kKw_topologize"));
string $kw_pull = (uiRes("m_defaultRunTimeCommands.kKw_pull"));
string $kw_average_vertices = (uiRes("m_defaultRunTimeCommands.kKw_average_vertices"));
string $kw_even_out = (uiRes("m_defaultRunTimeCommands.kKw_even_out"));
string $kw_lock = (uiRes("m_defaultRunTimeCommands.kKw_lock"));
string $kw_merge = (uiRes("m_defaultRunTimeCommands.kKw_merge"));
string $kw_text = (uiRes("m_defaultRunTimeCommands.kKw_text"));
string $kw_3d_text = (uiRes("m_defaultRunTimeCommands.kKw_3d_text"));
string $kw_refine = (uiRes("m_defaultRunTimeCommands.kKw_refine"));
string $kw_mitering = (uiRes("m_defaultRunTimeCommands.kKw_mitering"));
string $kw_chamfer = (uiRes("m_defaultRunTimeCommands.kKw_chamfer"));
string $kw_bezel = (uiRes("m_defaultRunTimeCommands.kKw_bezel"));
string $kw_radial_align = (uiRes("m_defaultRunTimeCommands.kKw_radial_align"));
string $kw_spherize = (uiRes("m_defaultRunTimeCommands.kKw_spherize"));
string $kw_circle = (uiRes("m_defaultRunTimeCommands.kKw_circle"));
string $kw_geopoly = (uiRes("m_defaultRunTimeCommands.kKw_geopoly"));
string $kw_weld = (uiRes("m_defaultRunTimeCommands.kKw_weld"));
string $kw_mirror = (uiRes("m_defaultRunTimeCommands.kKw_mirror"));
string $kw_relax = (uiRes("m_defaultRunTimeCommands.kKw_relax"));
string $kw_bevel = (uiRes("m_defaultRunTimeCommands.kKw_bevel"));
string $kw_turn_edge = (uiRes("m_defaultRunTimeCommands.kKw_turn_edge"));
string $kw_edit_triangulation = (uiRes("m_defaultRunTimeCommands.kKw_edit_triangulation"));
string $kw_rotate_edge = (uiRes("m_defaultRunTimeCommands.kKw_rotate_edge"));
string $kw_hide_face = (uiRes("m_defaultRunTimeCommands.kKw_hide_face"));
string $kw_clone_face = (uiRes("m_defaultRunTimeCommands.kKw_clone_face"));
string $kw_hinge_from_edge = (uiRes("m_defaultRunTimeCommands.kKw_hinge_from_edge"));
string $kw_Blue = (uiRes("m_defaultRunTimeCommands.kKw_Blue"));
string $kw_Pencil = (uiRes("m_defaultRunTimeCommands.kKw_Pencil"));
string $kw_Grease = (uiRes("m_defaultRunTimeCommands.kKw_Grease"));
string $kw_GreasePencil = (uiRes("m_defaultRunTimeCommands.kKw_GreasePencil"));
string $kw_Sketch = (uiRes("m_defaultRunTimeCommands.kKw_Sketch"));
string $kw_Draw = (uiRes("m_defaultRunTimeCommands.kKw_Draw"));
string $kw_Boolean = (uiRes("m_defaultRunTimeCommands.kKw_Boolean"));
string $kw_Bool = (uiRes("m_defaultRunTimeCommands.kKw_Bool"));
string $kw_Fuse = (uiRes("m_defaultRunTimeCommands.kKw_Fuse"));
string $kw_Carve = (uiRes("m_defaultRunTimeCommands.kKw_Carve"));
string $kw_Subdiv = (uiRes("m_defaultRunTimeCommands.kKw_Subdiv"));
string $kw_Subd = (uiRes("m_defaultRunTimeCommands.kKw_Subd"));
string $kw_Subdivide = (uiRes("m_defaultRunTimeCommands.kKw_Subdivide"));

// TTF Tags
string $tag_Skeleton = (uiRes("m_defaultRunTimeCommands.kTag_Skeleton"));
string $tag_Rigging = (uiRes("m_defaultRunTimeCommands.kTag_Rigging"));
string $tag_Skin = (uiRes("m_defaultRunTimeCommands.kTag_Skin"));
string $tag_Deform = (uiRes("m_defaultRunTimeCommands.kTag_Deform"));
string $tag_Constraint = (uiRes("m_defaultRunTimeCommands.kTag_Constraint"));
string $tag_Control = (uiRes("m_defaultRunTimeCommands.kTag_Control"));
string $tag_Hair = (uiRes("m_defaultRunTimeCommands.kTag_Hair"));
string $tag_Fur = (uiRes("m_defaultRunTimeCommands.kTag_Fur"));
string $tag_Cloth = (uiRes("m_defaultRunTimeCommands.kTag_Cloth"));
string $tag_Particles = (uiRes("m_defaultRunTimeCommands.kTag_Particles"));
string $tag_UI = (uiRes("m_defaultRunTimeCommands.kTag_UI"));
string $tag_Display = (uiRes("m_defaultRunTimeCommands.kTag_Display"));
string $tag_Key = (uiRes("m_defaultRunTimeCommands.kTag_Key"));
string $tag_Animation = (uiRes("m_defaultRunTimeCommands.kTag_Animation"));
string $tag_Edit = (uiRes("m_defaultRunTimeCommands.kTag_Edit"));
string $tag_Windows = (uiRes("m_defaultRunTimeCommands.kTag_Windows"));
string $tag_Playback = (uiRes("m_defaultRunTimeCommands.kTag_Playback"));
string $tag_Visualize = (uiRes("m_defaultRunTimeCommands.kTag_Visualize"));
string $tag_Mesh_Tools = (uiRes("m_defaultRunTimeCommands.kTag_Mesh_Tools"));
string $tag_UV = (uiRes("m_defaultRunTimeCommands.kTag_UV"));
string $tag_Mesh_Display = (uiRes("m_defaultRunTimeCommands.kTag_Mesh_Display"));
string $kw_layers = (uiRes("m_defaultRunTimeCommands.kKw_layers"));
string $kw_AOVs = (uiRes("m_defaultRunTimeCommands.kKw_AOVs"));
string $kw_settings = (uiRes("m_defaultRunTimeCommands.kKw_settings"));
string $kw_overrides = (uiRes("m_defaultRunTimeCommands.kKw_overrides"));
string $kw_presets = (uiRes("m_defaultRunTimeCommands.kKw_presets"));
string $kw_collections = (uiRes("m_defaultRunTimeCommands.kKw_collections"));
string $kw_HumanIK = (uiRes("m_defaultRunTimeCommands.kKw_HumanIK"));
string $kw_Object = (uiRes("m_defaultRunTimeCommands.kKw_Object"));
string $kw_Stats = (uiRes("m_defaultRunTimeCommands.kKw_Stats"));
string $kw_Zoom_Extents = (uiRes("m_defaultRunTimeCommands.kKw_ZoomExtents"));

catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Clear)
		NewScene
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Scene_Explorer + ";" + $kw_Lister + ";" + $kw_Find)
		OutlinerWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_detail + ";" + $kw_Object + ";" + $kw_Stats)
		ToggleObjectDetails
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		JointTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		InsertJointTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		MirrorJoint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		OrientJoint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		RemoveJoint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		ConnectJoint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		DisconnectJoint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		RerootSkeleton
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		ToggleSelectedLabels
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		ShowAllLabels
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		HideAllLabels
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		RenameJointsFromLabels
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_Bone)
		LabelBasedOnJointNames
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelLeft
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelRight
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelCenter
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelNone
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelArm
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelLeg
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelCollar
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelElbow
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelFoot
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelHand
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelHead
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelHip
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelKnee
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelNeck
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelRoot
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelShoulder
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelSpine
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelThumb
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelIndex
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelMiddleFinger
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelRingFinger
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelPinky
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelExtraFinger
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelFingerBase
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelBigToe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelIndexToe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelMiddleToe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelRingToe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelPinkyToe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelFootThumb
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		FBIKLabelToeBase
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		IKHandleTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		IKSplineHandleTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		SetPreferredAngle
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		AssumePreferredAngle
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		ToggleIKHandleSnap
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		ToggleIKAllowRotation
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		EnableSelectedIKHandles
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skeleton + ";" + $tag_Rigging)
		-keywords	($kw_IK + ";" + $kw_Kinematics)
		DisableSelectedIKHandles
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		-keywords	($kw_Armature)
		SmoothBindSkin
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		InteractiveBindSkin
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		-keywords	($kw_detach)
		DetachSkin
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		GoToBindPose
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		ArtPaintSkinWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		MirrorSkinWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		CopySkinWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		SmoothSkinWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		WeightHammer
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		CopyVertexWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		PasteVertexWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		-keywords	($kw_trim + ";" + $kw_strip)
		PruneSmallWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		ResetWeightsToDefault
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		DisableWeightNrm
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		EnableWeightPostNrm
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		EnableWeightNrm
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		NormalizeWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		ExportSkinWeightMaps
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		ImportSkinWeightMaps
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		VolumeSkinBinding
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		MoveSkinJointsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		MoveInfluence
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		AddInfluence
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		RemoveInfluence
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		SetMaxInfluences
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		RemoveUnusedInfluences
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		SubstituteGeometry
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Skin + ";" + $tag_Rigging)
		BakeDeformerTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_morph)
		CreateBlendShape
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CreateCluster
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CurveWarp
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Corrective_Smooth)
		DeltaMush
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		Tension
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_FFD + ";" + $kw_Warp)
		CreateLattice
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Mesh_Deform + ";" + $kw_Surface_Deform)
		CreateWrap
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CreateShrinkWrap
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		WireTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		WrinkleTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_PSD)
		CreatePoseInterpolator
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Bend
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Flare
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Sine
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Squash
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Twist
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Nonlinear)
		Wave
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CreateSculptDeformer
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Displace)
		CreateTextureDeformer
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CreateJiggleDeformer
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		CreateDiskCache
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		GlobalDiskCacheControl
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PointOnCurve
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Morph)
		AddBlendShape
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Morph)
		RemoveBlendShape
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Morph)
		SwapBlendShape
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Morph)
		BakeTopologyToTargets
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Morph)
		EditNormalizationGroups
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_FFD)
		RemoveLatticeTweaks
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_FFD)
		ResetLattice
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Mesh_Deform + ";" + $kw_Surface_Deform)
		AddWrapInfluence
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		-keywords	($kw_Mesh_Deform + ";" + $kw_Surface_Deform)
		RemoveWrapInfluence
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		AddShrinkWrapSurfaces
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		RemoveShrinkWrapInnerObject
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		RemoveShrinkWrapSurfaces
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		RemoveShrinkWrapTarget
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		SetShrinkWrapInnerObject
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		SetShrinkWrapTarget
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		AddWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		AddHolder
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ParentBaseWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		RemoveWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ResetWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ShowBaseWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		WireDropoffLocator
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		EditMembershipTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PruneCluster
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PruneLattice
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PruneSculpt
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PruneWire
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		MirrorDeformerWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ArtPaintBlendShapeWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintClusterWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintDeltaMushWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintTensionWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintLatticeWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintShrinkWrapWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintWireWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintNonlinearWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintJiggleWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintTextureDeformerWeightsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		PaintSetMembershipTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ExportDeformerWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Deform + ";" + $tag_Rigging)
		ImportDeformerWeights
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		ParentConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		PointConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		OrientConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		ScaleConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		AimConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		PoleVectorConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		SetKeyPath
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		AttachToPath
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		FlowPathObject
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		ClosestPointOn
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		PointOnPolyConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		GeometryConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		NormalConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		TangentConstraint
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		RemoveConstraintTarget
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		SetRestPosition
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Constraint + ";" + $tag_Rigging)
		ModifyConstraintAxis
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Control + ";" + $tag_Rigging)
		TagAsControllerParent
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Control + ";" + $tag_Rigging)
		TagAsController
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Control + ";" + $tag_Rigging)
		-keywords       ($kw_HumanIK)
		CreateControlRig
`);


catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_create_hair + ";" + $kw_create_fur + ";" + $kw_groom + ";" + $kw_style + ";" + $kw_xgen)
		XgmCreateInteractiveGroomSplines
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_groom + ";" + $kw_hair + ";" + $kw_fur + ";" + $kw_xgen)
		XgCreateIgSplineEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_save_hair + ";" + $kw_cache_hair + ";" + $kw_create_hair_cache)
		XgmSplineCacheCreate
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_save_hair + ";" + $kw_cache_hair + ";" + $kw_export_hair)
		XgmSplineCacheExport
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_load_hair + ";" + $kw_import_hair)
		XgmSplineCacheImport
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_delete_hair_cache)
		XgmSplineCacheDelete
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_disable_hair_cache)
		XgmSplineCacheDisableSelectedCache
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetSmoothBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetPartBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetCombBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_individual_hairs)
		XgmSetPlaceBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetNoiseBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetCutBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetClumpBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetWidthBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetGrabBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_long + ";" + $kw_short + ";" + $kw_style + ";" + $kw_groom)
		XgmSetLengthBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_cards + ";" + $kw_strips)
		XgmSetDirectionBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_style + ";" + $kw_groom)
		XgmSetFreezeBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_select_hair + ";" + $kw_style + ";" + $kw_groom)
		XgmSetSelectBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Hair + ";" + $tag_Fur)
		-keywords	($kw_add + ";" + $kw_remove + ";" + $kw_thicken + ";" + $kw_thin)
		XgmSetDensityBrushTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_rip_cloth)
		nConstraintTearableSurface
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_cloth_initial_state + ";" + $kw_settle)
		RelaxInitialState
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_pin_cloth + ";" + $kw_constrain_cloth + ";" + $kw_attach_cloth)
		nConstraintTransform
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_cache_cloth + ";" + $kw_save_cloth)
		nClothCache
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_constrain_cloth_vertices)
		nConstraintComponent
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_start_position + ";" + $kw_intitial_state)
		SetNClothStartFromMesh
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_cloth + ";" + $kw_pants + ";" + $kw_clothing + ";" + $kw_cape + ";" + $kw_curtain + ";" + $kw_flag + ";" + $kw_shirt + ";" + $kw_pants + ";" + $kw_rope)
		nClothCreate
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_undo_cloth + ";" + $kw_revert_cloth)
		nClothRemove
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Cloth)
		-keywords	($kw_cloth_collider)
		nClothMakeCollide
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_fire + ";" + $kw_streak + ";" + $kw_fireworks + ";" + $kw_bomb + ";" + $kw_explosion + ";" + $kw_particle_flow)
		nucleusGetnParticleExample
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_blobby)
		NParticleStyleWater
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_place_particles + ";" + $kw_single_particles)
		NParticleTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_cotton)
		NParticleStyleThickCloud
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_create_particles + ";" + $kw_shoot_particles + ";" + $kw_move_particles)
		NCreateEmitter
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_particle_volume + ";" + $kw_particle_fill)
		ParticleFill
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Particles)
		-keywords	($kw_trigger_collisions)
		ParticleCollisionEvents
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_effect + ";" + $kw_fire + ";" + $kw_streak + ";" + $kw_fireworks + ";" + $kw_bomb + ";" + $kw_explosion + ";" + $kw_particle_flow + ";" + $kw_tears + ";" + $kw_laser + ";" + $kw_snow + ";" + $kw_dust)
		nucleusGetEffectsAsset
`);


catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Select)
		SelectAll
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Select)
		SelectNone
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Select)
		InvertSelection
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Sampling + ";" + $kw_Frame_Range + ";" + $kw_Resolution + ";" + $kw_Dimension + ";" + $kw_Format + ";" + $kw_Motion_Blur + ";" + $kw_AOV)
		RenderGlobalsWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Move)
		MoveTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Rotate)
		RotateTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Scale)
		ScaleTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UI)
		-keywords	($kw_Reset)
		ResetCurrentWorkspace
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_point_helper + ";" + $kw_dummy + ";" + $kw_null)
		CreateLocator
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Reference + ";" + $kw_Image)
		CreateImagePlane
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Redo)
		RepeatLast
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Display)
		-keywords	($kw_Display + ";" + $kw_Zoom_Extents)
		FrameAllInAllViews
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Repath + ";" + $kw_Re_45_path + ";" + $kw_Missing_File + ";" + $kw_Relink + ";" + $kw_Re_45_link)
		FilePathEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Link + ";" + $kw_External)
		CreateReference
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Link + ";" + $kw_External)
		ReferenceEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_animate + ";" + $kw_key + ";" + $kw_key_frame)
		SetKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_animate + ";" + $kw_key_frame)
		SetKeyAnimated
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_animate + ";" + $kw_key + ";" + $kw_key_frame + ";" + $kw_translate + ";" + $kw_position)
		SetKeyTranslate
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_Rotate + ";" + $kw_animate + ";" + $kw_key + ";" + $kw_key_frame )
		SetKeyRotate
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_Scale + ";" + $kw_key + ";" + $kw_key_frame)
		SetKeyScale
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_inbetween + ";" + $kw_in_between)
		SetBreakdownKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		-keywords	($kw_link + ";" + $kw_driver + ";" + $kw_driven + ";" + $kw_associate + ";" + $kw_effector + ";" + $kw_link_attributes)
		SetDrivenKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_before + ";" + $kw_backward)
		GoToPreviousDrivenKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_step_forward + ";" + $kw_step)
		GoToNextDrivenKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		KeyBlendShapeTargetsWeight
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		CutKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		CopyKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		PasteKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		DeleteKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		ScaleKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		SnapKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Edit + ";" + $tag_Animation)
		-keywords	($kw_flatten)
		BakeSimulation
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_wait + ";" + $kw_keep + ";" + $kw_autokey + ";" + $kw_auto_key)
		HoldCurrentKeys
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_key_chain + ";" + $kw_joint_chain + ";" + $kw_joint)
		SetIKFKKeyframe
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		ToggleFkIk
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_connect + ";" + $kw_bridge + ";" + $kw_control + ";" + $kw_link + ";" + $kw_handle + ";" + $kw_blend + ";" + $kw_chain + ";" + $kw_joint)
		ConnectNodeToIKFK
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_convert + ";" + $kw_change)
		MoveIKtoFK
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		-keywords	($kw_person + ";" + $kw_trax + ";" + $kw_set)
		CreateCharacter
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		-keywords	($kw_person + ";" + $kw_trax + ";" + $kw_set)
		CreateSubCharacter
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		-keywords	($kw_remap + ";" + $kw_mapping + ";" + $kw_transfer + ";" + $kw_move_animation + ";" + $kw_source + ";" + $kw_target + ";" + $kw_map)
		CharacterMapper
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		AddToCharacterSet
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		RemoveFromCharacterSet
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		-keywords	($kw_group + ";" + $kw_combine + ";" + $kw_group_characters)
		MergeCharacterSet
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Control + ";" + $tag_Animation)
		AddAnimationOffset
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_timewarp + ";" + $kw_speed_ramping + ";" + $kw_speed_up + ";" + $kw_slow_down + ";" + $kw_slow_mo + ";" + $kw_slowmo + ";" + $kw_slow_motion)
		AddTimeWarp
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_timewarp + ";" + $kw_speed_ramping + ";" + $kw_speed_up + ";" + $kw_slow_down + ";" + $kw_slow_mo + ";" + $kw_slowmo + ";" + $kw_slow_motion)
		SelectTimeWarp
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_timewarp + ";" + $kw_speed_ramping + ";" + $kw_speed_up + ";" + $kw_slow_down + ";" + $kw_slow_mo + ";" + $kw_slowmo + ";" + $kw_slow_motion)
		DeleteTimeWarp
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Key + ";" + $tag_Animation)
		-keywords	($kw_timewarp + ";" + $kw_speed_ramping + ";" + $kw_speed_up + ";" + $kw_slow_down + ";" + $kw_slow_mo + ";" + $kw_slowmo + ";" + $kw_slow_motion)
		EnableTimeWarp
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_Curve + ";" + $kw_curve_editor + ";" + $kw_fcurve + ";" + $kw_fcurve_editor + ";"  + $kw_animation_curve + ";" + $kw_function_curve + ";" + $kw_function)
		GraphEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_Time + ";" + $kw_Trax + ";" + $kw_Clip + ";"  + $kw_Story + ";" + $kw_Mixer + ";" + $kw_Track +  ";" + $kw_Take + ";" + $kw_retime + ";" + $kw_timing)
		TimeEditorWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_trax + ";" + $kw_clip + ";" + $kw_character_set + ";" + $kw_character)
		CharacterAnimationEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_layout + ";" + $kw_shot + ";" + $kw_shots + ";" + $kw_camera_manager + ";" + $kw_multi_45_camera + ";" + $kw_sequencer)
		SequenceEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_timing + ";" + $kw_sychronization + ";" + $kw_timeline + ";" + $kw_retime)
		DopeSheetEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Windows + ";" + $tag_Animation)
		-keywords	($kw_HIK + ";" + $kw_Biped + ";" + $kw_Bone  + ";" + $kw_Rig  + ";" + $kw_IK + ";" + $kw_character + ";" + $kw_skeleton + ";" + $kw_Control_Rig + ";" + $kw_Human + ";" + $kw_Person)
		QuickRigEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_biped)
		HIKCharacterControlsTool
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_start + ";" + $kw_play)
		PlaybackForward
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_rewind + ";" + $kw_opposite + ";" + $kw_reverse)
		PlaybackBackward
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_pause + ";" +  $kw_halt)
		PlaybackStop
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_forward + ";" + $kw_step_forward + ";" + $kw_jump + ";" + $kw_jump_forward + ";" + $kw_step)
		NextKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_backward + ";" + $kw_previous + ";" + $kw_step_backward + ";" + $kw_back + ";" + $kw_step_back)
		PreviousKey
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_step + ";" + $kw_step_forward + ";" + $kw_one_forward + ";" + $kw_plus_one)
		NextFrame
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_step_backward + ";" + $kw_previous + ";" + $kw_back + ";" + $kw_step_back)
		PreviousFrame
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_minimum + ";" + $kw_first_frame + ";" + $kw_first)
		GoToMinFrame
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_maximum + ";" + $kw_last_frame + ";" + $kw_last)
		GoToMaxFrame
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangeEnabledClips
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangeMinMax
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangePrefs
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangeHighlight
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangeSound
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackRangeStartEnd
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_skip + ";" + $kw_framerate + ";" + $kw_playrate + ";" + $kw_skip_frames + ";" + $kw_max)
		PlaybackFree
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_framerate + ";" + $kw_playrate + ";" + $kw_max + ";" + $kw_no_skip)
		PlaybackPefRealtime
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_framerate + ";" + $kw_24fps + ";" + $kw_realtime + ";" + $kw_playrate)
		PlaybackRealtime
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_loop + ";" + $kw_play + ";" + $kw_repeat)
		PlaybackLoopContinuous
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_play_once)
		PlaybackLoopOnce
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		-keywords	($kw_back_and_forth + ";" + $kw_forward_backward + ";" + $kw_pendulum + ";" + $kw_to_and_fro + ";" + $kw_sway + ";" + $kw_fluctuate + ";" + $kw_wave)
		PlaybackLoopOscillate
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Playback + ";" + $tag_Animation)
		PlaybackSteppedPreview
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Visualize + ";" + $tag_Animation)
		-keywords	($kw_motion_path + ";" + $kw_path + ";" + $kw_animation_preview + ";" + $kw_preview + ";" + $kw_see_keys + ";" + $kw_view_keys)
		CreateMotionTrail
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Visualize + ";" + $tag_Animation)
		-keywords	($kw_360_camera + ";" + $kw_360 + ";" + $kw_turn + ";" + $kw_orbit + ";")
		AnimationTurntable
`);

catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Visualize + ";" + $tag_Animation)
		-keywords	($kw_generate  + ";" + $kw_generate_geometry)
		AnimationSnapshot
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Visualize + ";" + $tag_Animation)
		UpdateSnapshot
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Visualize + ";" + $tag_Animation)
		-keywords	($kw_transform_curve + ";" + $kw_loft + ";" + $kw_snapshot + ";" + $kw_generate + ";" + $kw_generate_geometry)
		AnimationSweep
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Playback + ";" + $kw_review + ";" + $kw_preview + ";" + $kw_output + ";" + $kw_render + ";" + $kw_movie + ";" + $kw_flipbook)
		PlayblastWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cube + ";" + $kw_box)
		CreatePolygonCube
`);

catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_rectangle)
		CreateNURBSSquare
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_geosphere)
		CreatePolygonPlatonic
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_omni)
		CreatePointLight
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_target_light)
		CreateSpotLight
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_line + ";" + $kw_spline)
		CreateBezierCurveTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_line + ";" + $kw_spline)
		CVCurveTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_line + ";" + $kw_spline)
		EPCurveTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_illustrator + ";" + $kw_adobe + ";" + $kw_vector)
		CreatePolygonSVG
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_label + ";" + $kw_tag)
		CreateAnnotateNode
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_tape_measure)
		DistanceTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_spring)
		CreatePolygonHelix
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cog)
		CreatePolygonGear
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_donut)
		CreateNURBSTorus
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_donut)
		CreatePolygonTorus
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_select_polygon)
		SelectFacetMask
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_loop + ";" + $kw_path)
		SelectContiguousEdges
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Mesh_Tools)
		-keywords	($kw_mtk + ";" + $kw_nex)
		OpenModelingToolkit
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_uv + ";" + $kw_texture_editor + ";" + $kw_edit_uv + ";" + $kw_mapping + ";" + $kw_unwrap)
		TextureViewWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_blendshape + ";" + $kw_target + ";" + $kw_morph + ";" + $kw_morpher + ";" + $kw_shape_authoring + ";" + $kw_sculpt + ";" + $kw_mudbox)
		ShapeEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_psd + ";" + $kw_pose_space_deformation)
		PoseEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_properties)
		ToolSettingsWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_auto_uv + ";" + $kw_create_uv + ";" + $kw_mapping)
		UVAutomaticProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVCameraBasedProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVContourStretchProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVCylindricProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVNormalBasedProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVPlanarProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_create_uv + ";" + $kw_map_uv + ";" + $kw_mapping)
		UVSphericalProjection
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_cut_uv)
		AutoSeamUVs
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_UV)
		-keywords	($kw_tweak_uv)
		SetMeshGrabUVTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_step_backward)
		Undo
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_step_forward)
		Redo
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_history)
		RecentCommandsWindow
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_collapse)
		DeleteAllHistory
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_collapse)
		DeleteHistory
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_clone + ";" + $kw_copy)
		Duplicate
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_clone + ";" + $kw_copy)
		DuplicateSpecial
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_clone + ";" + $kw_array)
		DuplicateWithTransform
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_shrinkwrap + ";" + $kw_shrink_wrap)
		ConformPolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cap)
		FillHole
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_poly_reduce + ";" + $kw_optimize)
		ReducePolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_mesh_smooth + ";" + $kw_smooth_mesh + ";" + $kw_msmooth + ";" + $kw_Subdiv + ";" + $kw_Subd + ";" + $kw_Subdivide)
		SmoothPolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_tessellate)
		Triangulate
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_tessellate + ";" + $kw_quadrify)
		Quadrangulate
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_symmetry + ";" + $kw_make_symmetrical)
		MirrorPolygonGeometry
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_mesh_cleanup + ";" + $kw_fix + ";" + $kw_repair + ";" + $kw_xview)
		CleanupPolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_unify)
		ConformPolygonNormals
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_flip)
		ReversePolygonNormals
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_crease)
		PolygonHardenEdge
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_smooth + ";" + $kw_soften)
		PolygonSoftenEdge
`);
catchQuiet(`
	runTimeCommand -edit
		-tags		($tag_Mesh_Display)
		-keywords	($kw_set_normal_angle + ";" + $kw_auto_edge)
		PolygonSoftenHarden
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cpv_44__color_per_vertex)
		PolygonApplyColor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cpv_44__color_per_vertex)
		PaintVertexColorTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_cpv_44__color_per_vertex)
		OpenColorSetEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_mtk + ";" + $kw_nex)
		ToggleModelingToolkit
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_fill)
		AppendToPolygonTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_split + ";" + $kw_insert + ";" + $kw_insert_edge_loop + ";" + $kw_slide + ";" + $kw_pinch)
		EnterConnectTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_draw)
		CreatePolygonTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_slice + ";" + $kw_insert_edge_loop + ";" + $kw_insert + ";" + $kw_connect + ";" + $kw_split_polygon + ";" + $kw_interactive_split + ";" + $kw_quickslice + ";" + $kw_cut_faces)
		MultiCutTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_outline)
		DuplicateEdges
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_retopology + ";" + $kw_retopologize + ";" + $kw_topology + ";" + $kw_topologize)
		QuadDrawTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_move + ";" + $kw_pull)
		SetMeshGrabTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_average_vertices + ";" + $kw_even_out)
		SetMeshSmoothTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_average_vertices + ";" + $kw_even_out)
		SetMeshRelaxTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_lock)
		SetMeshFreezeTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_merge)
		MergeVertexTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_text + ";" + $kw_3d_text)
		CreatePolygonType
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_sculpt)
		SetMeshSculptTool
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_refine + ";" + $kw_split + ";" + $kw_tessellate)
		SubdividePolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_mitering + ";" + $kw_chamfer + ";" + $kw_bezel)
		BevelPolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_fill + ";" + $kw_cap)
		BridgeOrFill
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_radial_align + ";" + $kw_spherize + ";" + $kw_circle + ";" + $kw_geopoly)
		PolyCircularize
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_weld)
		MergeToCenter
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_weld)
		PolyMerge
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_reverse)
		FlipMesh
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_mirror + ";" + $kw_make_symmetrical)
		Symmetrize
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_relax + ";" + $kw_even_out)
		AverageVertex
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_bevel)
		ChamferVertex
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_turn_edge + ";" + $kw_edit_triangulation)
		FlipTriangleEdge
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_turn_edge + ";" + $kw_rotate_edge)
		PolySpinEdgeBackward
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_turn_edge + ";" + $kw_rotate_edge)
		PolySpinEdgeForward
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_hide_face)
		PolyAssignSubdivHole
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_clone_face)
		DuplicateFace
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_hinge_from_edge)
		WedgePolygon
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_layers + ";" + $kw_collections + ";" + $kw_overrides)
		OpenLightEditor
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_layers + ";" + $kw_collections + ";" + $kw_overrides + ";" + $kw_presets + ";" + $kw_AOVs)
		RenderSetupWindow
`);

catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Blue + ";" + $kw_Pencil + ";" + $kw_Grease  + ";" + $kw_GreasePencil + ";" + $kw_Sketch + ";" + $kw_Draw)
		OpenBluePencil
`);

catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool + ";" + $kw_Fuse)
		PolygonBooleanUnion
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool + ";" + $kw_Carve)
		PolygonBooleanDifference
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool + ";" + $kw_Carve)
		PolygonBooleanDifferenceBA
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool)
		PolygonBooleanIntersection
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool)
		PolygonBooleanSlice
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool)
		PolygonBooleanHolePunch
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool)
		PolygonBooleanCutOut
`);
catchQuiet(`
	runTimeCommand -edit
		-keywords	($kw_Boolean + ";" + $kw_Bool)
		PolygonBooleanSplitEdges
`);
}
ttfTagsAndKeywords();
//
// --- TTF Tag and Keyword additions : End ---
//

proc addTTFMissingCommands(){
	// TTF Keywords
	string $kw_Smooth = (uiRes("m_defaultRunTimeCommands.kKw2_Smooth"));
	string $kw_Subdivision = (uiRes("m_defaultRunTimeCommands.kKw2_Subdivision"));
	string $kw_Snap_Rotate = (uiRes("m_defaultRunTimeCommands.kKw2_Snap_Rotate"));
	string $kw_fps = (uiRes("m_defaultRunTimeCommands.kKw2_fps"));
	string $kw_frame_rate = (uiRes("m_defaultRunTimeCommands.kKw2_frame_rate"));
	string $kw_Evaluation_Mode = (uiRes("m_defaultRunTimeCommands.kKw2_Evaluation_Mode"));
	string $kw_UI = (uiRes("m_defaultRunTimeCommands.kKw2_UI"));
	string $kw_DPI = (uiRes("m_defaultRunTimeCommands.kKw2_DPI"));
	string $kw_HiDPI = (uiRes("m_defaultRunTimeCommands.kKw2_HiDPI"));
	string $kw_Scaling = (uiRes("m_defaultRunTimeCommands.kKw2_Scaling"));
	string $kw_Font_Size = (uiRes("m_defaultRunTimeCommands.kKw2_Font_Size"));
	string $kw_Linear_Workflow = (uiRes("m_defaultRunTimeCommands.kKw2_Linear_Workflow"));
	string $kw_LWF = (uiRes("m_defaultRunTimeCommands.kKw2_LWF"));
	string $kw_Transfer_Maps = (uiRes("m_defaultRunTimeCommands.kKw2_Transfer_Maps"));
	string $kw_Baking = (uiRes("m_defaultRunTimeCommands.kKw2_Baking"));
	string $kw_Bake = (uiRes("m_defaultRunTimeCommands.kKw2_Bake"));
	string $kw_Normals = (uiRes("m_defaultRunTimeCommands.kKw2_Normals"));
	string $kw_Pause = (uiRes("m_defaultRunTimeCommands.kKw2_Pause"));
	string $kw_Reset = (uiRes("m_defaultRunTimeCommands.kKw2_Reset"));
	string $kw_viewport = (uiRes("m_defaultRunTimeCommands.kKw2_viewport"));
	string $kw_performance = (uiRes("m_defaultRunTimeCommands.kKw2_performance"));
	string $kw_display = (uiRes("m_defaultRunTimeCommands.kKw2_display"));
	string $kw_transparency = (uiRes("m_defaultRunTimeCommands.kKw2_transparency"));
	string $kw_uv_tile = (uiRes("m_defaultRunTimeCommands.kKw2_uv_tile"));
	string $kw_ao = (uiRes("m_defaultRunTimeCommands.kKw2_ao"));
	string $kw_ambient_occlusion = (uiRes("m_defaultRunTimeCommands.kKw2_ambient_occlusion"));
	string $kw_udim = (uiRes("m_defaultRunTimeCommands.kKw2_udim"));
	string $kw_liquid = (uiRes("m_defaultRunTimeCommands.kKw2_liquid"));
	string $kw_water = (uiRes("m_defaultRunTimeCommands.kKw2_water"));
	string $kw_fluids = (uiRes("m_defaultRunTimeCommands.kKw2_fluids"));
	string $kw_ocean = (uiRes("m_defaultRunTimeCommands.kKw2_ocean"));
	string $kw_splash = (uiRes("m_defaultRunTimeCommands.kKw2_splash"));
	string $kw_waterfall = (uiRes("m_defaultRunTimeCommands.kKw2_waterfall"));
	string $kw_pour = (uiRes("m_defaultRunTimeCommands.kKw2_pour"));
	string $kw_wave = (uiRes("m_defaultRunTimeCommands.kKw2_wave"));
	string $kw_wake = (uiRes("m_defaultRunTimeCommands.kKw2_wake"));
	string $kw_drip = (uiRes("m_defaultRunTimeCommands.kKw2_drip"));
	string $kw_Scatter = (uiRes("m_defaultRunTimeCommands.kKw2_Scatter"));
	string $kw_Instance = (uiRes("m_defaultRunTimeCommands.kKw2_Instance"));
	string $kw_Select = (uiRes("m_defaultRunTimeCommands.kKw2_Select"));
	string $kw_clean = (uiRes("m_defaultRunTimeCommands.kKw2_clean"));
	string $kw_flush = (uiRes("m_defaultRunTimeCommands.kKw2_flush"));
	string $kw_Frame = (uiRes("m_defaultRunTimeCommands.kKw2_Frame"));
	string $kw_move_pivot = (uiRes("m_defaultRunTimeCommands.kKw2_move_pivot"));
	string $kw_rotate_pivot = (uiRes("m_defaultRunTimeCommands.kKw2_rotate_pivot"));
	string $kw_orient_pivot = (uiRes("m_defaultRunTimeCommands.kKw2_orient_pivot"));

	// TTF Tags
	string $tag_Modify = (uiRes("m_defaultRunTimeCommands.kTag2_Modify"));
	string $tag_Animation = (uiRes("m_defaultRunTimeCommands.kTag2_Animation"));
	string $tag_Windows = (uiRes("m_defaultRunTimeCommands.kTag2_Windows"));
	string $tag_Texturing = (uiRes("m_defaultRunTimeCommands.kTag2_Texturing"));
	string $tag_Performance = (uiRes("m_defaultRunTimeCommands.kTag2_Performance"));
	string $tag_Bifrost = (uiRes("m_defaultRunTimeCommands.kTag2_Bifrost"));
	string $tag_Effects = (uiRes("m_defaultRunTimeCommands.kTag2_Effects"));
	string $tag_Select = (uiRes("m_defaultRunTimeCommands.kTag2_Select"));
	string $tag_Display = (uiRes("m_defaultRunTimeCommands.kTag2_Display"));

	// Enable smoothing preview in the viewport
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kViewportEnableSmoothingLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kViewportEnableSmoothingAnnot"))
		-tags		($tag_Modify)
		-keywords	($kw_Smooth + ";" + $kw_Subdivision)
		-category	"Other items.Other"
		-command	("setDisplaySmoothness 3;")
		ViewportEnableSmoothing;

	// Snap rotation 
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kSnapRotationLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kSnapRotationAnnot"))
		-tags		($tag_Modify)
		-keywords	($kw_Snap_Rotate)
		-category	"Other items.Other"
		-command	("manipRotateSetSnapMode 1;")
		SnapRotation;

	// Open the Time Slider category of the Preferences window
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kOpenTimeSliderPrefsLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kOpenTimeSliderPrefsAnnot"))
		-tags		($tag_Animation)
		-keywords	($kw_fps + ";" + $kw_frame_rate)
		-category	"Other items.Other"
		-command	("preferencesWnd \"timeslider\";")
		OpenTimeSliderPrefs;

	// Change Animation preferences
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kChangeAnimPrefsLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kChangeAnimPrefsAnnot"))
		-tags		($tag_Animation)
		-keywords	($kw_Evaluation_Mode)
		-category	"Other items.Other"
		-command	("preferencesWnd \"Animation\";")
		ChangeAnimPrefs;

	// Change UI display preferences
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kChangeUIPrefsLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kChangeUIPrefsAnnot"))
		-tags		($tag_Windows)
		-keywords	($kw_UI + ";" + $kw_DPI + ";" + $kw_HiDPI + ";" + $kw_Scaling + ";" + $kw_Font_Size)
		-category	"Other items.Other"
		-command	("preferencesWnd \"Interface\";")
		ChangeUIPrefs;

	// Change color management preferences
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kChangeColorPrefsLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kChangeColorPrefsAnnot"))
		-keywords	($kw_Linear_Workflow + ";" + $kw_LWF)
		-category	"Other items.Other"
		-command	("preferencesWnd \"ColorManagement\";")
		ChangeColorPrefs;

	// Bake or Transfer surface details to texture maps
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kBakeSurfaceToTextureLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kBakeSurfaceToTextureAnnot"))
		-tags		($tag_Texturing)
		-keywords	($kw_Transfer_Maps + ";" + $kw_Baking + ";" + $kw_Bake)
		-category	"Other items.Other"
		-command	("performSurfaceSampling 1;")
		BakeSurfaceToTexture;

	// Pause Viewport update and evaluation
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kPauseViewportEvalLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kPauseViewportEvalAnnot"))
		-tags		($tag_Performance)
		-keywords	($kw_Pause)
		-category	"Other items.Other"
		-command	("ogs -pause;")
		PauseViewportEval;

	// Reset the Viewport
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kResetViewportLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kResetViewportAnnot"))
		-tags		($tag_Performance)
		-keywords	($kw_Reset)
		-category	"Other items.Other"
		-command	("ogs -reset")
		ResetViewport;

	// Opens the Viewport 2.0 Options
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kOpenViewportPrefsLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kOpenViewportPrefsAnnot"))
		-tags		($tag_Performance)
		-keywords	($kw_viewport + ";" + $kw_performance + ";" + $kw_display + ";" + $kw_transparency + ";" + $kw_uv_tile + ";" + $kw_ao + ";" + $kw_ambient_occlusion + ";" + $kw_udim)
		-category	"Other items.Other"
		-command	("createViewport20OptionsUI")
		OpenViewportPrefs;

	// Opens the Content Browser in the Bifrost Fluids preset folder
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kOpenBifContentBrowserLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kOpenBifContentBrowserAnnot"))
		-longAnnotation	(uiRes("m_defaultRunTimeCommands.kOpenBifContentBrowserLongAnnot"))
		-tags		($tag_Bifrost)
		-keywords	($kw_liquid + ";" + $kw_water + ";" + $kw_fluids + ";" + $kw_ocean + ";" + $kw_splash + ";" + $kw_waterfall + ";" + $kw_pour + ";" + $kw_wave + ";" + $kw_wake + ";" + $kw_drip)
		-category	"Other items.Other"
		-command	("ContentBrowserWindow; contentBrowserSetLocation(\"Bifrost Fluids\");")
		OpenBifContentBrowser;

	// Opens the Content Browser in the MASH presets folder
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kOpenMASHContentBrowserLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kOpenMASHContentBrowserAnnot"))
		-tags		($tag_Effects)
		-keywords	($kw_Scatter + ";" + $kw_Instance)
		-category	"Other items.Other"
		-command	("ContentBrowserWindow; contentBrowserSetLocation(\"MASH Examples\");")
		OpenMASHContentBrowser;

	// Enables the selection tool
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kEnableSelectToolLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kEnableSelectToolAnnot"))
		-tags		($tag_Select)
		-keywords	($kw_Select)
		-category	"Other items.Other"
		-command	("SelectTool;")
		EnableSelectTool;

	// Deletes unknown nodes in the scene (use with caution)
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kDeleteUnknownNodesLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kDeleteUnknownNodesAnnot"))
		-tags		($tag_Modify)
		-keywords	($kw_clean + ";" + $kw_flush)
		-category	"Other items.Other"
		-command	("delete `ls -type unknown`;")
		DeleteUnknownNodes;

	// Change the cameras to frame the selected object(s) without children in the view
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kFrameSelected2Lbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kFrameSelected2Annot"))
		-tags		($tag_Display)
		-keywords	($kw_Reset + ";" + $kw_Frame)
		-category	"Other items.Other"
		-command	("FrameSelectedWithoutChildren;")
		FrameSelected2;

	// Toggle Edit Pivot Mode
	runTimeCommand -default true
		-label		(uiRes("m_defaultRunTimeCommands.kToggleEditPivotLbl"))
		-annotation	(uiRes("m_defaultRunTimeCommands.kToggleEditPivotAnnot"))
		-tags		($tag_Modify)
		-keywords	($kw_move_pivot + ";" + $kw_rotate_pivot + ";" + $kw_orient_pivot)
		-category	"Other items.Other"
		-command	("ctxEditMode;")
		ToggleEditPivot;
}

addTTFMissingCommands();
