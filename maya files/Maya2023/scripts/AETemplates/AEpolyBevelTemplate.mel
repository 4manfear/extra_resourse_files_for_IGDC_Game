// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:	June 3, 1997
//
//  Procedure Name:
//	AEpolyBevelTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the polyBevel Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


global proc checkPolyBevelAutoFit ( string $nodeName )
{
        string $nodeAttr = $nodeName + ".autoFit";
        int $value = `getAttr $nodeAttr`;

        if ( $value ) {
                editorTemplate -dimControl $nodeName "roundness" true;
        } else {
                editorTemplate -dimControl $nodeName "roundness" false;
        }
}

global proc checkPolyBevelOffsetAsFraction ( string $nodeName )
{
        string $nodeAttr = $nodeName + ".offsetAsFraction";
        int $value = `getAttr $nodeAttr`;

        if ( $value ) {
                editorTemplate -dimControl $nodeName "offset" true;
                editorTemplate -dimControl $nodeName "fraction" false;
        } else {
                editorTemplate -dimControl $nodeName "fraction" true;
                editorTemplate -dimControl $nodeName "offset" false;
        }
}

global proc checkPolyBevelMergeVertices ( string $nodeName )
{
        string $nodeAttr = $nodeName + ".mergeVertices";
        int $value = `getAttr $nodeAttr`;

        if ( $value ) {
                editorTemplate -dimControl $nodeName "mergeVertexTolerance" false;
        } else {
                editorTemplate -dimControl $nodeName "mergeVertexTolerance" true;
        }
}

global proc AEpolyBevelTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;

		// basic bevel controls
		editorTemplate -beginLayout (uiRes("m_AEpolyBevelTemplate.kPolyBevelHistory")) -collapse 0;

			editorTemplate -addControl "offsetAsFraction" "checkPolyBevelOffsetAsFraction";

			// include base class/node attribute (world space) here
			editorTemplate -addControl "worldSpace";

			editorTemplate -addControl "offset";
			editorTemplate -addControl "fraction";
			editorTemplate -addControl "segments";

			editorTemplate -addControl "smoothingAngle";

			editorTemplate -addControl "autoFit" "checkPolyBevelAutoFit";
			editorTemplate -addControl "roundness";

			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kUVAssignment")) -addControl "uvAssignment";

		editorTemplate -endLayout;

		// merge vertex tab
		editorTemplate -beginLayout (uiRes("m_AEpolyBevelTemplate.kCleanup")) -collapse 1;

			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kSubdivideNgons")) -addControl "fillNgons";

			editorTemplate -addControl "miteringAngle";

			editorTemplate -addControl "angleTolerance";
	
			editorTemplate -addControl "mergeVertices" "checkPolyBevelMergeVertices";
			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kMergeTolerance")) -addControl "mergeVertexTolerance";

		editorTemplate -endLayout;

		editorTemplate -suppress "maya2015";

		// include/call base class/node attributes		
		AEpolyModifierInclude $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
