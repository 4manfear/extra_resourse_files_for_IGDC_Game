// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//  Procedure Name:
//	AEpointLightTemplate
//
//  Description:
//	Creates the attribute editor controls for the pointLightNode
//
//  Input Value:
//	nodeName
//
//  Output Value:
//	None
//



global proc AEpointLightFogNew (string $fogGeometry)
//
// Description:
//		Setup up button that makes fog.
//
{
	setUITemplate -pst attributeEditorTemplate;

	attrNavigationControlGrp -label (uiRes("m_AEpointLightTemplate.kLightFog"))
		-at $fogGeometry
		-ignoreNotSupported
		lightFogControl;

	setUITemplate -ppt;
}

global proc AEpointLightFogReplace (string $fogGeometry)
//
// Description:
//		Replace the button with the command to create fog
//		for the new light.
//
{
	attrNavigationControlGrp -edit
		-at $fogGeometry
		-ignoreNotSupported
		lightFogControl;
}


//
//  Procedure Name:
//	 AEpointLightGlowNew 
//
//

global proc AEpointLightGlowNew (string $lightGlow)
{
	setUITemplate -pst attributeEditorTemplate;

	attrNavigationControlGrp -label (uiRes("m_AEpointLightTemplate.kLightGlow"))
		-at $lightGlow
		-ignoreNotSupported
		lightGlowControl;

	setUITemplate -ppt;
}

//
//  Procedure Name:
//	AEpointLightGlowReplace
//
//

global proc AEpointLightGlowReplace (string $lightGlow)
{
	attrNavigationControlGrp -edit
		-at $lightGlow
		-ignoreNotSupported
		lightGlowControl;
}

//
//  Procedure Name:
//	AEpointLightTemplate
//
//

global proc AEpointLightTemplate ( string $nodeName )
{
	AEswatchDisplay $nodeName;

editorTemplate -beginScrollLayout;

	editorTemplate -beginLayout (uiRes("m_AEpointLightTemplate.kPointLightAttr")) -collapse 0;
		AElightCommon $nodeName;
		AEnonAmbientLightShapeNodeDecay $nodeName;
	editorTemplate -endLayout;

	editorTemplate -beginLayout (uiRes("m_AEpointLightTemplate.kLightEffects"));
			editorTemplate -callCustom 
				"AEpointLightFogNew" 		
				"AEpointLightFogReplace"
				"fogGeometry";
			editorTemplate -addControl "fogType";
			editorTemplate -addControl "fogRadius";
			editorTemplate -addControl "fogIntensity";

			editorTemplate -addSeparator;
			editorTemplate -callCustom 
				"AEpointLightGlowNew" 
				"AEpointLightGlowReplace" 
				"lightGlow";

			editorTemplate -suppress "fogType";
			editorTemplate -suppress "objectType";
			editorTemplate -suppress "pointWorld";
			editorTemplate -suppress "farPointWorld";
			editorTemplate -suppress "farPointCamera";
	editorTemplate -endLayout;

	editorTemplate -beginLayout (uiRes("m_AEpointLightTemplate.kShadowsLabel"));
		editorTemplate -addControl "shadowColor";

		// include the depth part of the nonExtendedLightShapeNode first
		AEnonExtendedLightShapeDepthMapAttr $nodeName;

		AElightCommonShadow1 $nodeName;
	
		// include the main part of the nonExtendedLightShapeNode
		AEnonExtendedLightShapeShadowAttr $nodeName;

		// include the last part of the lightNode
		AElightCommonShadow2 $nodeName;
	editorTemplate -endLayout;	

	// include all other inherited attrs
	AEshapeTemplate $nodeName;

	//suppressed attributes
	editorTemplate -suppress "receiveShadows";

editorTemplate -addExtraControls;
editorTemplate -endScrollLayout;
}
