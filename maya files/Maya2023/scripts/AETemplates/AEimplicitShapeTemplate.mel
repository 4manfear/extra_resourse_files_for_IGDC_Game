// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:	May 14, 1997
//
//  Procedure Name:
//	AEimplicitShapeTemplate
//
//  Description:
//	Creates the attribute editor controls for the implicitShapeNode
//
//  Input Value:
//	nodeName
//
//  Output Value:
//	None
//


//
//  Procedure Name:
//	checkImplicitAntialiasingOverride
//
//

global proc checkImplicitAntialiasingOverride( string $nodeName ) 
{
	// 
	string $nodeAttr = $nodeName + ".geometryAntialiasingOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "antialiasingLevel" false;
	} else {
		editorTemplate -dimControl $nodeName "antialiasingLevel" true;
	} 
}

//
//  Procedure Name:
//	checkImplicitShadingSamplesOverride
//
//

global proc checkImplicitShadingSamplesOverride ( string $nodeName ) 
{
	// Note: volume needs this attribute also!!
	string $nodeAttr = $nodeName + ".shadingSamplesOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "shadingSamples" false;
		editorTemplate -dimControl $nodeName "maxShadingSamples" false;
	} else {
		editorTemplate -dimControl $nodeName "shadingSamples" true;
		editorTemplate -dimControl $nodeName "maxShadingSamples" true;
	} 
}

//
//  Procedure Name:
//	checkImplicitVolumeSamplesOverride
//
//

global proc checkImplicitVolumeSamplesOverride ( string $nodeName ) 
{
	string $nodeAttr = $nodeName + ".volumeSamplesOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "volumeSamples" false;
	} else {
		editorTemplate -dimControl $nodeName "volumeSamples" true;
	}
}


//
//  Procedure Name
//	AEimplicitShapeTemplate
//

global proc AEimplicitShapeTemplate( string $nodeName )
{
	editorTemplate -suppress "compInstObjGroups";

	{
		editorTemplate -beginLayout (uiRes("m_AEimplicitShapeTemplate.kRenderStats")) ;
			editorTemplate -beginNoOptimize;
			editorTemplate -addControl "castsShadows";
			editorTemplate -addControl "receiveShadows";
			editorTemplate -suppress "motionBlur";
			editorTemplate -addControl "primaryVisibility";
			editorTemplate -addControl "smoothShading";
			editorTemplate -addControl "visibleInReflections";
			editorTemplate -addControl "visibleInRefractions";
			editorTemplate -endNoOptimize;
		
			editorTemplate -addSeparator;
			editorTemplate 
                -label (uiRes("m_AEimplicitShapeTemplate.kGeometryAntialiasingOverride")) 
                -addControl "geometryAntialiasingOverride" "checkImplicitAntialiasingOverride";
			editorTemplate -addControl "antialiasingLevel";

			editorTemplate -addControl "shadingSamplesOverride" "checkImplicitShadingSamplesOverride";
			editorTemplate -addControl "shadingSamples";
			editorTemplate -addControl "maxShadingSamples";
	
			editorTemplate -addControl "volumeSamplesOverride" "checkImplicitVolumeSamplesOverride";
			editorTemplate -addControl "volumeSamples";

			editorTemplate -addControl "depthJitter";
		editorTemplate -endLayout;
	}	

	// include/call base class/node attributes
	AEshapeTemplate $nodeName;

}
