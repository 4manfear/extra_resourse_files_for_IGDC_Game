// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//  Procedure Name:
//	AEfieldSpecialEffects
//
//  Description Name;
//	Creates the attribute editor controls for the field Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


//
//  Procedure Name:
//	AEapplyPerVertexNew
//

global proc AEapplyPerVertexNew ( string $applyPerVertex )
{
	string $nodeName[];
	tokenize($applyPerVertex, ".", $nodeName);
	
	setUITemplate -pst attributeEditorTemplate;
		checkBoxGrp -ncb 1 -label1 (uiRes("m_AEfieldSpecialEffects.kApplyPerVertex"))  ApplyPreVertexCheckBox;
	setUITemplate -ppt;
	
	connectControl -index 2  ApplyPreVertexCheckBox $applyPerVertex;
	
	checkAirPositional $nodeName;
}

//
//  Procedure Name:
//	AEapplyPerVertexReplace
//

global proc AEapplyPerVertexReplace ( string $applyPerVertex )
{
	string $nodeName[];
	tokenize($applyPerVertex, ".", $nodeName);

	connectControl -index 2  ApplyPreVertexCheckBox $applyPerVertex;

	checkAirPositional $nodeName;
}


//
//  Procedure Name:
//	checkAirPositional
//

global proc checkAirPositional ( string $nodeName[])
{
	if ( `getAttr ( $nodeName[0] + ".positional" )` ){
		checkBoxGrp -e -en 0 ApplyPreVertexCheckBox;
	} else {
		checkBoxGrp -e -en 1 ApplyPreVertexCheckBox;
	}
}

//
//  Procedure Name:
//	AEfieldNoScroll
//

global proc AEfieldSpecialEffects ( string $nodeName )
{
	editorTemplate -beginLayout (uiRes("m_AEfieldSpecialEffects.kSpecialEffects")) ;
		editorTemplate -callCustom "AEapplyPerVertexNew" 
					"AEapplyPerVertexReplace"
					"applyPerVertex";
	editorTemplate -endLayout;	
}	
