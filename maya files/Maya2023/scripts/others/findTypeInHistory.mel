// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  2005
//
//  Description: findTypeInHistory returns the node of the specified type that is
//  the closest traversal to the input object.
//		
//

global proc string findTypeInHistory(string $obj, string $type, int $future, int $past)
{
	if( $past && $future ){
		// In the case that the object type exists in both past and future
		// find the one that is fewer connections away.
		string $past[] = `listHistory -f 0 -bf -af $obj`;
		string $future[] = `listHistory -f 1 -bf -af $obj`;
		string $pastObjs[] = `ls -type $type $past`;
		string $futureObjs[] = `ls -type $type $future`;
		int $numPast = size( $pastObjs );
		int $numFuture = size( $futureObjs );
		if($numPast>0){
			if( $numFuture > 0) {
				int $i;
				int $min = size($future);
				if( size($past) < $min ){
					$min = size($past);
				}
				for( $i = 0; $i <  $min; $i++){
					if( $past[$i] == $pastObjs[0] ){
						return $pastObjs[0];
					}
					if( $future[$i] == $futureObjs[0] ){
						return $futureObjs[0];
					}
				}
			} else {
				return $pastObjs[0];
			}
		} else if( $numFuture > 0) {
			return $futureObjs[0];
		}
	} else {
		if( $past ){
			string $hist[] = `listHistory -f 0 -bf -af $obj`;
			string $objs[] = `ls -type $type $hist`;
			if( size($objs) > 0 ){
				return $objs[0];
			}
		}
		if( $future ){
			string $hist[] = `listHistory -f 1 -bf -af $obj`;
			string $objs[] = `ls -type $type $hist`;
			if( size($objs) > 0 ){
				return $objs[0];
			}
		}
	}
	return "";
}
