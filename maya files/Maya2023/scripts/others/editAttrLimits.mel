// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//
//
//<doc>
//<name editAttrLimits>
//<synopsis>
//     void editAttrLimits(string $attr, float $min, float $max)
//<keywords>
//		edit attribute limits min max
//<related addAttr attributeQuery>
//
//<description>
//  	Edit the attribute min and max of dynamic attributes.
//
//<flags>
//		string	$attr	Attribute to be altered
//		float	$min	New attribute minimum
//		float	$max	New attribute maximum
//
//<examples>
//      createNode -n sinNode transform;
//		addAttr -at double -min 0.0 -max 2.0 -ln sinValue;
//		attributeQuery -range -n sinNode sinValue;
//		// Result: 0 2 //
//		editAttrLimits( "sinNode.sinValue", -1.0, 1.0 );
//		attributeQuery -range -n sinNode sinValue;
//		// Result: -1 1 //
//
//<notes>
//      This command only works on numeric type attributes that can have
//      limits defined.  No checking is performed to verify the attribute
//		type so check types before calling it.
//
//</doc>
//
global proc editAttrLimits (string $objectAttr, float $min, float $max)
{
	// this script will allow the user to edit the min and max value of an
	// attribute

	// first find out what connections are going into and out of the object
	$input = `listConnections -source true -d false -p true $objectAttr`;
	$output = `listConnections -source false -d true -p true $objectAttr`;

	// get the current value of the attr
	$val = `getAttr $objectAttr`;

	// break the connections if they exist
	string $dest;
	if (size($input) > 0)
	{
		disconnectAttr $input[0] $objectAttr;
	}
	for( $dest in $output )
	{
		disconnectAttr $objectAttr $dest;
	}

	// now tokenize $objectAttr in order to get it's individual parts
	string $parts[2];
	tokenize ($objectAttr, ".", $parts);
	$object = $parts[0];
	$attr = $parts[1];

	// get the type of attribute this is
	$type = `getAttr -type $objectAttr`;

	// delete the attribute
	deleteAttr -at $attr $object;

	// re-create the attribute with the new min/max
	addAttr -at $type -ln $attr -min $min -max $max $object;

	// set the value to be what it used to be
	setAttr $objectAttr $val;

	// remake the connections
	if (size($input) > 0)
	{
		connectAttr $input[0] $objectAttr;
	}
	for( $dest in $output )
	{
		connectAttr $objectAttr $dest;
	}
}
