// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
proc addDeleteByTypeSubMenu()
{
	string $cmd = "DeleteHistory";
	menuItem
		-rtc ($cmd)
		clearConstHistoryTypesItem;

	$cmd = "BakeNonDefHistory";
	menuItem
		-rtc $cmd deleteNonDefHistoryItem;

		$cmd = "BakeNonDefHistoryOptions";
	    menuItem -optionBox true
			-rtc $cmd delNonDefHistoryOptions;

	menuItem -divider true;

	$cmd = "DeleteChannels";
	menuItem -allowOptionBoxes true
		-rtc ($cmd)
		clearChannelsTypesItem;

		$cmd = "DeleteChannelsOptions";
		menuItem -optionBox true
			-rtc ($cmd)
			clearAllChannelsDialogItem;

	$cmd = "DeleteStaticChannels";
	menuItem
		-allowOptionBoxes true
		-rtc ($cmd)
		clearStaticTypesItem;

		$cmd = "DeleteStaticChannelsOptions";
		menuItem -optionBox true
			-rtc ($cmd)
			clearAllStaticChannelsDialogItem;

	menuItem -divider true;

	$cmd = "DeleteConstraints";
	menuItem
		-rtc ($cmd)
		clearConstraintTypesItem;

	$cmd = "DeleteMotionPaths";
	menuItem
		-rtc ($cmd)
		clearMotionPathTypesItem;

	$cmd = "DeleteExpressions";
	menuItem
		-allowOptionBoxes true
		-rtc ($cmd)
		clearExpressionTypesItem;

		$cmd = "DeleteExpressionsOptions";
		menuItem -optionBox true
			-rtc ($cmd)
			clearAllExpressionsDialogItem;

	//	Sounds sub-menu.
	//
	string $soundMenu = `menuItem -label (uiRes("m_deleteByTypeSubMenu.kDeleteSounds"))
		-subMenu true -allowOptionBoxes false deleteSoundSubMenuItem`;

	menuItem -e -pmc (
		"updateSoundMenu { " +
			"\"" + $soundMenu + "\", " +
			"\"delete %s\"" +
		"};"
		)
		$soundMenu;

	setParent -menu ..;

	menuItem -divider true;

	menuItem
		-rtc ("DeleteSelectedContainers")
		delContainersItem;

	menuItem -divider true;

	$cmd = "DeleteRigidBodies";
	menuItem
		-rtc ($cmd)
		clearRigidBodyTypesItem;
}

global proc deleteByTypeSubMenu(string $version)
{
	string $label = (uiRes("m_deleteByTypeSubMenu.kDeleteByType"));
	if ("" != $version)
	{
		menuItem -label $label -version $version
			-subMenu true -allowOptionBoxes true -to true clearActiveItem;
	}
	else
	{
		menuItem -label $label
			-subMenu true -allowOptionBoxes true -to true clearActiveItem;
	}

	addDeleteByTypeSubMenu();

	setParent -menu ..;
}
