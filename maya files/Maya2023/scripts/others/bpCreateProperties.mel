// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
proc createPencilOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPPencilOptions")) 
		bpPencilOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPPencilSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPPencilSizeAnnot"))
					bpPencilSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPPencilOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPPencilOpacityAnnot"))
					bpPencilOpacity;

			checkBoxGrp
				-label "" -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPPencilEnableTabletPressureOpacity"))
				-annotation (uiRes("m_bpCreateProperties.kBPPencilEnableTabletPressureOpacityAnnot")) 
				bpPencilEnableTabletPressureOpacityChkBox;

			checkBoxGrp
				-label "" -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPPencilEnableTabletPressureSize"))
				-annotation (uiRes("m_bpCreateProperties.kBPPencilEnableTabletPressureSizeAnnot")) 
				bpPencilEnableTabletPressureSizeChkBox;

		setParent ..;

	setParent ..; //bpPencilOptions
}

proc createBrushOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPBrushOptions")) 
		bpBrushOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPBrushSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPBrushSizeAnnot"))
					bpBrushSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPBrushOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPBrushOpacityAnnot"))
					bpBrushOpacity;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPBrushHardness"))
					-min 0 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPBrushHardnessAnnot"))
					bpBrushHardness;

			checkBoxGrp
				-label "" -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPBrushEnableTabletPressureOpacity"))
				-annotation (uiRes("m_bpCreateProperties.kBPBrushEnableTabletPressureOpacityAnnot")) 
				bpBrushEnableTabletPressureOpacityChkBox;

			checkBoxGrp
				-label "" -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPBrushEnableTabletPressureSize"))
				-annotation (uiRes("m_bpCreateProperties.kBPBrushEnableTabletPressureSizeAnnot")) 
				bpBrushEnableTabletPressureSizeChkBox;

		setParent ..;

	setParent ..; //bpBrushOptions
}

proc createEraserOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPEraserOptions")) 
		bpEraserOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPEraserSize"))
					-min 1 -max 250
					-annotation (uiRes("m_bpCreateProperties.kBPEraserSizeAnnot"))
					bpEraserSize;

			checkBoxGrp
				-label "" -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPEraserEnableTabletPressureSize"))
				-annotation (uiRes("m_bpCreateProperties.kBPEraserEnableTabletPressureSizeAnnot")) 
				bpEraserEnableTabletPressureSizeChkBox;

		setParent ..;

	setParent ..; //bpEraserOptions
}

proc createTextOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPTextOptions")) 
		bpTextOptions;

		columnLayout;

			global int $gOptionsTemplateLabelOffset;
			global int $gOptionsTemplateLabelWidth;
			int $labelWidth = $gOptionsTemplateLabelWidth - $gOptionsTemplateLabelOffset;
			rowColumnLayout -nc 2 -co 1 "right" $gOptionsTemplateLabelOffset -adj 2 bpTextFontSelectLayout;
				
				text -align "right" -width $labelWidth
					(uiRes("m_bpCreateProperties.kBPFont"));

				string $currentLayout = `setParent -q`;
				python("from maya.plugin.bluepencil.bluePencilFontSelectWidget import build_bp_font_select_widget");
				python("build_bp_font_select_widget('" + $currentLayout + "', 'bpTextFontSelect')");
			setParent ..;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPTextSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPTextSizeAnnot"))
					bpTextSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPTextOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPTextOpacityAnnot"))
					bpTextOpacity;

		setParent ..;

	setParent ..; //bpTextOptions
}

proc createLineOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPLineOptions")) 
		bpLineOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPLineSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPLineSizeAnnot"))
					bpLineSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPLineOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPLineOpacityAnnot"))
					bpLineOpacity;

		setParent ..;

	setParent ..; //bpLineOptions
}

proc createArrowOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPArrowOptions")) 
		bpArrowOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPArrowSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPArrowSizeAnnot"))
					bpArrowSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPArrowOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPArrowOpacityAnnot"))
					bpArrowOpacity;

		setParent ..;

	setParent ..; //bpArrowOptions
}

proc createEllipseOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPEllipseOptions")) 
		bpEllipseOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPEllipseSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPEllipseSizeAnnot"))
					bpEllipseSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPEllipseOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPEllipseOpacityAnnot"))
					bpEllipseOpacity;

		setParent ..;

	setParent ..; //bpEllipseOptions
}

proc createRectangleOptions(){
	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBPRectangleOptions")) 
		bpRectangleOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPRectangleSize"))
					-min 1 -max 100 -fmx 250
					-annotation (uiRes("m_bpCreateProperties.kBPRectangleSizeAnnot"))
					bpRectangleSize;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPRectangleOpacity"))
					-min 1 -max 100
					-annotation (uiRes("m_bpCreateProperties.kBPRectangleOpacityAnnot"))
					bpRectangleOpacity;

		setParent ..;

	setParent ..; //bpRectangleOptions
}

proc bpCreateDrawingFrame() {
	rowColumnLayout -nc 8 
		bpToolSelectionLayout;

		symbolCheckBox -w 40 -h 40 -i "BP_pencil.png"
			-annotation (uiRes("m_bpCreateProperties.kBPPencil")) bpPencilChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_brush.png"
			-annotation (uiRes("m_bpCreateProperties.kBPBrush")) bpBrushChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_eraser.png"
			-annotation (uiRes("m_bpCreateProperties.kBPEraser")) bpEraserChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_text.png"
			-annotation (uiRes("m_bpCreateProperties.kBPText")) bpTextChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_line.png"
			-annotation (uiRes("m_bpCreateProperties.kBPLine")) bpLineChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_arrow.png"
			-annotation (uiRes("m_bpCreateProperties.kBPArrow")) bpArrowChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_ellipse.png"
			-annotation (uiRes("m_bpCreateProperties.kBPEllipse")) bpEllipseChBx;

		symbolCheckBox -w 40 -h 40 -i "BP_rectangle.png"
			-annotation (uiRes("m_bpCreateProperties.kBPRectangle")) bpRectangleChBx;

	setParent ..; // bpToolSelectionLayout

	colorSliderGrp -label (uiRes("m_bpCreateProperties.kBPDrawColor"))
		-useDisplaySpace 1
		-useVpColorPicker 0
		-annotation (uiRes("m_bpCreateProperties.kBPDrawColorAnnot"))
		bpDrawColorPicker;

	createPencilOptions();
	createBrushOptions();
	createEraserOptions();
	createTextOptions();
	createLineOptions();
	createArrowOptions();
	createEllipseOptions();
	createRectangleOptions();
}

proc createDisplayColorOptions(){
	frameLayout -collapsable true -collapse true 
		-l (uiRes("m_bpCreateProperties.kBPDisplayColorOptions")) 
		bpGhostingDisplayColor;

		columnLayout;

			checkBoxGrp -ncb 1
				-label1 (uiRes("m_bpCreateProperties.kBPGhostColorOverride"))
				-annotation (uiRes("m_bpCreateProperties.kBPGhostColorOverrideAnnot")) 
				bpGhostColorOverrideChkBox;

			colorSliderGrp -label (uiRes("m_bpCreateProperties.kBPPreFramesColor"))
				-useDisplaySpace 1
				-useVpColorPicker 0
				-annotation (uiRes("m_bpCreateProperties.kBPPreFramesColorAnnot"))
				bpPreFramesColorPicker;

			colorSliderGrp -label (uiRes("m_bpCreateProperties.kBPPostFramesColor"))
				-useDisplaySpace 1
				-useVpColorPicker 0
				-annotation (uiRes("m_bpCreateProperties.kBPPostFramesColorAnnot"))
				bpPostFramesColorPicker;

		setParent ..;

	setParent ..; //bpGhostingOptions
}

proc createGhostingOptions(){
	frameLayout -collapsable true -collapse true 
		-l (uiRes("m_bpCreateProperties.kBPGhostingOptions")) 
		bpGhostingOptions;

		columnLayout;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPPreFrames"))
					-min 1 -max 10
					-annotation (uiRes("m_bpCreateProperties.kBPPreFramesAnnot"))
					bpPreFrames;

			intSliderGrp -field true -label (uiRes("m_bpCreateProperties.kBPPostFrames"))
					-min 1 -max 10
					-annotation (uiRes("m_bpCreateProperties.kBPPostFramesAnnot"))
					bpPostFrames;

		setParent ..;

		// Add display color sub frame
		createDisplayColorOptions();

	setParent ..; //bpGhostingOptions
}

proc bpCreateGhostingFrame() {
	columnLayout;

		checkBoxGrp -ncb 2
			-label1 (uiRes("m_bpCreateProperties.kBPGhostPrevious"))
			-label2 (uiRes("m_bpCreateProperties.kBPGhostNext"))
			-annotation (uiRes("m_bpCreateProperties.kBPGhostingEnabledAnnot")) 
			bpGhostingEnabledChkBox;

	setParent ..;

	createGhostingOptions();
}

proc bpCreateRetimingFrame() {
	global int $gOptionsTemplateLabelOffset;
	rowColumnLayout -nc 4 -co 1 "right" $gOptionsTemplateLabelOffset;

		global int $gOptionsTemplateLabelWidth;
		text -align "right" -width $gOptionsTemplateLabelWidth
			(uiRes("m_bpCreateProperties.kBPFrameRange"));
		
		intField -min 1 -max 9999 -v 1 -w 36
			-annotation (uiRes("m_bpCreateProperties.kBPFrameRangeAnnot")) 
			bpRetimingFrameRange;

		iconTextButton -style "iconOnly" -w 40
			-image "BP_retimePrevious.png"
			-annotation (uiRes("m_bpCreateProperties.kBPRetimePreviousAnnot"))
			bpRetimeBackwardBtn;

		iconTextButton -style "iconOnly" -w 40
			-image "BP_retimeNext.png"
			-annotation (uiRes("m_bpCreateProperties.kBPRetimeNextAnnot"))
			bpRetimeForwardBtn;

	setParent ..;

	checkBoxGrp
		-label1 (uiRes("m_bpCreateProperties.kBPMoveToNextFrame"))
		-annotation (uiRes("m_bpCreateProperties.kBPMoveToNextFrameAnnot")) 
		bpMoveToNextFrameChkBox;
}

proc bpCreateFrameActionsFrame() {

	int $buttonSize = 35;
	string $frameSectionLayout = `formLayout`;
	string $frameButtonLayout = `rowColumnLayout -nc 10`;
			symbolButton -w 35 -h 35
				-image "BP_addFrame.png"
				-c	("bluePencilFrame -insert;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameAddAnnot"))
				bpFrameAddBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_clearFrame.png"
				-c	("bluePencilFrame -clear;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameClearAnnot"))
				bpFrameClearBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_deleteFrame.png"
				-c	("bluePencilFrame -delete;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameDeleteAnnot"))
				bpFrameDeleteBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_duplicateFrame.png"
				-c	("bluePencilFrame -duplicate;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameDuplicateAnnot"))
				bpFrameDuplicateBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_cutFrame.png"
				-c	("bluePencilFrame -cut;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameCutAnnot"))
				bpFrameCutBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_copyFrame.png"
				-c	("bluePencilFrame -copy;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameCopyAnnot"))
				bpFrameCopyBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_pasteFrame.png"
				-c	("bluePencilFrame -paste;")
				-annotation (uiRes("m_bpCreateProperties.kBPFramePasteAnnot"))
				bpFramePasteBtn;

			separator -hr false -w 5 -h 30 -style "shelf";

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_goToPreviousFrame.png"
				-c	("bluePencilFrame -stepBack;")
				-annotation (uiRes("m_bpCreateProperties.kBPFramePreviousAnnot"))
				bpFramePreviousBtn;

			symbolButton -w $buttonSize -h $buttonSize
				-image "BP_goToNextFrame.png"
				-c	("bluePencilFrame -stepForward;")
				-annotation (uiRes("m_bpCreateProperties.kBPFrameNextAnnot"))
				bpFrameNextBtn;
		setParent ..;
	setParent ..;

	formLayout -edit 
		-attachForm $frameButtonLayout "top" 5
		-attachForm $frameButtonLayout "left" 0
		-attachForm $frameButtonLayout "bottom" 5
		-attachForm $frameButtonLayout "right" 0
		$frameSectionLayout;
}

// This layout must have the same name as the context className so that it can
// be found and reused when the tool is deselected and reselected.
global proc bpCreateProperties(string $layoutName) {
	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	setUITemplate -pushTemplate OptionsTemplate;

	columnLayout $layoutName;

	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBluePencilDrawing")) 
		bpDrawSettings;

		bpCreateDrawingFrame();

		setParent ..; //bpDrawSettings

	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBluePencilLayers")) 
		bpDrawLayers;
		
		// Create layout where layer manager will be inserted
		columnLayout bpDrawLayersContent;
		setParent ..; //bpDrawLayersContent

		setParent ..; //bpDrawLayers

	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBluePencilGhosting")) 
		bpDrawGhosting;

		bpCreateGhostingFrame();

		setParent ..; //bpDrawGhosting

	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBluePencilRetiming")) 
		bpDrawRetiming;

		bpCreateRetimingFrame();

		setParent ..; //bpDrawRetiming

	frameLayout -collapsable true -collapse false 
		-l (uiRes("m_bpCreateProperties.kBluePencilFrame")) 
		bpDrawFrame;

		bpCreateFrameActionsFrame();

		setParent ..; //bpDrawFrame

	setParent ..;
	setUITemplate -popTemplate;
}
