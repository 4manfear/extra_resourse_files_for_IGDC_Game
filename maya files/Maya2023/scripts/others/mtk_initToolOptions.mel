// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc mtk_initToolOptions( int $forceFactorySettings, string $tool)
{
	if ($tool == "quadraw" || $tool == "all")
	{
		string $cat = "Quad Draw";

		// Auto Weld
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawAutoWeld 1;
		int $intVal = `optionVar -q quadDrawAutoWeld`;
		nexOpt -e useAutoWeld $intVal;

		// Auto Weld Tolerance
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawAutoWeldTolerance 10;
		$intVal = `optionVar -q quadDrawAutoWeldTolerance`;
		nexOpt -e autoWeldTolerance $intVal;

		// Relax
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawRelax 3;
		$intVal = `optionVar -q quadDrawRelax`;
		nexOpt -e relaxAffects $intVal;

		// Extend
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawExtend 0;
		$intVal = `optionVar -q quadDrawExtend`;
		nexOpt -e extendType $intVal;

		// Strip Size
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawStripSize 20;
		$intVal = `optionVar -q quadDrawStripSize`;
		nexOpt -e quaDrawStripSize $intVal;
	}

	if ($tool == "cut" || $tool == "all")
	{
		string $cat = "Multi-Cut";

		// Snap Step
		optionVar -init $forceFactorySettings -category $cat -iv multiCutSnapStep 10;
		int $intVal = `optionVar -q multiCutSnapStep`;
		nexOpt -e cutSnapAngle $intVal;

		// Smoothing Angle
		optionVar -init $forceFactorySettings -category $cat -iv multiCutSmoothingAngle 180;
		$intVal = `optionVar -q multiCutSmoothingAngle`;
		nexOpt -e cutSmoothingAngle $intVal;

		// Use Edge Flow
		optionVar -init $forceFactorySettings -category $cat -iv multiCutUseEdgeFlow 0;
		$intVal = `optionVar -q multiCutUseEdgeFlow`;
		nexOpt -e useEdgeFlow $intVal;

		// Edge Flow
		optionVar -init $forceFactorySettings -category $cat -fv multiCutEdgeFlow 1.0;
		float $fltVal = `optionVar -q multiCutEdgeFlow`;
		nexOpt -e edgeFlowValue $fltVal;

		// Subdivisions
		optionVar -init $forceFactorySettings -category $cat -iv multiCutSubdivisions 1;
		$intVal = `optionVar -q multiCutSubdivisions`;
		nexOpt -e cutSubdivisions $intVal;

		// Delete Faces
		optionVar -init $forceFactorySettings -category $cat -iv multiCutDeleteFaces 0;
		$intVal = `optionVar -q multiCutDeleteFaces`;
		nexOpt -e useDeleteFaces $intVal;

		// Extract Faces
		optionVar -init $forceFactorySettings -category $cat -iv multiCutExtractFaces 0;
		$intVal = `optionVar -q multiCutExtractFaces`;
		nexOpt -e useExtractFaces $intVal;

		// Slice Ignore Backfaces
		optionVar -init $forceFactorySettings -category $cat -iv multiCutIgnoreBackfaces 0;
		$intVal = `optionVar -q multiCutIgnoreBackfaces`;
		nexOpt -e sliceIgnoreBackfaces $intVal;

		// Extract XYZ Offset
		optionVar -init $forceFactorySettings -category $cat -fv3 multiCutExtractOffset 0.5 0.5 0.5;
		float $fltArr[] = `optionVar -q multiCutExtractOffset`;
		nexOpt -e extractFacesX $fltArr[0];
		nexOpt -e extractFacesY $fltArr[1];
		nexOpt -e extractFacesZ $fltArr[2];

		// Line Color
		optionVar -init $forceFactorySettings -category $cat -fv3 multiCutHiliteColorLine 1.0 0.5 0;
		$fltArr = `optionVar -q multiCutHiliteColorLine`;
		nexOpt -e hiliteColorCutLine $fltArr[0] $fltArr[1] $fltArr[2] 1;

		// Vertex Color
		optionVar -init $forceFactorySettings -category $cat -fv3 multiCutHiliteColorVert 1 1 0;
		$fltArr = `optionVar -q multiCutHiliteColorVert`;
		nexOpt -e hiliteColorCutVert $fltArr[0] $fltArr[1] $fltArr[2] 1;

		// Edge Color
		optionVar -init $forceFactorySettings -category $cat -fv3 multiCutHiliteColorEdge 0 0 1;
		$fltArr = `optionVar -q multiCutHiliteColorEdge`;
		nexOpt -e hiliteColorCutEdge $fltArr[0] $fltArr[1] $fltArr[2] 1;

		// Face Color
		optionVar -init $forceFactorySettings -category $cat -fv3 multiCutHiliteColorFace 1 1 1;
		$fltArr = `optionVar -q multiCutHiliteColorFace`;
		nexOpt -e hiliteColorCutFace $fltArr[0] $fltArr[1] $fltArr[2] 1;
	}

	if ($tool == "connect" || $tool == "all")
	{
		string $cat = "Connect";

		// Connect Mode
		optionVar -init $forceFactorySettings -category $cat -sv connectToolMode "segments";
		string $strVal = `optionVar -q connectToolMode`;
		nexOpt -e connectCurLmbMap $strVal;

		// Connect preferences need to be moved to nexOpt since nexCtx can only be used if
		// the connect tool is active which means they will never be saved/loaded correctly.
		int $connectToolActive = (`nexOpt -q manipType` == "connect");

		// Slide
		optionVar -init $forceFactorySettings -category $cat -fv connectToolSlide 0.5;
		if ($connectToolActive) {
			float $fltVal = `optionVar -q connectToolSlide`;
			nexCtx -e -mv connect slide $fltVal;
		}

		// Segments
		optionVar -init $forceFactorySettings -category $cat -iv connectToolSegments 1;
		if ($connectToolActive) {
			int $intVal = `optionVar -q connectToolSegments`;
			nexCtx -e -mv connect segments $intVal;
		}

		// Pinch
		optionVar -init $forceFactorySettings -category $cat -fv connectToolPinch 0.0;
		if ($connectToolActive) {
			$fltVal = `optionVar -q connectToolPinch`;
			nexCtx -e -mv connect pinch $fltVal;
		}
	}

	if ($tool == "quadraw" || $tool == "cut" || $tool == "all")
	{
		string $cat = "Quad Draw";

		// Use Mesh Alpha
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawUseMeshAlpha 1;
		int $intVal = `optionVar -q quadDrawUseMeshAlpha`;
		nexOpt -e useMeshAlpha $intVal;
	
		// Mesh Alpha
		optionVar -init $forceFactorySettings -category $cat -fv quadDrawMeshAlpha 0.75;
		float $fltVal = `optionVar -q quadDrawMeshAlpha`;
		nexOpt -e meshAlpha $fltVal;

		// Use Mesh Alpha
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawUseMeshOffset 0;
		$intVal = `optionVar -q quadDrawUseMeshOffset`;
		nexOpt -e useMeshOffset $intVal;

		// Mesh Offset
		optionVar -init $forceFactorySettings -category $cat -fv quadDrawMeshOffset 0.0;
		$fltVal = `optionVar -q quadDrawMeshOffset`;
		nexOpt -e meshOffset $fltVal;

		// Overlay Append Mesh
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawOverlayAppendMesh 1;
		$intVal = `optionVar -q quadDrawOverlayAppendMesh`;
		nexOpt -e overlayAppendMesh $intVal;

		// Overlay Append Mesh Color
		optionVar -init $forceFactorySettings -category $cat -fv4  quadDrawOverlayAppendMeshColor 0 0 0 1;
		float $fltArr[] = `optionVar -q quadDrawOverlayAppendMeshColor`;
		nexOpt -e appendMeshColor $fltArr[0] $fltArr[1] $fltArr[2] $fltArr[3];

		// Use Mesh Color Override
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawUseMeshColorOverride 1;
		$intVal = `optionVar -q quadDrawUseMeshColorOverride`;
		nexOpt -e useMeshColorOverride $intVal;

		// Mesh Color Override
		optionVar -init $forceFactorySettings -category $cat -fv3 quadDrawMeshColorOverride 0 0.33 1;
		$fltArr = `optionVar -q quadDrawMeshColorOverride`;
		nexOpt -e meshColorOverride $fltArr[0] $fltArr[1] $fltArr[2] 1;

		// Snap to Backfaces
		optionVar -init $forceFactorySettings -category $cat -iv quadDrawSnapToBackfaces 0;
		$intVal = `optionVar -q quadDrawSnapToBackfaces`;
		nexOpt -e snapToBackfaces $intVal;
	}
}


