// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc xgmToggleCombInvertFrozenEffect()
{
	int $newInvertFrozenValue = !`xgmCombBrushContext -q -freezeMode xgmCombBrushTool`;
	xgmCombBrushContext -e -freezeMode $newInvertFrozenValue xgmCombBrushTool;
}

global proc xgmToggleCombFalloffColor()
{
	int $newFalloffColorValue = !`xgmCombBrushContext -q -fc xgmCombBrushTool`;
	xgmCombBrushContext -e -fc $newFalloffColorValue xgmCombBrushTool;
}

global proc xgmToggleCombPreselectionHighlight()
{
	int $newPreselectionHighlight = !`xgmCombBrushContext -q -ps xgmCombBrushTool`;
	xgmCombBrushContext -e -ps $newPreselectionHighlight xgmCombBrushTool;
}

global proc xgmToggleCombShowFrozen()
{
	int $newShowFrozen = !`xgmCombBrushContext -q -sf xgmCombBrushTool`;
	xgmCombBrushContext -e -sf $newShowFrozen xgmCombBrushTool;
}

global proc xgmToggleCombEnableCollide()
{
	int $newEnableCollide = !`xgmCombBrushContext -q -ec xgmCombBrushTool`;
	xgmCombBrushContext -e -ec $newEnableCollide xgmCombBrushTool;
}

global proc xgmToggleCombEnableRootToTipFalloff()
{
	int $newEnableRootToTip = !`xgmCombBrushContext -q -ert xgmCombBrushTool`;
	xgmCombBrushContext -e -ert $newEnableRootToTip xgmCombBrushTool;
}

global proc xgmToggleCombFilterBackfaces()
{
	int $newFilterBackfaces = !`xgmCombBrushContext -q -fb xgmCombBrushTool`;
	xgmCombBrushContext -e -fb $newFilterBackfaces xgmCombBrushTool;
}

global proc xgmSwitchCombFallOffType(string $falloffType) 
{
	xgmCombBrushContext -e -brushFalloffType $falloffType xgmCombBrushTool;
}

global proc contextXGenCombToolMM()
{
	int $currentInvertFrozen = !`xgmCombBrushContext -q -freezeMode xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kInvertFrozenEffect"))
		-command xgmToggleCombInvertFrozenEffect
		-checkBox $currentInvertFrozen
		-radialPosition "N" 
		-enableCommandRepeat 1
		;

	int $currentFalloffColor = `xgmCombBrushContext -q -fc xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kBrushFalloffColor"))
		-command xgmToggleCombFalloffColor
		-checkBox $currentFalloffColor
		-radialPosition "NE" 
		-enableCommandRepeat 1
		;

	int $currentPreselectionHighlight = `xgmCombBrushContext -q -ps xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kPreselectionHighlight"))
		-command xgmToggleCombPreselectionHighlight 
		-checkBox $currentPreselectionHighlight
		-radialPosition "E"
		-enableCommandRepeat 1
		;

	int $currentShowFrozen = `xgmCombBrushContext -q -sf xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kShowFrozen"))
		-command xgmToggleCombShowFrozen 
		-checkBox $currentShowFrozen
		-radialPosition "SE" 
		-enableCommandRepeat 1
		;

	int $currentEnableCollide = `xgmCombBrushContext -q -ec xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kCollideWithMeshes"))
		-command xgmToggleCombEnableCollide 
		-checkBox $currentEnableCollide
		-radialPosition "SW" 
		-enableCommandRepeat 1
		;

	int $currentRootToTipFalloff = `xgmCombBrushContext -q -ert xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kRootToTipFalloff"))
		-command xgmToggleCombEnableRootToTipFalloff
		-checkBox $currentRootToTipFalloff
		-radialPosition "W" 
		-enableCommandRepeat 1
		;

	int $currentFilterBackFaces = `xgmCombBrushContext -q -fb xgmCombBrushTool`;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kFilterBackFaces"))
		-command xgmToggleCombFilterBackfaces
		-checkBox $currentFilterBackFaces
		-radialPosition "NW" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kFalloffType"))
		-subMenu 1
		-enableCommandRepeat 1
		;
		
		radioMenuItemCollection;
		string $currentFallOffType = `xgmCombBrushContext -q -bft xgmCombBrushTool`;
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kScreen"))
			-command "xgmSwitchCombFallOffType(\"screen\")"
			-radioButton ($currentFallOffType == "screen")
			-enableCommandRepeat 1
			;
			
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kVolume"))
			-command "xgmSwitchCombFallOffType(\"volume\")"
			-radioButton ($currentFallOffType == "volume")
			-enableCommandRepeat 1
			;
			
	setParent -m ..;

	string $brushCmd = "xgmCombBrushContext";
	string $tool = "xgmCombBrushTool";
	string $flag = "-brushFalloffCurve";
	string $defaultValFlag = "-defaultBrushFalloffCurve";
	string $param = $brushCmd + "\", \"" + $tool + "\", \"" + $flag + "\", \"" + $defaultValFlag;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kAdjustBrushFalloffCurve"))
		-command ("xgmMarkingMenuAdjustFalloffCurve( \"" + $param + "\" )")
		-enableCommandRepeat 1
		;

	$flag = "-rootToTipCurve";
	$defaultValFlag = "-defaultRootToTipCurve";
	$param = $brushCmd + "\", \"" + $tool + "\", \"" + $flag + "\", \"" + $defaultValFlag;
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kAdjustRootToTipFalloffCurve"))
		-command ("xgmMarkingMenuAdjustFalloffCurve( \"" + $param + "\" )")
		-enableCommandRepeat 1
		;

	
	menuItem
		-label (uiRes("m_contextXGenCombToolMM.kSymmetry"))
		-subMenu 1
		-enableCommandRepeat 1
		;
		
		radioMenuItemCollection;
		string $currentSymmetryType = `xgmCombBrushContext -q -brushSymmetryType xgmCombBrushTool`;
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kOff"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 0)"
			-radioButton ($currentSymmetryType == 0)
			-enableCommandRepeat 1
			;
			
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kObjectX"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 1)"
			-radioButton ($currentSymmetryType == 1)
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kObjectY"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 2)"
			-radioButton ($currentSymmetryType == 2)
			-enableCommandRepeat 1
			;
			
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kObjectZ"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 3)"
			-radioButton ($currentSymmetryType == 3)
			-enableCommandRepeat 1
			;
			
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kWorldX"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 4)"
			-radioButton ($currentSymmetryType == 4)
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kWorldY"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 5)"
			-radioButton ($currentSymmetryType == 5)
			-enableCommandRepeat 1
			;
			
		menuItem
			-label (uiRes("m_contextXGenCombToolMM.kWorldZ"))
			-command "xgmSwitchSymmetryType(\"xgmCombBrushContext\", \"xgmCombBrushTool\", 6)"
			-radioButton ($currentSymmetryType == 6)
			-enableCommandRepeat 1
			;

	setParent -m ..;
	
	setParent -menu ..;

}