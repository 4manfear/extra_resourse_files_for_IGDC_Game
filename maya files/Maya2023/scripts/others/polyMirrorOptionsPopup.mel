// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc polyMirrorOptionsPopup( string $node )
{
	int $directionValue = `getAttr ($node + ".direction")`;

	menuItem 
		-label (uiRes("m_polyMirrorOptionsPopup.kDirectionLabel"))
		-subMenu 1
		-radialPosition	"E";

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kPlusX"))
			-radialPosition	"N"
			-checkBox (0 == $directionValue)
			-command ("setAttr " + $node + ".direction 0");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kMinuxX"))
			-radialPosition	"NE"
			-checkBox (1 == $directionValue)
			-command ("setAttr " + $node + ".direction 1");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kPlusY"))
			-radialPosition	"E"
			-checkBox (2 == $directionValue)
			-command ("setAttr " + $node + ".direction 2");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kMinuxY"))
			-radialPosition	"SE"
			-checkBox (3 == $directionValue)
			-command ("setAttr " + $node + ".direction 3");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kPlusZ"))
			-radialPosition	"S"
			-checkBox (4 == $directionValue)
			-command ("setAttr " + $node + ".direction 4");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kMinuxZ"))
			-radialPosition	"SW"
			-checkBox (5 == $directionValue)
			-command ("setAttr " + $node + ".direction 5");

	setParent -m ..;


	int $mergeModeValue = `getAttr ($node + ".mergeMode")`;

	menuItem 
		-label (uiRes("m_polyMirrorOptionsPopup.kMergeModeLabel"))
		-subMenu 1
		-radialPosition	"W";

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kDontMerge"))
			-radialPosition	"N"
			-checkBox (0 == $mergeModeValue)
			-command ("setAttr " + $node + ".mergeMode 0");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kMergeVertices"))
			-radialPosition	"W"
			-checkBox (1 == $mergeModeValue)
			-command ("setAttr " + $node + ".mergeMode 1");

		menuItem 
			-label (uiRes("m_polyMirrorOptionsPopup.kConnectBorderEdges"))
			-radialPosition	"S"
			-checkBox (2 == $mergeModeValue)
			-command ("setAttr " + $node + ".mergeMode 2");

	setParent -m ..;
}
