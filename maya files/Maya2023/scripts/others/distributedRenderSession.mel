// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
// Creation Date:  October 21st 1997
//
//
//  Procedure Name:
//      distributedRenderSession
//
//  Description:
//		distributedRenderSession: Sets the working directory and saves
//	a temporary scene to be used by the dispatcher.
//
//  Input Arguments:
//		None.
//
//  Return Value:
//      None.
//
//  Procedure Name:
//		startDistributedRender
//
//  Description:
//		startDistributedRender: call dispatcher with the good arguments.
//
//  Input Arguments:
//		The temporary scene file name.
//		The file type.
//
//  Return Value:
//      true upon success.
//

global string $dispatcherConfigPath = "/etc/config/dispatcher.home";
global string $dispatcherExecutableName = "dispatcher";
global string $dispatcherPath = "";

global proc int findDispatcherPath()
{
  global string $dispatcherConfigPath;
  global string $dispatcherExecutableName;
  global string $dispatcherPath;

  $dispatcherPath="";

  if(file("-q", "-exists", $dispatcherConfigPath))
	{
	  // this course is safer because the link to the dispatcher binary 
	  // may not be installed in /usr/sbin or /sbin.
	  // For NT, I guess we'll have to probe the default binary location..
	  string	$dispatcherHome = `system("echo -n `cat " + $dispatcherConfigPath + "`")`;
	  $dispatcherPath = $dispatcherHome + "/" + $dispatcherExecutableName;

	  if(! file("-q","-exists", $dispatcherPath))
		$dispatcherPath="";
	}
  
  if(size($dispatcherPath) == 0)
	{
	  error((uiRes("m_distributedRenderSession.kInstallDispatcher")));
	  return false;
	}

  return true;
}

global proc distributedRenderSession()
{
  if(findDispatcherPath())
	{
	  string	$workspace = `workspace -q -fn`;

	  setWorkingDirectory $workspace "mayaBinary" "scene";
	  fileBrowser startDistributedRender "Save/Render" mayaBinary 1;
	}
}

global proc int startDistributedRender
 ( string	$fileName,
   string	$fileType )
{
  if(findDispatcherPath())
	{
	  global string $dispatcherPath;

	  //
	  //	Save the file.
	  //
	  string	$renderFile = `file -ea -typ $fileType $fileName`;

	  //
	  //	Run the dispatchMayaRenderScript...
	  //
	  if( size($renderFile) > 0 
		  && file("-q", "-exists", $renderFile))
		{
		  //
		  //	Get the render globals.
		  //
		  string	$glob[] = `ls -rg`;

		  if( size($glob) > 0 && size($glob[0]) > 0 )
			{
			  int	$anim = `getAttr ($glob[0]+".animation")`;
			  int	$range = `getAttr ($glob[0]+".animationRange")`;
			  int	$start, $end;

			  //
			  //	Get the animation range (from the render globals or from the
			  //	range controler).
			  //
			  if( $anim == 1 && $range == 0 )
				{
				  $start = `getAttr ($glob[0]+".startFrame")`;
				  $end = `getAttr ($glob[0]+".endFrame")`;
				}
			  else
				{
				  $start = `playbackOptions -q -minTime`;
				  $end = `playbackOptions -q -maxTime`;
				}

			  //
			  //	Build the job name based on the script file name.
			  //
			  string	$list[];
			  int		$n = tokenize( $renderFile, "/", $list );
			  string	$jobName = $list[$n-1];

			  //
			  //	Get the root project path.
			  //
			  string	$rootDir = `workspace -q -rd`;

			  //
			  //	Execute the command in background (i.e redirect the outputs).
			  //	It calls dispatcher with the following arguments:
			  //
			  //	 -n $start $end 10	//	animation range to be computed
			  //						//	10 is the default number of images
			  //						//	to be computed on a per job basis.
			  //	 -g					//	dispatcher comes up in gui mode to
			  //						//	edit the job parameters.
			  //	 -j string			//	Job name.
			  //	 -c command			//	command to execute.
			  //
			  string	$command = ($dispatcherPath + " -n "+$start+" "+$end+" 10 -g -j "+$jobName+" -c \"dispatch_maya_render # "+$end+" 10 -proj "+$rootDir+" "+$renderFile+"\" >/dev/null 2>&1 &");

			  system( $command );

			  string	$currentDir = `workspace -q -dir`;
			  retainWorkingDirectory( $currentDir );

			  return true;
			}
		}
	  else
		error((uiRes("m_distributedRenderSession.kNoRenderableScene")));
	}

  return false;
}
