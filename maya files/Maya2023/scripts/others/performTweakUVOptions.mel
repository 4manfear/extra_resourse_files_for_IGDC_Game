// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  Nov 24, 19987
//
//  Description:
//      This script is use to display and update the Tweak uv tool options.
//
//  Input Arguments:
//		None.
//
//  Return Value:
//      None.
//


//  Procedure Name:
//      assembleCmd
//
//  Description:
//		Construct the command that will apply the option box values.
//
//  Input Arguments:
//      None.
//
proc string assembleCmd()
{

	string $cmd;
	setToolTo texTweakSuperContext;
	string $context = "texTweakContext";

	float $tor = `floatSliderGrp -query -value txTweakToolSnap`;
	$cmd = "texTweakUVContext -edit";
	$cmd += " -t "+  $tor + " " + $context;
	$cmd += ";";

	return $cmd;
}


global proc txTweakUVToolCallback(string $parent, int $doIt)
{
	if ($doIt ) {
		//	Execute the command with the option settings.
		$cmd = `assembleCmd`;
		eval($cmd);	
	}
	else {
		txTweakUVToolRefresh $parent;
	}
}


global proc txTweakUVToolRefresh(string $parent )
{
	setToolTo texTweakSuperContext;
	setParent $parent;
	string $context = "texTweakContext";
	
    float $tor[] = `texTweakUVContext -query -t $context`;
	floatSliderGrp -edit -value $tor[0] txTweakToolSnap;
}


global proc txTweakUVToolSetup(string $parent, int $doIt)
{
	setParent $parent;
	setUITemplate -pushTemplate OptionsTemplate;
	
	string $emptyLabel = "";
	if (`about -linux`) {
		$emptyLabel = " ";
	}
		
	if ($doIt == false) {

		columnLayout TweakUV;

			frameLayout 
				-collapsable true
				-collapse false
				-label (uiRes("m_performTweakUVOptions.kTweakSettings"))
				txTweakUVFrame;

				columnLayout txTweakUVOptions;
					separator -style "none";

				floatSliderGrp -label (uiRes("m_performTweakUVOptions.kSelectSnapSize")) -field true
					-minValue 1.0 -maxValue 100.0 txTweakToolSnap ; 

				setParent ..;
			setParent ..;
		setParent ..;

	}
	
	setUITemplate -popTemplate;
	
	txTweakUVToolCallback($parent, false);
}



//  Procedure Name:
//      txTweakUVToolOptions
//
//  Description:
//		Construct the option box UI.  Involves accessing the standard option
//		box and customizing the UI accordingly.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//
proc txTweakUVToolOptions()
{
	//	Name of the command for this option box.
	//
	string $commandName = "txTweakUVTool";

	//	Build the option box actions.
	//
	string $callback = ($commandName + "Callback");
	string $setup = ($commandName + "Setup");

 	//	STEP 1:  Get the option box.
	//	============================
	//
	//	The value returned is the name of the layout to be used as
	//	the parent for the option box UI.
	//
	string $layout = getOptionBox();
	setParent $layout;
	
	//	STEP 2:  Pass the command name to the option box.
	//	=================================================
	//
	//	Any default option box behaviour based on the command name is set 
	//	up with this call.  For example, updating the 'Help' menu item with
	//	the name of the command.
	//
	setOptionBoxCommandName($commandName);
	
	//	STEP 3:  Activate the default UI template.
	//	==========================================
	//
	//	Activate the default UI template so that the layout of this 
	//	option box is consistent with the layout of the rest of the 
	//	application.
	//
	setUITemplate -pushTemplate DefaultTemplate;

	//	STEP 4: Create option box contents.
	//	===================================
	//	
	//	This, of course, will vary from option box to option box.	
	//	Turn on the wait cursor.
	//
	waitCursor -state 1;

	tabLayout -tabsVisible 0 -scrollable 1;
	
	string $parent = `columnLayout -adjustableColumn 1`;

	//	Turn off the wait cursor.
	//
	waitCursor -state 0;
	
	//	Step 5: Deactivate the default UI template.
	//	===========================================
	//
	setUITemplate -popTemplate;

	//	Step 6: Customize the buttons.  
	//	==============================
	//
	//	Provide more descriptive labels for the buttons.  This is not 
	//	necessary, but in some cases, for example, a button labelled 
	//	'Create' may be more meaningful to the user than one labelled
	//	'Apply'.
	//
	//	Disable those buttons that are not applicable to the option box.
	//
	//	Attach actions to those buttons that are applicable to the option
	//	box.  Note that the 'Close' button has a default action attached 
	//	to it that will hide the window.  If a a custom action is
	//	attached to the 'Close' button then be sure to call the 'hide the
	//	option box' procedure within the custom action so that the option
	//	box is hidden properly.

	//	'Apply' button.
	//
	string $applyBtn = getOptionBoxApplyBtn();
	button -edit
		-command ($callback + " " + $parent + " " + 1)
		$applyBtn;

	//	'Save' button.
	//
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit 
		-command ($callback + " " + $parent + " " + 1 + "; hideOptionBox")
		$saveBtn;

	//	'Reset' button.
	//
	string $resetBtn = getOptionBoxResetBtn();
	button -edit 
		-command ($setup + " " + $parent + " " + 1)
		$resetBtn;

	//	Step 7: Set the option box title.
	//
	setOptionBoxTitle (uiRes("m_performTweakUVOptions.kUVTweakToolOptions"));

	//	Step 8: Customize the 'Help' menu item text.
	//
	setOptionBoxHelpTag( "TweakUVTool" );

	//	Step 9: Set the current values of the option box.
	//
	eval (($setup + " " + $parent + " " + 0));	
	
	//	Step 10: Show the option box.
	//
	showOptionBox();
}


//
//  Procedure Name:
//      performTweakUVOptions
//
//  Description:
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
global proc string performTweakUVOptions(int $action)
{
	string $cmd = "";

	switch ($action) {

		//	Execute the command.
		//
		case 0:
			//	Get the command.
			//
			$cmd = `assembleCmd`;

			//	Execute the command with the option settings.
			//
			eval($cmd);
			break;

		case 1:
			//	Show the option box.
			//
			txTweakUVToolOptions;
			break;

		case 2:

			//	Return the command string.
			//	Get the command.
			//
			$cmd = `assembleCmd`;
			break;
	}
	return $cmd;
}

