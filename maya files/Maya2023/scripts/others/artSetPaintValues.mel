// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  May 2003
//
//  Description:
//      Option tool property window for Paint Set Membership
//
//
//  Procedure Name:
//      artSetPaintValues
//
//  Description:
//      Initialize the option values.
//
//  Input Arguments:
//
//  Return Value:
//      None.
//

global proc artisanSetOperationValues( 
	string 	$artCommand,
	string	$currTool
)
//
//	Set Paint tool values.
//
{
	string $cmd;
	// 
	//	Set Membership operation frameLayout
	//

	$cmd = ($artCommand + " -q -setopertype " + `currentCtx`);
	string $operation =  `eval $cmd`;
	if ( $operation == "add" ) {
		radioButtonGrp -e -sl 1 artSetPaintOperationRadio;
	} else if ( $operation == "transfer" ) {
		radioButtonGrp -e -sl 2 artSetPaintOperationRadio;
	} else if ( $operation == "remove" ) {
		radioButtonGrp -e -sl 3 artSetPaintOperationRadio;
	}

	// 
	//	Set Membership flag frameLayout
	// 
	$cmd  = ($artCommand + " -q -objectsetnames " + `currentCtx`);
	string $setListStr = `eval $cmd`;
	string $sets[];
	tokenize($setListStr, " ", $sets);

	textScrollList -e -ra artSetPaintScrollList;
 	for( $s in $sets ) {
		textScrollList -e -append $s artSetPaintScrollList;
	}

	$cmd = ($artCommand + " -q -settomodify " + `currentCtx`);
	textFieldGrp -e -text `eval $cmd` objectSetNameField;
}


// =======================================================
// Main callback procedure for Paint Selecion tool.
// =======================================================
global proc artSetPaintValues(
	string 	$toolName
)
{
	source "artisanCallback.mel";
    source "artisanValues.mel";

    source "artAttrValues.mel";

	string 	$artCommand	 = "artSetPaintCtx";
	string	$currContext = `currentCtx`;
	string	$currTool	 = `contextInfo -c $currContext`;

	string $icon	= "paintSetMembership.png";
	string $helpTag = "SetPaintTool";

	string $parent = (`toolPropertyWindow -q -location` + "|artSetPaint");
	setParent $parent;

	toolPropertySetCommon $toolName $icon $helpTag;

	// Brush frameLayout values.
	artisanBrushValues( $artCommand, $currTool );

	// Set Operation frameLayout values.
	artisanSetOperationValues( $artCommand, $currTool );

	// Stroke frameLayout values.
	artisanStrokeValues( $artCommand, $currTool );

	// Stylus Pressure frameLayout values.
	artisanPressureValues( $artCommand, $currTool );

	// Display frameLayout values.
	artisanDisplayValues( $artCommand, $currTool );

	toolPropertySelect artSetPaint;
}
