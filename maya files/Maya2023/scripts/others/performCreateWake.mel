// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  Feb 2002
//
//  Description:
//
//  Option box for the createWake command 
//

//
//  Procedure Name:
//      setOptionVars
//
//  Description:
//		Initialize the option values.
//
//  Input Arguments:
//		Whether to set the options to default values.
//
//  Return Value:
//      None.
//
proc setOptionVars(int $forceFactorySettings)
{
	optionVar -init $forceFactorySettings -category "Dynamics.Fluids.Pond.Create Wake"
		-fv createWakeIntensity 5.0
		-fv createWakeFoam 0.0
		;
}

//
//  Procedure Name:
//      createWakeSetup
//
//  Description:
//		Update the state of the option box UI to reflect the option values.
//
//  Input Arguments:
//      parent               - Top level parent layout of the option box UI.
//                             Required so that UI object names can be 
//                             successfully resolved.
//
//	forceFactorySettings - Whether the option values should be set to
//                             default values.
//
//  Return Value:
//      None.
//
global proc createWakeSetup(string $parent, int $forceFactorySettings)
{
	//	Retrieve the option settings
	//
	setOptionVars($forceFactorySettings);

	setParent $parent;

	//	Query the optionVar's and set the values into the controls.

	floatSliderGrp -edit 
		-v `optionVar -query createWakeIntensity`
		createWakeIntensity;

	floatSliderGrp -edit 
		-v `optionVar -query createWakeFoam`
		createWakeFoam;

}

//
//  Procedure Name:
//      createWakeCallback
//
//  Description:
//		Update the option values with the current state of the option box UI.
//
//  Input Arguments:
//      parent - Top level parent layout of the option box UI.  Required so
//               that UI object names can be successfully resolved.
//
//	doIt   - Whether the command should execute.
//
//  Return Value:
//      None.
//
global proc createWakeCallback(string $parent, int $doIt)
{
    setParent $parent;

	//	Set the optionVar's from the control values, and then
	//	perform the command.

	optionVar -floatValue createWakeIntensity
		`floatSliderGrp -query -v createWakeIntensity`;
	optionVar -floatValue createWakeFoam
		`floatSliderGrp -query -v createWakeFoam`;

	if ($doIt) {
		performCreateWake 0;
	}
}

//
//  Procedure Name:
//      createWakeOptions
//
//  Description:
//		Construct the option box UI.  Involves accessing the standard option
//		box and customizing the UI accordingly.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//
proc createWakeOptions()
{
	//	Name of the command for this option box.
	//
	string $commandName = "createWake";

	//	Build the option box actions.
	//
	string $callback = ($commandName + "Callback");
	string $setup = ($commandName + "Setup");

	string $layout = getOptionBox();
	setParent $layout;
	
	setOptionBoxCommandName($commandName);
	
	setUITemplate -pushTemplate DefaultTemplate;

	waitCursor -state 1;

	tabLayout -tabsVisible 0 -scrollable 1;
	
	string $parent = `columnLayout -adjustableColumn 1`;
	
    floatSliderGrp
		-label (uiRes("m_performCreateWake.kWakeIntensity"))
		-cw 4  150
		-field 1
		-min 0.0 
		-max 10.0 
		-fieldMinValue 0.0 
		-fieldMaxValue 1000000.0
		-pre 2
		-extraLabel (uiRes("m_performCreateWake.kDensityVoxelSec"))
		createWakeIntensity;

    floatSliderGrp
		-label (uiRes("m_performCreateWake.kFoamCreation"))
		-cw 4 150
		-field 1
		-min 0.0 
		-max 10.0 
		-fieldMinValue 0.0 
		-fieldMaxValue 1000000.0
		-pre 2
		-extraLabel (uiRes("m_performCreateWake.kHeatVoxelSec"))
		createWakeFoam;

	waitCursor -state 0;
	
	setUITemplate -popTemplate;

	//	'Create' button.
	//
	string $applyBtn = getOptionBoxApplyBtn();
	button -edit
		-label (uiRes("m_performCreateWake.kCreateWake"))
		-command ($callback + " " + $parent + " " + 1)
		$applyBtn;

	//	'Save' button.
	//
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit 
		-command ($callback + " " + $parent + " " + 0 + "; hideOptionBox")
		$saveBtn;

	//	'Reset' button.
	//
	string $resetBtn = getOptionBoxResetBtn();
	button -edit 
		-command ($setup + " " + $parent + " " + 1)
		$resetBtn;

	setOptionBoxTitle (uiRes("m_performCreateWake.kCreatePondWake"));

	//	Customize the 'Help' menu item text.
	//
	setOptionBoxHelpTag( "CreatePondWake" );

	eval (($setup + " " + $parent + " " + 0));	
	
	showOptionBox();
}

//
//  Procedure Name:
//      createWakeHelp
//
//  Description:
//		Return a short description about this command.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      string.
//
proc string createWakeHelp()
{
	return 
	"  Command: createWake - Make selected objects generate wakes on the ocean.\n" +
	"Selection: objects to emit wakes";
}

//
//  Procedure Name:
//      assembleCmd
//
//  Description:
//		Construct the command that will apply the option box values.
//
//  Input Arguments:
//      None.
//
proc string assembleCmd()
{
	string $cmd = "createWake";

	setOptionVars(false);

	$cmd = ($cmd
		+ " " + `optionVar -query createWakeIntensity` 
		+ " " + `optionVar -query createWakeFoam` 
		);

	return $cmd;
}

//
//  Procedure Name:
//      performCreateWake
//
//  Description:
//		Perform the createWake command using the corresponding 
//		option values.
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
global proc string performCreateWake(int $action)
{
	string $cmd = "";

	switch ($action) {

		//	Execute the command.
		//
		case 0:
			$cmd = `assembleCmd`;
			eval($cmd);
			break;

		//	Show the option box.
		//
		case 1:
			createWakeOptions;
			break;

		//	Return the command string.
		//
		case 2:
			//	Get the command.
			//
			$cmd = `assembleCmd`;
			break;
	}
	return $cmd;
}

