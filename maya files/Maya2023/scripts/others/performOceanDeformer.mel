// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//  Description:
//      This script provides an option box dialog for the ocean deformer command.
//
//
source deformerOptionsTemplate.mel;

//
//  Procedure Name:
//      oceanDeformerSetOptionVars
//
//  Description:
//		Initialize the ocean deformer's specific option values.
//
//  Input Arguments:
//      forceFactorySettings  - Whether to set the options to default values.
//
//  Return Value:
//      None.
//
global proc oceanDeformerSetOptionVars(int $forceFactorySettings)
{
	optionVar -init $forceFactorySettings -category "Deform.Ocean"
		-iv oceanDeformerSpace 1
		-iv oceanDeformerResolution 8
		-fv oceanDeformerWaveHeight 2.0
		-fv oceanDeformerGlobalScale 1.0
		-fv oceanDeformerEnvelope 1.0
		;
}

//
//  Procedure Name:
//      oceanDeformerSetup
//
//  Description:
//		Update the ocean deformer tab in the option box UI to reflect the option values.
//
//  Input Arguments:
//      parent               - Top level parent layout of the option box UI.
//                             Required so that UI object names can be 
//                             successfully resolved.
//
//		forceFactorySettings - Whether the option values should be set to
//                             default values.
//      tabIndex		     - 0 = both tabs, 1 = basic, 2 = advanced
//
//  Return Value:
//      None.
//
global proc oceanDeformerSetup(string $parent,
						 int $forceFactorySettings,
						 int $tabIndex)
{
	// set parent of UI
	setParent $parent;

	// Query the optionVar's and set the values into the controls
	if ($tabIndex !=  2) {	
		// set envelope control
		float $envelope = `optionVar -query oceanDeformerEnvelope`;
		floatSliderGrp -edit -value $envelope oceanDeformerEnvelopeWidget;
		
		
		// set strength UI
		float $waveHeight = `optionVar -query oceanDeformerWaveHeight`;
		floatSliderGrp -edit -value $waveHeight oceanDeformerWaveHeightWidget;

		// set resolution UI
		int $resolution = `optionVar -query oceanDeformerResolution`;
		intSliderGrp -edit -value $resolution oceanDeformerResolutionWidget;
	
		// set globalScale UI
		float $globalScale = `optionVar -query oceanDeformerGlobalScale`;
		floatSliderGrp -edit -value $globalScale oceanDeformerGlobalScaleWidget;
		
		// set deformer space UI
		int $space = `optionVar -query oceanDeformerSpace`;
		if (`optionMenuGrp -exists oceanDeformerSpaceWidget`) {
			optionMenuGrp -edit -select $space oceanDeformerSpaceWidget;
		}
	}
}

//
//  Description:
//		Update the ocean deformer option values with the 
//		current state of the option box UI.
//		
//
//  Input Arguments:
//      parent - Top level parent layout of the option box UI.  Required so
//               that UI object names can be successfully resolved.
//
//		doIt   - Whether the command "oceanDeformer" should execute.
//
//  Return Value:
//      None.
//
global proc oceanDeformerCallback(string $parent, int $doIt)
{
    setParent $parent;

	// Overall envelope control
	optionVar -floatValue oceanDeformerEnvelope `floatSliderGrp -query -value oceanDeformerEnvelopeWidget`;

	// space of the ocean deformer in the DG
	int $spaceOption = 0;
	if (`optionMenuGrp -exists oceanDeformerSpaceWidget`) {
		$spaceOption = `optionMenuGrp -query -select oceanDeformerSpaceWidget`;
	}
	optionVar -intValue oceanDeformerSpace $spaceOption;

	// waveHeight
	optionVar -floatValue oceanDeformerWaveHeight `floatSliderGrp -query -value oceanDeformerWaveHeightWidget`;

	// globalScale
	optionVar -floatValue oceanDeformerGlobalScale `floatSliderGrp -query -value oceanDeformerGlobalScaleWidget`;
	
	// resolution
	optionVar -intValue oceanDeformerResolution `intSliderGrp -query -value oceanDeformerResolutionWidget`;
		

	if ($doIt) {
		performOceanDeformer 0; 
		addToRecentCommandQueue "performOceanDeformer 0" "OceanDeformer";
	}
}


//
//  Procedure Name:
//      oceanDeformerTabUI
//
//  Description:
//		create menu option tab for ocean Deformer
//
//  Input Arguments:
//      parent		  - Top level parent layout of the option box UI.  Required so
//               		that UI object names can be successfully resolved.
//		tabIndex	  - 0 = both tabs, 1 = basic, 2 = advanced 
//
//  Return Value:
//      None.
//
global proc oceanDeformerTabUI(string $parent, 
								 int $tabIndex)
{
	// set parent of UI
	setParent $parent;
	
	if (1 == $tabIndex) {
		//	Create UI for the first tab.
		//
		// space of ocean deformer
		optionMenuGrp -label (uiRes("m_performOceanDeformer.kSpace")) oceanDeformerSpaceWidget ;
		menuItem -label (uiRes("m_performOceanDeformer.kWorld"))      spaceItem1;
		menuItem -label (uiRes("m_performOceanDeformer.kObject"))    spaceItem2;
		menuItem -label (uiRes("m_performOceanDeformer.kTangent"))  spaceItem3;
		optionMenuGrp -e -select 1 oceanDeformerSpaceWidget;
		
		// globalScale control
		floatSliderGrp
			-label (uiRes("m_performOceanDeformer.kGlobalScale")) 
			-field true
			-value 1.0
			-fieldMinValue 0.0
			-fieldMaxValue 20.0
			-min 0.0001
			-pre 3 oceanDeformerGlobalScaleWidget;

		// waveHeight control
		floatSliderGrp
			-label (uiRes("m_performOceanDeformer.kWaveHeight")) 
			-field true
			-value 2.0
			-fieldMinValue 0.0
			-fieldMaxValue 20.0
			-min 0.0
			-pre 3 oceanDeformerWaveHeightWidget;	
			
					
		// resolution control
		intSliderGrp
			-label (uiRes("m_performOceanDeformer.kResolution")) 
			-field true
			-value 8
			-fieldMinValue 4
			-fieldMaxValue 12
			-min -4 -max 15
			oceanDeformerResolutionWidget;	
			

		// Overall envelope control
		floatSliderGrp
			-label (uiRes("m_performOceanDeformer.kEnvelope")) 
			-field true
			-min 0.0 -max 1.0
			-fieldMinValue -10.0 -fieldMaxValue 10.0
			-pre 3 oceanDeformerEnvelopeWidget;
			

	}	
}

//
//  Procedure Name:
//      oceanDeformerOptionBoxTitle
//
//  Description:
//		set the title of option box
//
//  Input Arguments:
//      None
//
//  Return Value:
//      None.
//
global proc oceanDeformerOptionBoxTitle()
{
	setOptionBoxTitle (uiRes("m_performOceanDeformer.kOceanDeformerOptions"));
}	

//
//  Procedure Name:
//      oceanDeformerHelp
//
//  Description:
//		Return a short description about this command.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      string.
//
proc string oceanDeformerHelp()
{
	return 
	"  Command: oceanDeformer";	
}

//
//  Procedure Name:
//      oceanDeformerOptionBoxHelpTag
//
//  Description:
//		Set the tag of the help entry
//
//  Input Arguments:
//      None.
//
//  Return Value:
//		None.
//
global proc oceanDeformerOptionBoxHelpTag()
{
	setOptionBoxHelpTag( "CreateOceanDeformer" );
}

//
//  Procedure Name:
//      assembleCmd
//
//  Description:
//		Construct the command that will apply the option box values
//		and create the ocean deformer on the selected objects.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      String.
//
proc string assembleCmd()
{
	//	Retrieve the option settings
	//
	deformerSetOptionVars("oceanDeformer", false);
	
	// assemble command
	string $cmd;
	
	// command name	
	$cmd += "oceanDeformer";
	
	// set envelope value
	float $envelope = `optionVar -query oceanDeformerEnvelope`;
	$cmd += " -envelope " + $envelope;
	
	// set globalScale value
	float $globalScale = `optionVar -query oceanDeformerGlobalScale`;
	$cmd += " -globalScale " + $globalScale;

	// set waveHeight value
	float $waveHeight = `optionVar -query oceanDeformerWaveHeight`;
	$cmd += " -waveHeight " + $waveHeight;

	// set resolution value
	int $resolution = `optionVar -query oceanDeformerResolution`;
	$cmd += " -resolution " + $resolution;


	// set space mode
	string $spaceModes[] = {"World", "Object", "Tangent"};
	int $spaceIndex = `optionVar -query oceanDeformerSpace` - 1;
	string $spaceMode = $spaceModes[$spaceIndex];
	$cmd += " -space \"" + $spaceMode + "\"";
	
	// set partition name
	int $exclusive=`optionVar -query deformerExclusive`;
	string $exclusiveName;
	if ($exclusive) {
		$exclusiveName=`optionVar -query deformerExclName`;
		// append version number
		$exclusiveName += "#";
	}
	$cmd += " -exclusive \"" + $exclusiveName + "\"";
	
	// command end
	$cmd += ";";

	return $cmd;
}

//
//  Procedure Name:
//      performOceanDeformer
//
//  Description:
//		Perform the ocean deformer command using the corresponding 
//		option values.  This procedure will also show the option box
//		window if necessary as well as construct the command string
//		that will invoke the ocean deformer command with the current
//		option box values.
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
//  Return Value:
//      String.
//
global proc string performOceanDeformer(int $action)
{
	string $cmd = "";

	switch ($action) {

		//	Execute the command.
		//
		case 0:
			//	Get the command.
			//
			$cmd = `assembleCmd`;

			//	Execute the command with the option settings.
			//
			evalEcho($cmd);

			break;

		//	Show the option box.
		//
		case 1:
			deformerOptions("oceanDeformer");
			break;
			
		//	Return the command string.
		//
		case 2:
			//	Get the command.
			//
			$cmd = `assembleCmd`;
			break;	
	}
	return $cmd;
}

