// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  05 May 2003
//
//  Description:
//      Option tool property window for Paint Set Membership tool.
//
//
//  Procedure Name:
//      artSetPaintProperties 
//
//  Description:
//      Initialize the UI for Paint Set Membership tool.
//
//  Input Arguments:
//
//  Return Value:
//      None.
//

proc artSetPaintOperationFrame( 
	string 	$parent 
)
//
//	Description:
//		Create a set Paint Operations.
//
{
	setUITemplate -pushTemplate OptionsTemplate;
	setParent $parent;

	//
	// 	Set Memebrship operation frameLayout
	//
    columnLayout -adj true ;   			
	separator -h 10 -style "none";
	radioButtonGrp -label "" -nrb 3 -cw4 80 60 80 80
		-label1 (uiRes("m_artSetPaintProperties.kAdd"))  
		-label2 (uiRes("m_artSetPaintProperties.kTransfer"))  
		-label3 (uiRes("m_artSetPaintProperties.kRemove"))  
		artSetPaintOperationRadio;

	//
	// 	Set Membership flag frameLayout
	//
	columnLayout;

	separator -h 10 -style "none";
    rowColumnLayout -nc 2 -cw 1 40 -cw 2 300 ;
		separator -h 5 -style "none";
		text -label (uiRes("m_artSetPaintProperties.kSelectSetToModify")) ;
	setParent ..;

    rowColumnLayout -nc 2 -cw 1 40 -cw 2 300;
		separator -h 5 -style "none";
		textScrollList -w 100 -h 100 -nr 10 -ams false artSetPaintScrollList;
	setParent ..;

	separator -h 10 -style "none";

	textFieldGrp -label (uiRes("m_artSetPaintProperties.kSetToModify"))  -w 300 -cw3 40 90 210
		objectSetNameField; 

	separator -h 10 -style "none";		
	setParent ..;

	setParent ..;
}

// =======================================================
// Main Procedure.
// =======================================================
global proc artSetPaintProperties()
{
	// Base Artisan (applicable to all Artisan tools) properties.
	source "artisanProperties.mel";
	source "artisanCallback.mel";

	string $currContext = `currentCtx`;
	string $currTool    = `contextInfo -c $currContext`;

	setUITemplate -pushTemplate DefaultTemplate;

	string 	  $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	columnLayout -adj true artSetPaint;

	// Brush frameLayout.
	frameLayout -label (uiRes("m_artSetPaintProperties.kBrush")) 
		-collapsable true -collapse false
		artSetPaintBrushFrame;

		// Create brush option menu.
		artisanCreateBrushFrame( "artSetPaintBrushFrame", $currTool );
	setParent ..;

	// Set Operation & Flag frameLayout.
	frameLayout -label (uiRes("m_artSetPaintProperties.kPaintOperations")) 
		-collapsable true -collapse false
		artSetPaintFrame;

		// Create brush option menu.
		artSetPaintOperationFrame( "artSetPaintFrame" );
	setParent ..;

    // Stroke options.
	frameLayout -label (uiRes("m_artSetPaintProperties.kStroke")) 
		-collapsable true -collapse false
		artSetPaintStrokeFrame;

		// Create stroke options.
		artisanCreateStrokeFrame( "artSetPaintStrokeFrame", $currTool );
	setParent ..;

    // Stylus Pressure options.
	frameLayout -label (uiRes("m_artSetPaintProperties.kStylusPressure")) 
		-collapsable true -collapse true
		artSetPaintPressureFrame;

		// Create stroke options.
		artisanCreatePressureFrame( "artSetPaintPressureFrame", $currTool );
	setParent ..;

	frameLayout -label (uiRes("m_artSetPaintProperties.kDisplay")) 
		-collapsable true -collapse true
		artSetPaintDisplayFrame;

		artisanCreateDisplayFrame( "artSetPaintDisplayFrame", $currTool );
	setParent ..;

	setParent ..;
	setUITemplate -popTemplate;

	// Set the callbacks and the values.
	artSetPaintCallback( "artSetPaintCtx" );
}
