// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  17 Sept 97
//
//
//  Procedure Name:
//      performPolyStraightenUV
//
//  Description:
//        Straighten the selected polygon vertices
//         
//  Input Arguments:
//        $option : Whether to set the options to default values.
//  Return Value:
//        command string iff $option==2
//

proc setOptionVars (int $forceFactorySettings)
{			   
	string $prefix = "polyStraightenUV";
	string $fltVars[]   = {"c", "pl", "bo"};
	float  $fltValues[] = { 0.,   1.,   0.};
	string $category = "UV Editor.Straighten Border";

	optionVar -init $forceFactorySettings -category $category
		-iv polyStraightenUVUseGap 1
		-iv polyStraightenUVGap 5
		;

	for ( $i = size($fltVars) ; $i-- ; )
	{
		$varName = ($prefix + $fltVars[$i]);
		optionVar -init $forceFactorySettings -category $category
			-fv $varName $fltValues[$i];
	}
}

global proc performPolyStraightenUVSetup (string $parent, int $forceFactorySettings)
{
	string $prefix = "polyStraightenUV";
	string $fltVars[] ={"c", "pl", "bo"};

	setOptionVars($forceFactorySettings);
	setParent $parent;
	
	int $ival = `optionVar -query polyStraightenUVUseGap`;
	checkBoxGrp -edit -value1 $ival polyStraightenUVUseGap;

	intSliderGrp -edit -en $ival 
		-value `optionVar -query polyStraightenUVGap` polyStraightenUVGap;

	for ( $i = size($fltVars) ; $i-- ; )
	{
		$varName = ($prefix + $fltVars[$i]);
		if( $fltVars[$i] == "bo" ){
			floatSliderGrp -e -v (`optionVar -q $varName`) $varName; // Slider is NOT inverted
		} else {
			floatSliderGrp -e -v `optionVar -q $varName` $varName;
		}
	}
}

global proc performPolyStraightenUVCallback (string $parent, int $doIt)
{
	string $prefix = "polyStraightenUV";
	string $fltVars[] ={"c", "pl", "bo"};
	int $i;

	setParent $parent;

	optionVar -intValue polyStraightenUVGap
		`intSliderGrp -query -value polyStraightenUVGap`;

	optionVar -intValue polyStraightenUVUseGap
		`checkBoxGrp -query -value1 polyStraightenUVUseGap`;
       
	for ( $i = size($fltVars) ; $i-- ; )
	{
		$varName = ($prefix + $fltVars[$i]);
		if( $fltVars[$i] == "bo" ){
			optionVar -floatValue $varName (`floatSliderGrp -q -v $varName`); // Slider is NOT inverted
		} else {
			optionVar -floatValue $varName `floatSliderGrp -q -v $varName`;
		}
	}

	if ($doIt) {
		performPolyStraightenUV 0;
		addToRecentCommandQueue "performPolyStraightenUV 0" "PolyStraightenUV";
	}
}

proc polyStraightenUVOptions ()
{
	// Global template variables for form spacing
	global int $gOptionBoxTemplateDescriptionMarginWidth;
	global int $gOptionBoxTemplateFrameSpacing;
	
	string $commandName = "performPolyStraightenUV";
	string $callback = ($commandName + "Callback");
	string $setup = ($commandName + "Setup");

	string $layout = getOptionBox();
	setParent $layout;
	setUITemplate -pushTemplate OptionBoxTemplate;
	waitCursor -state 1;
	
	// Form layout
	string $parent = `formLayout polyUntangleUVOptions`;

		// Settings frame
		string $settingsFrame = 
		`frameLayout -label (uiRes("m_performPolyStraightenUV.kSettingsFrame"))`;
	
			columnLayout;

				string $grayCmd = 
					"{ int $tmp = `checkBoxGrp -q -v1 polyStraightenUVUseGap`;" +
					"  intSliderGrp -e -en $tmp polyStraightenUVGap;}";

				floatSliderGrp 
					-label (uiRes("m_performPolyStraightenUV.kCurvature")) 
					-min -1 
					-max 1 
					polyStraightenUVc;

				floatSliderGrp 
					-label (uiRes("m_performPolyStraightenUV.kPreserveLengthRatio")) 
					-min 0 
					-max 1 
					polyStraightenUVpl;

				checkBoxGrp 
					-label1 (uiRes("m_performPolyStraightenUV.kFillGapsInSelection")) 
					-cc $grayCmd 
					polyStraightenUVUseGap;

				intSliderGrp 
					-label (uiRes("m_performPolyStraightenUV.kUVGapTolerance")) 
					-min 0 
					-max 10 
					-fmx 1000 
					polyStraightenUVGap;

				floatSliderGrp 
					-label (uiRes("m_performPolyStraightenUV.kPreserveOriginalShape")) 
					-min 0 
					-max 1 
					polyStraightenUVbo;

			setParent ..; // columnLayout

		setParent $parent; // frameLayout
		
	setParent ..; // formLayout

	// Attach frame to form layout
	formLayout -e
		-af $settingsFrame "top" $gOptionBoxTemplateFrameSpacing
		-af $settingsFrame "left" $gOptionBoxTemplateFrameSpacing
		-af $settingsFrame "right" $gOptionBoxTemplateFrameSpacing
		-an $settingsFrame "bottom" 
	$parent;

	waitCursor -state 0;
	setUITemplate -popTemplate;
	   
	string $applyBtn = getOptionBoxApplyBtn();
	button -edit -label (uiRes("m_performPolyStraightenUV.kStraightenUVBorder"))
	       -command ($callback + " " + $parent + " " + 1)
		$applyBtn;
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit 
		-command ($callback + " " + $parent + " " + 0 + "; hideOptionBox")
		$saveBtn;
	string $resetBtn = getOptionBoxResetBtn();
	button -edit 
		-command ($setup + " " + $parent + " " + 1)
		$resetBtn;

	setOptionBoxTitle (uiRes("m_performPolyStraightenUV.kStraightenUVBorderOptions"));

	setOptionBoxHelpTag( "StraightenUVBorder" );

	eval (($setup + " " + $parent + " " + 0));      
	showOptionBox();
}

global proc string performPolyStraightenUV (int $option)
{       
	string $prefix = "polyStraightenUV";
	string $fltVars[] ={"c", "pl", "bo"};
	string $cmd="";

	switch ($option) 
	{
		case 0:
		string $selection[] = `ls -sl`;

		setOptionVars(false);
		$cmd = "polyStraightenUVBorder";
		float $fval;

		for ( $i = size($fltVars) ; $i-- ; )
		{
			$varName = ($prefix + $fltVars[$i]);
			$fval = `optionVar -query $varName`;
			$cmd = $cmd + " -" + $fltVars[$i] + " " + $fval;
		}

		int $ival = `optionVar -query polyStraightenUVUseGap`;
		if ($ival)
			$ival = `optionVar -query polyStraightenUVGap`;
		else
			$ival = 0;
		$cmd =($cmd + " -gt " + $ival);

		evalEcho ("polyPerformAction \""+$cmd+"\" uv 0");

		//select the original selection
		select -replace $selection;
		break;

		case 1: polyStraightenUVOptions; break;
		case 2: $cmd = "performPolyStraightenUV 0"; break;
	}
	return $cmd;
}
