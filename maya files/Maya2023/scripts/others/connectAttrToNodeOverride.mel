// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//
//
//
//
//  Creation Date:  August 10/2000
//

//////////////////////////////////////////////////////////////////////
//
//  Procedure Name: 
//		connectAttrToNodeOverride
//
//  Description:
//		This procedure is provided as a hook for customers to allow
//		you to redefine the behaviour of drag and drop. 
//		
//  Input Arguments:
//		$srcNodeAndAttr - the name of the source (the dragged item)
//		$dstNode - the name of the destination (the dropped-on node)
//
//  Return Value:
//		Return 1 if you want Maya continue and perform the operation 
// 		that would normally result from this connection.
//		Return 0 if you have chosen to implement a different behaviour
//		for this connection and don't want the normal operation to 
//		be performed as well.
//
global proc int connectAttrToNodeOverride(
	string $srcNodeAndAttr, // ie) checker.outColor
	string $dstNode) // ie) lambert1
{
//	print(
//		"connectAttrToNodeOverride(" 
//		+ $srcNodeAndAttr 
//		+ ", " 
//		+ $dstNode
//		+ ") called\n");

	// By default the return value of this procedure is 1, so that Maya
	// will perform the normal operation for a connection between these
	// two nodes.
	//
	int $rDoNormalOperation = 1;

	// 
	// If you wish to change the behaviour of drag and drop of an attribute
	// onto a node in Maya, you should implement the behaviour you 
	// wish here. 
	//
	// Typically attributes are not dragged onto nodes very often in Maya.
	// This procedure is unlikely to get called much.
	//

	return $rDoNormalOperation;
}
