// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
global proc SymmetrizeUVBrushProperties ()
{
	setUITemplate -pushTemplate OptionsTemplate;
	string $parent = `toolPropertyWindow -q -location`;
    setParent $parent;

	columnLayout SymmetrizeUVBrush;
		frameLayout -cll true -cl false
			-label (uiRes("m_SymmetrizeUVBrushProperties.kPolySymmetrizeUVBrushOpotions"))
			SymmetrizeUVBrushFrame;
			columnLayout SymmetrizeUVBrushOptions;

				floatSliderGrp
					-label (uiRes("m_SymmetrizeUVBrushProperties.kBrushSize"))
					-ann (uiRes("m_SymmetrizeUVBrushProperties.kBrushSizeAnn"))
					-field true
					-minValue 0.0 -maxValue 2.0
                    -fieldMinValue 0.0 -fieldMaxValue 100.0
					brushSize;

				radioButtonGrp -nrb 2
					-label (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxis"))
					-label1 (uiRes("m_SymmetrizeUVBrushProperties.kUAxis"))
					-label2 (uiRes("m_SymmetrizeUVBrushProperties.kVAxis"))
					-ann (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxisAnn"))
					-vertical
					brushUVAxis;

				floatFieldGrp
					-label (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxisPosition"))
					-ann (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxisPositionAnn"))
					brushUVAxisPos;

				floatFieldGrp
					-label (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxisIncrement"))
					-ann (uiRes("m_SymmetrizeUVBrushProperties.kMirrorAxisIncrementAnn"))
					brushUVAxisIncrement;

				checkBoxGrp
					-label (uiRes("m_SymmetrizeUVBrushProperties.kFloodShellsMode"))
					-ann (uiRes("m_SymmetrizeUVBrushProperties.kFloodShellsModeAnn"))
					-value1 false
					brushUVFloodShells;

			setParent ..; // SymmetrizeUVBrushOptions
		setParent ..; // SymmetrizeUVBrushFrame
	setParent ..; // SymmetrizeUVBrush
	setUITemplate -popTemplate;
	polySymmetrizeUVBrushSetCallbacks($parent);
}

global proc polySymmetrizeUVBrushSetCallbacks(string $parent)
{
	setParent $parent;
	string $whichCtx = `currentCtx`;
	floatSliderGrp -e -cc  ("SymmetrizeUVContext -e -sizeuv #1 " + $whichCtx) brushSize;
	radioButtonGrp -e -cc1 ("optionVar -iv polySymmetrizeUVAxis 0; SymmetrizeUVContext -e -a 0 " + $whichCtx) brushUVAxis;
	radioButtonGrp -e -cc2 ("optionVar -iv polySymmetrizeUVAxis 1; SymmetrizeUVContext -e -a 1 " + $whichCtx) brushUVAxis;
	floatFieldGrp  -e -cc  ("optionVar -fv polySymmetrizeUVAxisOffset #1; SymmetrizeUVContext -e -ap `optionVar -q polySymmetrizeUVAxisOffset` " + $whichCtx) brushUVAxisPos;
	floatFieldGrp  -e -cc  ("optionVar -fv polySymmetrizeUVAxisIncrement #1; SymmetrizeUVContext -e -ai `optionVar -q polySymmetrizeUVAxisIncrement` " + $whichCtx) brushUVAxisIncrement;
	checkBoxGrp    -e -cc1 ("optionVar -iv polySymmetrizeUVFloodShells #1; SymmetrizeUVContext -e -fs `optionVar -q polySymmetrizeUVFloodShells` " + $whichCtx) brushUVFloodShells;
}
