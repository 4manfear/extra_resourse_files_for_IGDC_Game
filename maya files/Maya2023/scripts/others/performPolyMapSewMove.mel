// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  4 April 1997
//
//  Procedure Name:
//      performPolyMapSewMove
//
//  Description:
//        
//         
//  Input Arguments:
//        $option : Whether to set the options to default values.
//  Return Value:
//        command string iff $option==2
//

//
// Initialize optionVars for polyMapSewMove:
// Color, Texture, Vertex
// 
proc setOptionVars (
	string		$prefix, 
	int			$forceFactorySettings,
	string		$vars[]
)
{
	string $varName;
	string $category = "UV Editor.Move and Sew";

	// Must match $vars
	int    $intValues[]= { 0, 10 };

	for ( $i = size($vars) ; $i-- ; )
	{
		$varName = ($prefix + $vars[$i]);
		optionVar -init $forceFactorySettings -category $category
			-iv $varName $intValues[$i];
	}
}

global proc performPolyMapSewMoveSetup (string $parent, int $forceFactorySettings)
{
	string $prefix = "polyMapSewMove";
	string $intVars[] ={"lps", "nf"};
	string $varName;

	setOptionVars($prefix, $forceFactorySettings, $intVars);
	setParent $parent;

	$varName = ($prefix + $intVars[0]);
	int $val = `optionVar -query $varName`;
	checkBoxGrp -edit -value1 $val $varName;

	$varName = ($prefix + $intVars[1]);
    intSliderGrp -edit -en $val -value `optionVar -query $varName` $varName;
}

global proc performPolyMapSewMoveCallback (string $parent, int $doIt)
{
	string $prefix = "polyMapSewMove";
	string $intVars[] ={"lps", "nf"};
	string $varName;

	setParent $parent;
	
	$varName = ($prefix + $intVars[0]);
	optionVar -intValue $varName `checkBoxGrp -query -value1 $varName`;
	
	$varName = ($prefix + $intVars[1]);
	optionVar -intValue $varName (`intSliderGrp -q -value $varName`);

	if ($doIt) 
	{
		performPolyMapSewMove 0;
		addToRecentCommandQueue "performPolyMapSewMove 0" "PolyMapSewMove";
	}
}

proc polyMapSewMoveOptions (string $prefix, string $intVars[])
{
	// Global template variables for form spacing
	global int $gOptionBoxTemplateFrameSpacing;
	
	string $commandName = "performPolyMapSewMove";
	string $callback = ($commandName + "Callback");
	string $setup = ($commandName + "Setup");
	string $varName;

	string $layout = getOptionBox();
	setParent $layout;
	setUITemplate -pushTemplate OptionBoxTemplate;
	waitCursor -state 1;
	
	// Form layout
	string $parent = `formLayout polyMapSewMoveOptions`;

		// Settings frame
		string $settingsFrame = 
		`frameLayout -label (uiRes("m_performPolyMapSewMove.kSettingsFrame"))`;
	
			columnLayout;

				$varName = ($prefix + $intVars[0]);
				$varName2 = ($prefix + $intVars[1]);
				string $grayCmd = 
					"{ int $tmp = `checkBoxGrp -q -v1 "+$varName + "`;" +
					"  intSliderGrp -e -en $tmp "+$varName2+";}";

				checkBoxGrp -label1 (uiRes("m_performPolyMapSewMove.kPolyMapSewMoveLimit")) -cc $grayCmd $varName;
				intSliderGrp -label (uiRes("m_performPolyMapSewMove.kPolyMapSewMoveNumFaces")) $varName2;
				
			setParent ..; // columnLayout;

		setParent $parent;	// frameLayout
		
	setParent ..; // formLayout

	// Attach Settings frame to form layout
	formLayout -e
		-af $settingsFrame "top" $gOptionBoxTemplateFrameSpacing
		-af $settingsFrame "left" $gOptionBoxTemplateFrameSpacing
		-af $settingsFrame "right" $gOptionBoxTemplateFrameSpacing
		-an $settingsFrame "bottom"
	$parent;

	waitCursor -state 0;
	setUITemplate -popTemplate;

	string $applyBtn = getOptionBoxApplyBtn();
	button -edit -label (uiRes("m_performPolyMapSewMove.kMoveAndSew"))
	       -command ($callback + " " + $parent + " " + 1) $applyBtn;
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit 
		-command ($callback + " " + $parent + " " + 0 + "; hideOptionBox")
		$saveBtn;
	string $resetBtn = getOptionBoxResetBtn();
	button -edit 
		-command ($setup + " " + $parent + " " + 1) $resetBtn;

	setOptionBoxTitle (uiRes("m_performPolyMapSewMove.kMovenSewUVsOptions"));

	setOptionBoxHelpTag( "MoveandSewUVs" );

	eval (($setup + " " + $parent + " " + 0));

	showOptionBox();
}

global proc string performPolyMapSewMove (int $option)
{
	string $prefix = "polyMapSewMove";
	string $intVars[] ={"lps", "nf"};
	string $cmd="";

	switch ($option) 
	{
		case 0:
		string $varName;
		int $ival;
		setOptionVars($prefix, false, $intVars);
		$cmd = "polyMapSewMove";
		for ( $i = size($intVars) ; $i-- ; )
		{
			$varName = ($prefix + $intVars[$i]);
			$ival = `optionVar -query $varName`;
			$cmd = $cmd + " -" + $intVars[$i] + " " + $ival;
		}

		polyPerformAction $cmd "f" 0;
		break;

		case 1:
			polyMapSewMoveOptions($prefix, $intVars);
			break;
		case 2:
			$cmd="performPolyMapSewMove 0";
			break;
	}
	return $cmd;
}
