// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//
//  Creation Date:  05 July 2006
//
//<doc>
//<name listPanelCategories>
//
//<synopsis>
//		string[] listPanelCategories()
//
//<description>
//		Lists all categories present in the Panels menus, including the
//	default menu entries as well as new categories added view the command
//	addPanelCategory.
//
//<returns>
//		string result[] : Returns the list of Panels categories on success.
//
//<examples>
//  string $cats[] = `listPanelCategories()`;
//
//</doc>
//

global proc string[] listPanelCategories()
{
    global string $gCategoryName[];
    global string $gCategoryInsertAfter[];

	// Define the list of default Panels entries. We need to define these
	// as a hardwired list to allow the user to query the entries before
	// the menu is constructed. What should really happen is the entire
	// panels menu is built using the addPanelCategory() mechanism so this
	// list always matches.
	//
	string $items[];
	int $i = 0; 
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPerspective" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kOrthographic" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kLookThroughSelected");
	if ( `getenv ENABLE_DEFAULT_VIEWPORT_CAMERA_SETS` == 1 ) { 
		$items[$i++] = uiRes( "m_buildPanelPopupMenu.kCameraSet" );
	}
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPanel" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kLayouts" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kSavedLayouts" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kTearOff" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kTearOffCopy" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPanelEditor" );

	// Insert the user-defined categories.
	//
	int $j;
	int $nc = size( $gCategoryName );
	for ( $i = 0; $i < $nc; $i++ ) {
		// Find the button to insert after.
		//
		int $ni = size( $items );
		for ( $j = 0; $j < $ni; $j++ ) {
			if ( $items[$j] == $gCategoryInsertAfter[$i] ) {
				stringArrayInsertAtIndex( $j + 1, $items, $gCategoryName[$i] );
			}
		}
	}

	return( $items );
}
