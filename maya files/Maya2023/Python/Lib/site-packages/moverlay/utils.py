"""
    general utilities
"""
from __future__ import absolute_import

import sys
from six.moves import urllib

# Qt
from PySide2.QtCore import QPoint, QRect, QSize
from PySide2 import QtWidgets

# internal
from .enums import RelTo

_IS_MAC_OS = True if sys.platform == "darwin" else False

try:
    from maya.OpenMayaUI import MQtUtil
    _DPI_SCALE = MQtUtil.dpiScale(1.0)
except ImportError:
    _DPI_SCALE = 1.0

LOREN_IPSUM = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip commodo...."


def DPIScale(value):
    if type(value) == QRect:
        return QRect(DPIScale(value.topLeft()), DPIScale(value.size()))
    else:
        return value * _DPI_SCALE


def path2url(path):
    return urllib.parse.urljoin(
        'file:', urllib.request.pathname2url(path))


def getDPIPixmapName(baseName):
    """
        from VNN: returns image_100.png" when you pass "image",
    """
    import os
    modulePath = os.path.dirname(__file__)
    # in python 2, __file__ is relative, in > 3.5 it is absolute
    if not os.path.isabs(modulePath):
        modulePath = os.path.abspath(modulePath)

    currentFolder = modulePath + os.path.sep + "resources"
    currentFolder = currentFolder.replace("\\", "/")
    currentFolder += "/"

    if _IS_MAC_OS:
        suffix = 200
    else:
        suffix = DPIScale(100)
    return currentFolder + baseName + "_" + str(int(suffix)) + ".png"


def loadLocalPixmap(prefix):
    """ loads an image in the appropriate DPI from a folder in this module """
    qpixmap = QtWidgets.QPixmap(getDPIPixmapName(prefix))
    assert(not qpixmap.isNull())
    return qpixmap


def placeRectInParent(parentRect, relTo, childRect,
                      offset=QSize(0, 0)):
    # type:  (QRect, RelTo, QRect, QSize) -> None
    """ takes ChildRect and puts it in the parent, relative to the given corner and using the given offset """
    if relTo == RelTo.TopLeft:
        childRect.moveTopLeft(parentRect.topLeft())
        childRect.translate(offset.width(), offset.height())
    elif relTo == RelTo.TopRight:
        childRect.moveTopRight(parentRect.topRight())
        childRect.translate(-offset.width(), offset.height())
    elif relTo == RelTo.BottomLeft:
        childRect.moveBottomLeft(parentRect.bottomLeft())
        childRect.translate(offset.width(), -offset.height())
    elif relTo == RelTo.BottomRight:
        childRect.moveBottomRight(parentRect.bottomRight())
        childRect.translate(-offset.width(), -offset.height())
    elif relTo == RelTo.Top:
        dx = childRect.width() / 2
        childRect.moveTopLeft(
            QPoint(parentRect.center().x()-dx, parentRect.top()))
        childRect.translate(offset.width(), offset.height())
    elif relTo == RelTo.Bottom:
        dx = childRect.width() / 2
        childRect.moveBottomLeft(
            QPoint(parentRect.center().x()-dx, parentRect.bottom()))
        childRect.translate(offset.width(), -offset.height())
    elif relTo == RelTo.Left:
        dy = childRect.height() / 2
        childRect.moveTopLeft(
            QPoint(parentRect.left(), parentRect.center().y()-dy))
        childRect.translate(offset.width(), offset.height())
    elif relTo == RelTo.Right:
        dy = childRect.height() / 2
        childRect.moveTopRight(
            QPoint(parentRect.right(), parentRect.center().y()-dy))
        childRect.translate(-offset.width(), offset.height())
    elif relTo == RelTo.Center:
        childRect.moveCenter(parentRect.center())
        childRect.translate(offset.width(), offset.height())
    elif relTo == RelTo.AttachToAllSides:
        childRect.setTopLeft(parentRect.topLeft())
        childRect.setSize(parentRect.size())
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
