import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.OpenMayaUI as mui
import maya.cmds as cmds

from shiboken2 import wrapInstance, isValid
from PySide2.QtWidgets import QWidget

from .bluePencilToolBarContent import buildPopup, checkableButton, CONTROL_SPACING, ICON_SIZE
from .bluePencilUtil import DPI

# Set the current color based on input
def setCurrentColor(colorSlider):
    rgb = cmds.colorSliderGrp(colorSlider, query=True, rgb=True, useDisplaySpace=True)
    # Convert float representation to int
    r = round(rgb[0] * 255)
    g = round(rgb[1] * 255)
    b = round(rgb[2] * 255)
    cmds.bluePencilUtil(edit=True, drawColor=(r,g,b))

# Given the name of a colorSliderGrp widget, will locate its color label
# and set its minimum size to the specified dimensions
def setMinColorSelectorSize(colorSliderGrp, width, height):
    ptr = mui.MQtUtil.findLayout(colorSliderGrp)
    if ptr is not None:
        mayaWidget = wrapInstance(int(ptr), QWidget)
        mayaLayout = mayaWidget.layout()
        if mayaLayout is not None and isValid(mayaLayout):
            mayaLayout.setContentsMargins(0, 0, 0, 0)
            mayaLayout.setSpacing(0)
            for i in range(mayaLayout.count()):
                child = mayaLayout.itemAt(i).widget()
                if child.metaObject().className() == 'QmayaColorSliderLabel':
                    child.setMinimumSize(DPI(width), DPI(height))
                    break

def addColorSelector(toolbar):

    # Create the color selector. Normally this would be a color slider, but we
    # only want an icon-sized swatch, so the sider width is set to 0
    colorSelector = cmds.colorSliderGrp('BluePencilDrawColor',
                                        cw=((1,ICON_SIZE),(2,0)),
                                        useDisplaySpace=True,
                                        useVpColorPicker=False,
                                        width=ICON_SIZE,
                                        height=ICON_SIZE,
                                        changeCommand=lambda x: setCurrentColor(colorSelector),
                                        annotation=maya.stringTable['y_maya_plugin_bluepencil_bluePencilToolBarColorSelector.kDrawColorAnnot' ])
    setMinColorSelectorSize(colorSelector, ICON_SIZE, ICON_SIZE)

    def updateSelectorColor():
        color = cmds.bluePencilUtil(query=True, drawColor=True)
        cmds.colorSliderGrp(colorSelector,
            e=True,
            rgb=(color[0]/255, color[1]/255, color[2]/255),
            useDisplaySpace=True)

    updateSelectorColor()
    toolbar.updateCallbacks.append(updateSelectorColor)

    return colorSelector
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
