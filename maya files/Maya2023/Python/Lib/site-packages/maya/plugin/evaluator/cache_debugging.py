'''
Simple handler for cache debugging operations. Provides a common location for enabling
all debugging related to cached playback.
'''
from maya.debug.DebugTrace import DebugTrace

__all__ = [ r'CachePerformanceTrace' # Debugging class to derive from and inherit shared debugging behaviour among all cache performance code
          , r'CP_DBG'                # Helper class-independent debugging object
          ]

#======================================================================
# Set this to True to enable debugging of the cache performance UI and preferences
CACHE_PERFORMANCE_DEBUGGING=False

#======================================================================
class CachePerformanceTrace(DebugTrace):
    '''Shared trace base class that links all of the cache performance debugging states together'''
    def __init__(self, *args, **kwargs): # This construct allows forwarding of init parameters with multiple inheritance
        '''Initialize the flags from the global state'''
        assert args or not args
        assert kwargs or not kwargs
        super(CachePerformanceTrace, self).__init__()
        self.debugging = CACHE_PERFORMANCE_DEBUGGING
        self.include_class_name = True

#======================================================================
# Helper to use for debugging local methods not tied to a class
CP_DBG = CachePerformanceTrace()
CP_DBG.include_class_name = False
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
