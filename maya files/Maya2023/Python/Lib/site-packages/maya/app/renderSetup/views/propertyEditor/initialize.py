
import maya.app.renderSetup.views.propertyEditor.collection as collection
import maya.app.renderSetup.views.propertyEditor.group as group
import maya.app.renderSetup.views.propertyEditor.lightsCollection as lightsCollection
from maya.app.renderSetup.views.propertyEditor.staticCollection import StaticCollection
from maya.app.renderSetup.views.propertyEditor.basicCollection import BasicCollection
import maya.app.renderSetup.views.propertyEditor.simpleSelector as simpleSelector

import maya.app.renderSetup.views.propertyEditor.containerFactory as containerFactory
import maya.app.renderSetup.views.propertyEditor.selectorFactory as selectorFactory

import maya.app.renderSetup.model.collection as modelCollection
import maya.app.renderSetup.model.selector as modelSelector
import maya.app.renderSetup.model.group as modelGroup

_collectionEntries = {
    modelCollection.LightsCollection.kTypeName:              lightsCollection.LightsCollection,
    modelCollection.LightsChildCollection.kTypeName:         StaticCollection,
    modelCollection.RenderSettingsCollection.kTypeName:      BasicCollection,
    modelCollection.RenderSettingsChildCollection.kTypeName: BasicCollection,
    modelCollection.Collection.kTypeName:                    collection.Collection,
    modelCollection.AOVCollection.kTypeName:                 BasicCollection,
    modelCollection.AOVChildCollection.kTypeName:            BasicCollection
}

_groupEntries = {
    modelGroup.Group.kTypeName:                              group.Group
}

_selectorEntries = {
    modelSelector.SimpleSelector.kTypeName:    simpleSelector.SimpleSelector,
    modelSelector.BasicSelector.kTypeName:     simpleSelector.BasicSelector,
    modelSelector.LightsCollectionSelector.kTypeName: simpleSelector.LightsCollectionSelector
}

def initialize():
    for entry in list(_collectionEntries.items()):
        containerFactory.register(*entry)

    for entry in list(_selectorEntries.items()):
        selectorFactory.register(*entry)

    for entry in list(_groupEntries.items()):
        containerFactory.register(*entry)


def uninitialize():
    for entry in _collectionEntries:
        containerFactory.unregister(entry)

    for entry in _selectorEntries:
        selectorFactory.unregister(entry)

    for entry in _groupEntries:
        containerFactory.unregister(entry)
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
