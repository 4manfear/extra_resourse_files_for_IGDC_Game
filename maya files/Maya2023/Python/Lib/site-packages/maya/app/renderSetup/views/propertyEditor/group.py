import maya
maya.utils.loadStringResourcesForModule(__name__)

from builtins import int
from maya.app.renderSetup.views.propertyEditor.collectionPropertyEditorStrings import *

import maya.app.renderSetup.views.utils as utils

from maya.app.general.mayaMixin import MayaQWidgetBaseMixin

from PySide2.QtWidgets import QGroupBox, QLineEdit, QVBoxLayout
from shiboken2 import getCppPointer

import maya.app.renderSetup.views.propertyEditor.layout as propEdLayout

import maya.app.renderSetup.views.proxy.renderSetupRoles as renderSetupRoles

# For Maya UI name extraction
import maya.OpenMayaUI as mui

# Layout inter-widget vertical, horizontal spacing.
vSpc = 3
hSpc = 10

class Group(MayaQWidgetBaseMixin, QGroupBox):
    """
    This class provides a very simple property editor UI for a group.
    It displays the "path" to the group within the render setup data
    model tree.
    """

    PATH_LINEEDIT_TRANSPARENT_STYLESHEET = "QLineEdit { background: transparent; border: 0px; border-radius: 0px;}"

    def __init__(self, item, parent):
        super(Group, self).__init__(parent=parent)

        # item is a weakref.
        self.item = item
        self.path = None

        layout = QVBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(utils.dpiScale(2))
        layout.setObjectName('group_vertical_box_layout')

        self._setupMainGroupGroupBox(layout)
        self.setLayout(layout)
        # Unwrap the layout into a pointer to be able to get the UI name.
        # We use fullName() to ensure a unique name is used
        self._layoutName = mui.MQtUtil.fullName(
            int(getCppPointer(self.layout())[0]))

        # parent.treeView is a weakref.
        self.treeView = parent.treeView

    def _setupGroupPathName(self, mainGroupBoxLayout):
        # MAYA-72148
        # Path name is encapsulated within a transparent borderless lineEdit
        # This avoids unnecessary Property Editor window resizing with long path names
        self.path = QLineEdit()
        self.path.setText(self.item().data(renderSetupRoles.NODE_PATH_NAME))
        self.path.setReadOnly(True)
        self.path.setStyleSheet(self.PATH_LINEEDIT_TRANSPARENT_STYLESHEET)

        mainGroupBoxLayout.addRow(maya.stringTable['y_maya_app_renderSetup_views_propertyEditor_group.kPath' ], self.path)

    def _setupMainGroupGroupBox(self, layout):
        mainGroupBox = QGroupBox()
        mainGroupBox.setContentsMargins(0, 0, 0, 0)
        mainGroupBoxLayout = propEdLayout.Layout()
        mainGroupBoxLayout.setVerticalSpacing(utils.dpiScale(2))

        self._setupGroupPathName(mainGroupBoxLayout)

        mainGroupBox.setLayout(mainGroupBoxLayout)
        layout.addWidget(mainGroupBox)

    def paintEvent(self, event):
        if self.item():
            path = self.item().data(renderSetupRoles.NODE_PATH_NAME)
            if self.path.text() != path:
                self.path.setText(path)

        super(Group, self).paintEvent(event)

    def populateFields(self):
        pass
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
