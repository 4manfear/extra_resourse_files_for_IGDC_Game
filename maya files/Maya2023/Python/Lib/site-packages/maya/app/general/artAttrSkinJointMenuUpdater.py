import maya.api.OpenMaya as om
import maya.cmds as cmds
import maya.mel as mel

class artAttrSkinJointMenuUpdater():
    """
    This class is used to update the Paint Skin Weight UI in case a change
    occurs to the skinCluster displayed by the UI. This can happen in some
    circumstances, such as when the "Removed Unused Influences" command is used.
    """

    def __init__(self):
        """
        Initialize dictionary of callback_ids
        """
        self.callback_ids = []

    def artAttrSkinJointMenuCallBack(self, skinClusters):
        """
        Attach a callback that monitors the connection of the skinClusters
        passed to the method (i.e., the ones active in the paint tool).
        """
        om.MMessage.removeCallbacks(self.callback_ids)
        self.callback_ids[:] = []
        for skinCluster in skinClusters:
            selectionList = om.MSelectionList()
            selectionList.add( skinCluster )
            node = selectionList.getDependNode( 0 )
            self.callback_ids.append( om.MNodeMessage.addAttributeChangedCallback( node, self.onAttributeChanged ) )

    @staticmethod
    def onAttributeChanged( msg, plg, otherPlug, clientData=None):
        try:
            # Note that given a list of skinCluster nodes, the UI will call
            # skinClusterInflFindInfluenceNodes, which will use the
            # skinCluster -q -inf command to figure out the influences. That
            # command will only look at the connection(s) to the skinCluster's
            # ma (aka, matrix) attribute to figure this info out, so as a
            # result, the callback only needs to check if that particular
            # attr is being modified, and ignore everything else.
            #
            plug = plg.array()
            plugName = plug.partialName( includeNodeName=False )
            if( plugName == "ma" ):
                # If connections to skinClusters are modified, this callback
                # gets triggered, but should only attempt to rebuild the
                # menu if the current context is of type artAttrSkinPaintCtx.
                ctx = cmds.currentCtx()
                if( cmds.artAttrSkinPaintCtx( ctx, exists=1 ) ):
                    # Refresh the Paint Skin Weight UI
                    mel.eval('artAttrSkinJointMenuRebuild( "artAttrSkinPaintCtx")')
        except TypeError as e:
            # Not an array, so we're not interested
            pass

# Create a class member, and use this as a singleton

scw = artAttrSkinJointMenuUpdater()

# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
