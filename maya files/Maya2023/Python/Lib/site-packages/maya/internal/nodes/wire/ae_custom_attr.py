# File: ae_custom_attr.py
from maya.internal.common.ae.custom import CustomControl
from maya.internal.common.ae.template import plugAttr
from maya.internal.nodes.wire.ui_template import UITemplate
import maya.cmds as cmds


def ctrlName(attrName, i):
    return "{}{}".format(attrName, i)


class AEwireAttrControl(CustomControl):
    def buildControlUI(self):
        attrName = plugAttr(self.plugName)
        with UITemplate():
            self.columnLayout = cmds.columnLayout("{}Column".format(attrName))
            for i, wire in enumerate(self.__wireList()):
                with UITemplate():
                    attr = self.__attr(i)
                    name = ctrlName(attrName, i)
                    cmds.attrControlGrp(name, a=attr, label=wire)

            cmds.setParent("..")
        cmds.setUITemplate(ppt=True)
        self.replaceControlUI()

    def replaceControlUI(self):
        with UITemplate():
            attrName = plugAttr(self.plugName)
            cmds.setParent("{}Column".format(attrName))
            oldCount = cmds.columnLayout(self.columnLayout, q=True, nch=True)
            wireList = self.__wireList()
            plugList = self.__plugList()

            for i, wire in enumerate(wireList):
                if len(wireList) != len(plugList):
                    attr = self.__attr(i)
                else:
                    plug = plugList[i]
                    extract = plug[12:len(plug)]
                    attr = "{}{}".format(self.plugName, extract)

                name = ctrlName(attrName, i)
                if cmds.attrControlGrp(name, ex=True):
                    cmds.attrControlGrp(name, e=True, a=attr, label=wire)
                else:
                    with UITemplate():
                        cmds.attrControlGrp(name, a=attr, label=wire)

            for i in range(len(wireList), oldCount):
                name = ctrlName(attrName, i)
                if cmds.attrControlGrp(name, ex=True):
                    cmds.deleteUI(name)

            cmds.setParent("..")

    def __attr(self, i):
        return "{}[{}]".format(self.plugName, i)

    def __wireList(self):
        wireList = cmds.listConnections("{}.dw".format(self.nodeName), d=False)
        return wireList if wireList else []

    def __plugList(self):
        plugList = cmds.listAttr(
            "{}.dw".format(self.nodeName),
            m=True,
            st="deformedWire")

        return plugList if plugList else []
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
