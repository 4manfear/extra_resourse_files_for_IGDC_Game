import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.cmds
import maya.internal.common.ae.template as aetemplate
import maya.internal.common.ae.ramp as aeramp
from maya.common.ui import LayoutManager
from PySide2 import QtWidgets, QtCore, QtGui
import maya.internal.nodes.common.componenttag.component_tag_edit as ctag_edit
import maya.internal.nodes.falloffeval.node_interface as ifc
import maya.internal.common.utils.connections as con_utils
import maya.internal.common.ae.custom as aecustom

class ComponentTagWidget(ctag_edit.ComponentTagExpressionFieldGrp):
    def __init__(self, parentUI=None):
        super(ComponentTagWidget, self).__init__()

    def getGeometryPlug(self, nodeName, plugName):
        return nodeName + ".currentGeometry"

noneLabel = maya.stringTable['y_maya_internal_nodes_falloffeval_ae_template.kLabelNone' ]

class GeometryControl(aecustom.CustomControl):
    def buildControlUI(self):
        parent = maya.cmds.setParent(q=True)

        maya.cmds.setUITemplate('attributeEditorTemplate', pushTemplate=True)

        self.originalGeom = maya.cmds.textFieldGrp(label=maya.stringTable['y_maya_internal_nodes_falloffeval_ae_template.kOriginalGeometry' ], enable=False)
        self.currentGeom = maya.cmds.textFieldGrp(label=maya.stringTable['y_maya_internal_nodes_falloffeval_ae_template.kCurrentGeometry' ], enable=False)

        maya.cmds.setUITemplate(popTemplate=True)
        maya.cmds.setParent(parent)
        self.replaceControlUI()

    def replaceControlUI(self):
        editor = ifc.NodeInterface(self.nodeName)
        if not editor.isValid():
            return
        maya.cmds.scriptJob(p=self.originalGeom, rp=True, ac=(editor.originalGeometryPlugName(), lambda *a: self.updateWidgets()))
        maya.cmds.scriptJob(p=self.currentGeom, rp=True, ac=(editor.currentGeometryPlugName(), lambda *a: self.updateWidgets()))

        self.updateWidgets()

    def updateWidgets(self):
        editor = ifc.NodeInterface(self.nodeName)
        if not editor.isValid():
            return

        og = con_utils.getSourcePlug(editor.originalGeometryPlugName())
        cg = con_utils.getSourcePlug(editor.currentGeometryPlugName())

        maya.cmds.textFieldGrp(self.originalGeom, edit=True, text=og if og else noneLabel)
        maya.cmds.textFieldGrp(self.currentGeom, edit=True, text=cg if cg else noneLabel)


class AETemplate(aetemplate.Template):
    def buildUI(self, nodeName):
        with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_falloffeval_ae_template.kLabelFalloffEvaltAttr' ]):
            self.defineQtCustom(ComponentTagWidget, ['componentTagExpression'])
            self.defineCustom(GeometryControl(), ['originalGeometry', 'currentGeometry'])

            self.suppress('originalGeometry')
            self.suppress('currentGeometry')

        self.callTemplate('dependNode')
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
