"""
solidify -
    Module containing functions to create setup with the solidify deformer
"""
import maya
maya.utils.loadStringResourcesForModule(__name__)


from builtins import object
import maya.cmds

import maya.internal.common.cmd.deformer as cmddeformer
import maya.internal.common.utils.ui as ui_utils

class eAttachmentMode(object):
    kBorders = 0
    kFull = 1

# ------------------------------------------------------------------------------
# Command
# ------------------------------------------------------------------------------
class Command(cmddeformer.Command):

    def __init__(self):
        super(Command, self).__init__()

        self.commandName = 'Solidify'
        self.commandHelpTag	= 'Solidify'
        self.commandDescription = maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyCommandDescription' ]
        self.commandTitle = maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyCommandTitle' ]
        self.optionVarCategory = 'Deform.Solidify'
        self.optionVarPrefix = 'Solidify'
        self.optionVarDefaults.update( {
            'attachmentMode': eAttachmentMode.kBorders,
            'stabilizationLevel': 0,
            'useBorderFalloff': True,
            'borderFalloffBlur': 2 } )

    @classmethod
    def command(cls, **kwargs):
        '''Solidify deformer command
        '''
        returnedNodes = list()

        # Create the deformer node using the generic command
        result = cmddeformer.Command.createDeformer(deformerType='solidify', **kwargs)

        if result is not None:
            deformerNode = result[0]

            settableAttrs = [ 'stabilizationLevel',
                            'useBorderFalloff',
                            'borderFalloffBlur',
                            'attachmentMode' ]
            cls.setNodeAttributes(deformerNode, kwargs, settableAttrs)
            returnedNodes.append(deformerNode)

        return cls.finalizeCommand(returnedNodes)

    def addBasicDeformerDialogWidgets(self):

        widgetDict = {} # {optionVarDictKey, (widgetClass, widget)}

        with ui_utils.AttributeLayoutManager():

            opts = [ (maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelOptAttachmentModeBorder' ], eAttachmentMode.kBorders),
                     (maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelOptAttachmentModeFull' ], eAttachmentMode.kFull) ]
            widget, lookup = ui_utils.createOptionMenu(maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelWrapMode' ],
                options=opts)
            self.optionMenuGrp_labelToEnum['attachmentMode'] = lookup
            widgetDict['attachmentMode'] = (maya.cmds.optionMenuGrp, widget)

            widget = ui_utils.intSliderGrp(maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelStabilizationLevel' ], 0, 100)
            widgetDict['stabilizationLevel'] = (maya.cmds.intSliderGrp, widget)

            widget = ui_utils.checkBoxGrp(maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelUseBorderFalloff' ])
            widgetDict['useBorderFalloff'] = (maya.cmds.checkBoxGrp, widget)

            widget = ui_utils.intSliderGrp(maya.stringTable['y_maya_internal_nodes_solidify_cmd_create.kSolidifyLabelFalloffIterations' ], 0, 100)
            widgetDict['borderFalloffBlur'] = (maya.cmds.intSliderGrp, widget)

        return widgetDict

# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
