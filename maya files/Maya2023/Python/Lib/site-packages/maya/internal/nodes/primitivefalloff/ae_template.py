import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.cmds
import maya.mel as mel
import maya.internal.common.ae.template as aetemplate
import maya.internal.common.ae.ramp as aeramp
from maya.common.ui import LayoutManager


class AETemplate(aetemplate.Template):
    def buildUI(self, nodeName):
        with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_primitivefalloff_ae_template.kLabelSphereFalloff' ]):
            self.addControls(['primitive', 'useOriginalGeometry'])
            self.addControl('vertexSpace')
            self.addControls(['positiveSize', 'negativeSize'])
            self.addControls(['start', 'end'])
            self.defineCustom(aeramp.RampControl(), ['ramp'])
            self.suppress('outputWeightFunction')
            self.suppress('ramp')

        with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_primitivefalloff_ae_template.kTransformAttributes' ], collapse=False):
            self.addControls(['translate', 'rotate', 'scale'])
            with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_primitivefalloff_ae_template.kTransformParentOffsetMatrixAttribute' ], collapse=True):
                    self.addControls(['offsetParentMatrix'])

        mel.eval("""AEtransformNoScroll("%s")"""%(nodeName))

        self.suppress('rotationInterpolation')
        self.suppress('rotateQuaternion')
        self.suppress('mentalRayControls')
        self.suppress('rotateOrder')
        self.suppress('rotateAxis')
        self.suppress('shear')
        self.suppress('inheritsTransform')
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
