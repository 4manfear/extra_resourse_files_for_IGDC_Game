import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.cmds as cmds
import maya.internal.nodes.weightgeometryfilter.ae_template as wgfae
import maya.internal.nodes.blendshape.node_interface as ifc # Note: this import line must be here to ensure the node_interface class is registered
import maya.internal.common.ae.custom as aecustom
from maya.internal.common.ae.template import plugAttr, Layout

class AEblendShapeAttrControl(aecustom.CustomControl):
    def _get_slider_name(self, attrName, idx):
        return "{}{}".format(attrName, idx)

    def _get_all_weights(self):
        weights = cmds.listAttr("{}.w".format(self.nodeName), m=True)
        return weights if weights else []

    def buildControlUI(self):
        attrName = plugAttr(self.plugName)

        cmds.setUITemplate("attributeEditorTemplate", pst=True)
        self.columnLayout = cmds.columnLayout("{}Column".format(attrName))

        weightAttrs = self._get_all_weights()
        for i, attr in enumerate(weightAttrs):
            cmds.setUITemplate("attributeEditorTemplate", pst=True)
            sliderLabel = attr
            sliderName = self._get_slider_name(attrName, i)
            cmds.attrFieldSliderGrp(sliderName, min=0.0, max=1.0, fmn=-10, fmx=10, s=0.1, label=sliderLabel)
            cmds.setUITemplate(ppt=True)

        cmds.setParent("..")
        cmds.setUITemplate(ppt=True)
        self.replaceControlUI()


    def replaceControlUI(self):
        attrName = plugAttr(self.plugName)

        cmds.setUITemplate("attributeEditorTemplate", pst=True)
        cmds.setParent("{}Column".format(attrName))
        oldCount = cmds.columnLayout(self.columnLayout, q=True, nch=True)

        weightAttrs = self._get_all_weights()
        for i, attr in enumerate(weightAttrs):
            sliderLabel = attr
            sliderName = self._get_slider_name(attrName, i)

            nodeAttr = "{}.{}".format(self.nodeName, attr)
            if cmds.attrFieldSliderGrp(sliderName, ex=True):
                cmds.attrFieldSliderGrp(sliderName, e=True, label=sliderLabel, at=nodeAttr)
            else:
                cmds.setUITemplate("attributeEditorTemplate", pst=True)
                cmds.attrFieldSliderGrp(sliderName, min=0.0, max=5.0, fmn=0.0, fmx=20.0, s=0.1, label=sliderLabel, at=nodeAttr)
                cmds.setUITemplate(ppt=True)

        for i in range(len(weightAttrs), oldCount):
            sliderName = self._get_slider_name(attrName, i)
            if (cmds.attrFieldSliderGrp(sliderName, ex=True)):
                cmds.deleteUI(sliderName)

        cmds.setParent("..")
        cmds.setUITemplate(ppt=True)


class AETemplate(wgfae.AETemplate):
    def buildUI(self, nodeName):
        with Layout(self, maya.stringTable['y_maya_internal_nodes_blendshape_ae_template.kBlendShapeAttributes' ], False):
            self.addControl("origin")

        with Layout(self, maya.stringTable['y_maya_internal_nodes_blendshape_ae_template.kWeight' ], False):
            self.defineCustom(AEblendShapeAttrControl(), "weight")
            self.addControl("supportNegativeWeights")


        self.suppress("topologyCheck")
        self.suppress("inputTarget")
        self.suppress("baseOrigin")
        self.suppress("targetOrigin")
        self.suppress("icon")
        self.suppress("paintWeights")
        self.suppress("deformationOrder")

        super(AETemplate, self).buildUI(nodeName)
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
