"""
proximityWrap -
    Module containing functions to edit the proximityWrap node
"""
import maya
maya.utils.loadStringResourcesForModule(__name__)


import maya.cmds

import maya.internal.common.cmd.optionvar as cmdopt
import maya.internal.common.utils.ui as ui_utils

labelWrapModeOffset = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelOptWrapModeOffset' ]
labelWrapModeSurface = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelOptWrapModeSurface' ]
labelWrapModeSnap = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelOptWrapModeSnap' ]
labelWrapModeRigid = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelOptWrapModeRigid' ]
labelWrapModeGlobal = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelOptWrapModeMix' ]

'''
    This class just manages a window that can be used to edit a few optionVars
    for default values when creating a new driver.
'''
# ------------------------------------------------------------------------------
class eWrapMode(object):
    kOffset = 0
    kSurface = 1
    kSnap = 2
    kRigid = 3
    kGlobal = 100

# ------------------------------------------------------------------------------
# Command
# ------------------------------------------------------------------------------
class Command(cmdopt.Command):

    def __init__(self):
        super(Command, self).__init__()
        self.defaultWindowSize = [600, 350]
        self.commandName = 'ProximityWrapEdit'
        self.commandHelpTag	= 'ProximityWrap'
        self.commandTitle = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapCommandTitle' ]
        self.commandDescription = maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapCommandDescription' ]

        self.windowTag = 'ProximityWrapEdit'
        self.optionVarCategory = 'Deform.Proximity Wrap.Edit'
        self.optionVarPrefix = 'ProximityWrapEdit'
        self.optionVarDefaults.update( {
            'driverWrapMode': eWrapMode.kGlobal,
            'driverStrength': 1.0,
            'driverFalloffStart': 0.0,
            'driverFalloffEnd': 1.0,
            'driverSmoothNormals': 0,
            'driverOverrideSmoothNormals': False,
            'driverOverrideFalloffRamp': False
            } )

    def addContentDialogWidgets(self):
        widgetDict = {} # {optionVarDictKey, (widgetClass, widget)}
        with ui_utils.AttributeLayoutManager():
            opts = [ (labelWrapModeOffset, eWrapMode.kOffset),
                            (labelWrapModeSurface, eWrapMode.kSurface),
                            (labelWrapModeSnap, eWrapMode.kSnap),
                            (labelWrapModeRigid, eWrapMode.kRigid),
                            (labelWrapModeGlobal, eWrapMode.kGlobal) ]

            widget, lookup = ui_utils.createOptionMenu(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverWrapMode' ], options=opts, changeCommand=self._onUpdateWidgets)
            self.optionMenuGrp_labelToEnum['driverWrapMode'] = lookup
            widgetDict['driverWrapMode'] = (maya.cmds.optionMenuGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverStrength' ], 0.0, 10.0, changeCommand=self._onUpdateWidgets)
            widgetDict['driverStrength'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverFalloffStart' ], 0.0, 10.0, changeCommand=self._onUpdateWidgets)
            widgetDict['driverFalloffStart'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverFalloffEnd' ], 0.0, 10.0, changeCommand=self._onUpdateWidgets)
            widgetDict['driverFalloffEnd'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.intSliderGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverSmoothNormals' ], 0, 10, changeCommand=self._onUpdateWidgets)
            widgetDict['driverSmoothNormals'] = (maya.cmds.intSliderGrp, widget)

            widget = ui_utils.checkBoxGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverOverrideSmoothNormals' ], changeCommand=self._onUpdateWidgets)
            widgetDict['driverOverrideSmoothNormals'] = (maya.cmds.checkBoxGrp, widget)

            widget = ui_utils.checkBoxGrp(maya.stringTable['y_maya_internal_nodes_proximitywrap_cmd_optionvar.kProximityWrapLabelDriverOverrideFalloffRamp' ], changeCommand=self._onUpdateWidgets)
            widgetDict['driverOverrideFalloffRamp'] = (maya.cmds.checkBoxGrp, widget)

        return widgetDict
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
