"""
deltamush -
    Module containing functions to create setup with the deltaMush node
"""
import maya
maya.utils.loadStringResourcesForModule(__name__)


import maya.cmds

import maya.internal.common.cmd.deformer as cmddeformer
import maya.internal.common.utils.ui as ui_utils

# ------------------------------------------------------------------------------
# Command
# ------------------------------------------------------------------------------
class Command(cmddeformer.Command):
    def __init__(self):
        super(Command, self).__init__()

        self.commandName = 'DeltaMush'
        self.commandHelpTag	= 'DeltaMush'
        self.commandTitle = maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushCommandTitle' ]
        self.commandDescription = maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushCommandDescription' ]
        self.optionVarCategory = 'Deform.Delta Mush'
        self.optionVarPrefix = 'DeltaMush'
        self.optionVarDefaults.update( {
            'smoothingIterations': 10,
            'smoothingStep': 0.5,
            'displacement': 1.0,
            'inwardConstraint': 0.0,
            'outwardConstraint': 0.0,
            'distanceWeight': 0.0,
            'pinBorderVertices': True } )

    @classmethod
    def command(cls, **kwargs):
        '''DeltaMush deformer command
        '''
        returnedNodes = list()

        # Create the deformer node using the generic command
        result = cmddeformer.Command.createDeformer(deformerType='deltaMush', **kwargs)
        if result is not None:
            deformerNode = result[0]
            settableAttrs = [ 'smoothingIterations', 'smoothingStep' ,
                              'pinBorderVertices', 'displacement',
                              'distanceWeight',
                              'inwardConstraint', 'outwardConstraint' ]
            cls.setNodeAttributes(deformerNode, kwargs, settableAttrs)
            returnedNodes.append(deformerNode)

        return cls.finalizeCommand(returnedNodes)

    def addBasicDeformerDialogWidgets(self):

        widgetDict = {} # {optionVarDictKey, (widgetClass, widget)}

        with ui_utils.AttributeLayoutManager():
            widget = ui_utils.intSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelSmoothingIterations' ], 0, 100)
            widgetDict['smoothingIterations'] = (maya.cmds.intSliderGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelSmoothingStep' ], 0.0, 1.0)
            widgetDict['smoothingStep'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.checkBoxGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelPinBorderVerts' ])
            widgetDict['pinBorderVertices'] = (maya.cmds.checkBoxGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelDisplacement' ], 0.0, 1.0)
            widgetDict['displacement'] = (maya.cmds.floatSliderGrp, widget)

            ui_utils.addSeparatorLine()
            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelInwardConstraint' ], 0.0, 1.0)
            widgetDict['inwardConstraint'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelOutwardConstraint' ], 0.0, 1.0)
            widgetDict['outwardConstraint'] = (maya.cmds.floatSliderGrp, widget)

            widget = ui_utils.floatSliderGrp(maya.stringTable['y_maya_internal_nodes_deltamush_cmd_create.kDeltaMushLabelDistanceWeight' ], 0.0, 1.0)
            widgetDict['distanceWeight'] = (maya.cmds.floatSliderGrp, widget)

        return widgetDict

# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
