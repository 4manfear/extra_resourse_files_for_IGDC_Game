import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.internal.common.ae.template as aetemplate
import maya.internal.nodes.weightgeometryfilter.ae_template as wgfae
import maya.internal.nodes.geometryfilter.ae_template as gfae
import maya.internal.common.ae.ramp as aeramp
import maya.cmds as cmds

class AETemplate(wgfae.AETemplate):
    def inputAttributesTableHiddenColumns(self):
        return [gfae.eColumn.kFal]

    def buildUI(self, nodeName):
        with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_softmod_ae_template.kSoftModificationAttributes' ], collapse=False):

            self.addControl("falloffCenter")
            self.addControl("falloffRadius")
            self.addControl("falloffMode")
            self.defineCustom(aeramp.RampControl(), ['falloffCurve'])

            self.addControl("falloffInX")
            self.addControl("falloffInY")
            self.addControl("falloffInZ")

        with aetemplate.Layout(self, maya.stringTable['y_maya_internal_nodes_softmod_ae_template.kClusterAttributes' ], collapse=True):
            self.addControl("relative")
            self.addControl("angleInterpolation")

            self.suppress("clusterXforms")
            self.suppress("matrix")
            self.suppress("bindPreMatrix")
            self.suppress("bindState")

        self.suppress("angleInterpolation")
        self.suppress("softModXforms")
        self.suppress("influenceMatrix")

        super(AETemplate, self).buildUI(nodeName)

# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
