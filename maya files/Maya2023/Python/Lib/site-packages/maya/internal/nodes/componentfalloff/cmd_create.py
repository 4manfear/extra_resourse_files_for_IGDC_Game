"""
componentFalloff -
    Module containing functions to create setup with the componentFalloff node
"""

import maya.cmds as cmds
import maya.internal.common.cmd.base as cmdbase
import maya.internal.common.utils.ui as ui_utils


def connectWeightNodeToDeformer(weightNode, target, multiindex):
    cmds.connectAttr(weightNode + ".outputWeightFunction[0]", target + ".weightFunction[%d]"%multiindex)

def createBlendWeight(target, multiindex):
    blendfoff = cmds.createNode("blendFalloff")
    connectWeightNode(blendfoff, target, multiindex)

def getBlendWeight(target, multiindex):
    blend = cmds.listConnections(target + ".weightFunction[%d]"%multiindex)
    if len(blend):
        return blend[0]
    return None

def createComponentFalloff(target, multiindex):
    geom = cmds.createNode("componentFalloff")
    connectWeightNodeToDeformer(geom, target, multiindex)
    weightListAttr = "%s.weightList[%d].weights"%(target,multiindex)
    weights = cmds.getAttr(weightListAttr)[0]
    indices = cmds.getAttr(weightListAttr,  multiIndices=True)

    for i,w in zip(indices, weights):
        cmds.setAttr("%s.weightLayers[0].weights[%d]"%(geom,i), w)
    cmds.removeMultiInstance(weightListAttr)


def getMultiIndexOnDeformer(deformer, geom):
    results = cmds.deformableShape(geom, och=True)
    if results is None:
        return None
    for r in results:
        splitted = r.split(".")
        if splitted[0] == deformer:
            plug = splitted[-1]
            o = plug.find("[")
            c = plug.find("]")
            return int(plug[o+1:c])
    return None



class Command(cmdbase.Command):
    def __init__(self):
        super(Command, self).__init__()


    @staticmethod
    def createFalloff(deformer=None, geometry=None, **kwargs):
        if deformer is None or geometry is None:
            return None
        multiindex = getMultiIndexOnDeformer(deformer,geometry)
        if multiindex is None:
            return None
        createComponentFalloff(deformer,multiindex)

    @classmethod
    def command(cls, **kwargs):
        '''create component falloff with specified parameter
        '''
        Command.createFalloff(**kwargs)# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
