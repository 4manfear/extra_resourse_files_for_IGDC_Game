import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.api.OpenMaya as OpenMaya

import maya.cmds as cmds

kCmdArgNotSetUp = maya.stringTable['y_maya_internal_ufeSupport_ufeCmdWrapper.kCmdArgNotSetUp' ]

def execute(ufeCmd):
    UfeCmd.execute(ufeCmd)

class UfeCmd(OpenMaya.MPxCommand):

    kCmdName = 'ufeCmd'

    # UFE undoable command.  Must be set before creating an instance of the
    # command and executing it.  Ownership of this data is taken over by the
    # instance of the command.
    ufeCmd = None

    def isUndoable(self):
       return True

    def doIt(self, args):
        # Completely ignore the MArgList argument, as it's unnecessary:
        # arguments to the commands are passed in Python object form
        # directly to the command's constructor.
        if self.ufeCmd is None:
            self.displayWarning(kCmdArgNotSetUp % self.kCmdName)
        else:
            self.ufeCmd.execute()

    @staticmethod
    def execute(ufeCmd):
        """Add an entry to the undo queue for the wrapped UFE command."""

        UfeCmd.ufeCmd = ufeCmd
        cmds.ufeCmd()
        UfeCmd.ufeCmd = None

    @staticmethod
    def creator():
        # Give ownership of the UFE command to the command instance.
        return UfeCmd(UfeCmd.ufeCmd)

    def __init__(self, ufeCmd):
        super(UfeCmd, self).__init__()
        self.ufeCmd = ufeCmd

    def redoIt(self):
        self.ufeCmd.redo()

    def undoIt(self):
        self.ufeCmd.undo()
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
