import maya
maya.utils.loadStringResourcesForModule(__name__)

'''
Maya Instruction on how to create a control for a filename attribute

Read the Readme.md for further information
'''

import maya.cmds as cmds
import maya.mel as mel
from . import template
from maya.common.ui import LayoutManager, ParentManager

def assignFilename(fileAttribute, filename, fileType):
    cmds.setAttr(fileAttribute, filename, type="string")
    currentDir = cmds.workspace(q=True, dir=True)
    mel.eval("""retainWorkingDirectory("%s")"""%currentDir)
    return True

def fromNativePath(path):
    if cmds.about(nt=True):
        return cmds.encodeString(path).replace("\\\\","/")
    return path

def filenameBrowser(callback):
    workspace = cmds.workspace(q=True, fn=True)
    startDir = mel.eval("""setWorkingDirectory("%s", "image", "sourceImages")"""%workspace)

    filter = mel.eval("buildImageFileFilterList()")

    caption = maya.stringTable[ 'y_maya_internal_common_ae_filename.kOpenImage'  ]

    files = cmds.fileDialog2(caption=caption, fileMode=1, fileFilter=filter, startingDirectory=startDir)

    if files != None and len(files) > 0:
        callback(fromNativePath(files[0]), "")

def replace(controlName, plugName, attrName, changedCommand ):
    with ParentManager(controlName):
        cmds.connectControl("textureNameField", plugName, fileName=True)


        callback = lambda filename,filetype : assignFilename(plugName, filename, filetype)
        command = lambda *_a : filenameBrowser(callback)

        #TODO: move this code in bifrost plugin, doesnt belong here
        node = template.plugNode(plugName)
        if cmds.nodeType(node) == "bifrostContainer":
            callback = "AEassignFilenameCB " + plugName
            melcommand = ("AEbiPubCacheFileBrowser \"" +
                                callback + "\" " + plugName)
            command = lambda *_a: mel.eval(melcommand)

        cmds.button("browser", c=command, e=True)

    template.attachCallback(plugName,controlName,changedCommand)



def create(plugName, attrName, changedCommand):
    cmds.setUITemplate("attributeEditorTemplate", pst=True)

    createdControl = cmds.rowLayout(nc=3)
    with LayoutManager(createdControl):
        cmds.text(label=attrName)
        cmds.textField("textureNameField")
        cmds.symbolButton("browser", image="navButtonBrowse.png")

    cmds.setUITemplate(ppt=True)
    replace(createdControl, plugName, attrName, changedCommand)

    return createdControl# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
