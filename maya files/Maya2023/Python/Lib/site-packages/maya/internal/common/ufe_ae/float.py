'''
UFE instruction on how to create a control for a floating point attribute.

Read the Readme.md for further information
'''

import ufe
import maya.cmds as cmds
import maya.internal.ufeSupport.attributes as attributes

def updateUi(attr, uiControlName):
    '''Callback function to update the UI when the data model changes.'''
    # Get the attribute value or values into a list.
    attrValues = attr.get()
    try:
        attrValues = attrValues.vector
    except:
        attrValues = [ attrValues ]

    cmds.floatFieldGrp(uiControlName, e=True, **{"v" + str(i) : v for i, v in enumerate(attrValues, 1)})

    # Update the appearance and read-only status of control(s).
    isLocked = attributes.isAttributeLocked(attr)
    bgClr = attributes.getAttributeColorRGB(attr)
    for i in range(1, len(attrValues)+1):
        fieldControl = '%s|%s%d' % (uiControlName, 'field', i)
        if cmds.floatField(fieldControl, exists=True):
            cmds.floatField(fieldControl, e=True, editable=not isLocked)
            if bgClr:
                cmds.floatField(fieldControl, e=True, backgroundColor=bgClr)

def updateDataReader(*values, **kwargs):
    '''Read data from UI when updating UFE data model.

    We need a variable number of value arguments since the attribute can be 
    either a single value or a vector of values.
    
    Args:
        *values: float field values (from 1 to 4).
        *kwargs: keyword arguments ('ufeAttr': UFE attribute)
    '''
    ufeAttr = kwargs['ufeAttr']

    if len(values) == 1:
        return values[0]
    elif ufeAttr.type == ufe.Attribute.kFloat3:
        return ufe.Vector3f(*values)
    elif ufeAttr.type == ufe.Attribute.kDouble3:
        return ufe.Vector3d(*values)
    else:
        return None

def replace(controlName, ufeAttr, attrUIName, changedCommand):
    updateUi(ufeAttr, controlName)
    cmds.floatFieldGrp(controlName, e=True, label=attrUIName)
    attachCallbacks(ufeAttr, controlName, changedCommand)

def create(ufeAttr, attrUIName, changedCommand):
    # Get the attribute value or values into a list.
    attrValues = ufeAttr.get()
    try:
        attrValues = attrValues.vector
    except:
        attrValues = [ attrValues ]
    attrCount = len(attrValues)

    # When we have a single value, in order to use floatSliderGrp we need to
    # be able to query min/max from UFE.
    uiControl = cmds.floatFieldGrp(label=attrUIName, adj=0, nf=attrCount)
    pMenu = attributes.AEPopupMenu(uiControl, ufeAttr)
    updateUi(ufeAttr, uiControl)
    attachCallbacks(ufeAttr, uiControl, changedCommand)

    return uiControl

def attachCallbacks(ufeAttr, uiControl, changedCommand):
    # Create change callback for UFE and UI value synchronization.
    cb = attributes.createChangeCb(
        updateUi, ufeAttr, uiControl, updateDataReader=updateDataReader)
    cmds.floatFieldGrp(uiControl, edit=True, changeCommand=cb, dragCommand=cb)
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
