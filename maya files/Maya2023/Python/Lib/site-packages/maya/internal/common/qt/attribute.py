import maya.cmds
from PySide2 import QtWidgets, QtCore, QtGui
from PySide2.QtGui import QPalette, QColor, Qt

import maya.internal.common.utils.connections as con_utils
import maya.internal.common.ae.enum as enumutil
from maya.internal.common.utils.ui import makeUndoable

from shiboken2 import getCppPointer, wrapInstance
from maya.OpenMayaUI import MQtUtil
from sys import version_info as sys_version_info
long_type = int if sys_version_info[0] >= 3 else long

#-------------------------------------------------------------------------------
class FloatAttributeWidget(QtWidgets.QWidget):
    NAME_SUFFIX = 0

    @staticmethod
    def getUniqueName(): 
        FloatAttributeWidget.NAME_SUFFIX += 1
        return 'floatAttribute{}'.format(FloatAttributeWidget.NAME_SUFFIX)

    def __init__(self, plugName):
        super(FloatAttributeWidget, self).__init__()

        self.layout = QtWidgets.QHBoxLayout(self)
        self.layout.setContentsMargins(0,0,0,0)
        self.field = maya.cmds.floatField(showTrailingZeros=False,precision=4,step=0.01)
        widgetptr = MQtUtil.findControl(self.field)

        fieldWidget = wrapInstance(long_type(widgetptr), QtWidgets.QWidget)
        fieldWidget.setParent(self)

        self.layout.addWidget(fieldWidget)

        self.setObjectName(FloatAttributeWidget.getUniqueName())
        self.setPlug(plugName)
        self.setLayout(self.layout)

    def setPlug(self, plugName):
        self.plugName = plugName
        maya.cmds.connectControl(self.field, plugName)

#-------------------------------------------------------------------------------
class EnumAttributeWidget(QtWidgets.QComboBox):
    def __init__(self, plugName):
        super(EnumAttributeWidget, self).__init__()
        self.plugName = plugName
        self.items = enumutil.getEnumItem(con_utils.plugNode(self.plugName), con_utils.plugAttr(self.plugName))
        [self.addItem(item[1], item[0]) for item in self.items]
        self.refreshAttributeValue()
        self.currentIndexChanged.connect(makeUndoable(self._updateAttribute))

    def refreshAttributeValue(self):
        idx = maya.cmds.getAttr(self.plugName)
        for item in self.items:
            if item[0] == idx:
                self.setCurrentText(item[1])
                break
    def _updateAttribute(self, *args):
        item = self.items[self.currentIndex()]
        maya.cmds.setAttr(self.plugName, item[0])
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
