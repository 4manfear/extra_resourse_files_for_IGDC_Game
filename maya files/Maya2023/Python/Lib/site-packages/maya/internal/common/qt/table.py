from PySide2 import QtWidgets, QtCore

#-------------------------------------------------------------------------------
class TableAction(QtWidgets.QAction):
    """
    Action for a TableWidget containing the id of the required action
    """
    def __init__(self, name, parent, actId):
        super(TableAction, self).__init__(name, parent)
        self.actId = actId

#-------------------------------------------------------------------------------
class InfoTableWidgetItem(QtWidgets.QTableWidgetItem):
    """
    Item for the Table widget that holds a specific piece of information
    in its info member
    """
    def __init__(self, text, info):
        super(InfoTableWidgetItem, self).__init__(text)
        self.info = info

#-------------------------------------------------------------------------------
class TableWidget(QtWidgets.QTableWidget):
    """
    Table item with some utility functions to standardize their use
    """
    def __init__(self):
        super(TableWidget, self).__init__()
        self.setStyleSheet("""QTableWidget::item {padding-left: 2px; padding-right: 2px; border: 0px}""")

    def prepareTable(self, colCount):
        self.setColumnCount(colCount)
        self.setSortingEnabled(False)
        self.verticalHeader().setVisible(False)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.setSizePolicy(sizePolicy)

        self.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.setAlternatingRowColors(True)

    def makeHeader(self, col, label, toolTip):
        twi = QtWidgets.QTableWidgetItem(label)
        twi.setToolTip(toolTip)
        twi.setStatusTip(toolTip)
        self.setHorizontalHeaderItem(col, twi)
        return twi

    def setColumnResizeMode(self, content=[], stretch=[], interactive=[], fixed=[]):
        for col in content:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.ResizeToContents)
        for col in stretch:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Stretch)
        for col in interactive:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Interactive)
        for col in fixed:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Fixed)

    def sizeHint(self):
        return QtCore.QSize(400, 500)

#-------------------------------------------------------------------------------
class TableView(QtWidgets.QTableView):
    """
    Table view with some utility functions to standardize their use
    """
    def __init__(self):
        super(TableView, self).__init__()
        self.setStyleSheet("""QTableView::item{padding-left: 2px; padding-right: 2px; border: 0px}""")

    def prepareTable(self):
        self.setSortingEnabled(False)
        self.verticalHeader().setVisible(False)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.setSizePolicy(sizePolicy)

        self.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.setAlternatingRowColors(True)

    def setColumnResizeMode(self, content=[], stretch=[], interactive=[], fixed=[]):
        for col in content:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.ResizeToContents)
        for col in stretch:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Stretch)
        for col in interactive:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Interactive)
        for col in fixed:
            self.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Fixed)

    def sizeHint(self):
        return QtCore.QSize(400, 500)
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
