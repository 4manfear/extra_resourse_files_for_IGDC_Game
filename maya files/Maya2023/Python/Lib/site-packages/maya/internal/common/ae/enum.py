'''
Maya Instruction on how to create a control for a enum attribute

Read the Readme.md for further information
'''

import maya.cmds as cmds
from . import template

def getEnumItem(node, attribute):
    """
        query maya for the list of possible enums for this particular attribute
    """
    attr = attribute.split(".")[-1] #pick the last enum when they are in compound, since attribute query does not support that

    # Query the attribute for a list of key/value pairs in the form {{key1=value1, key2=value2, ...}}.
    # Note that values need not be contiguous, positive, or starts at 0.
    listEnums = cmds.attributeQuery(attr, node=node, localizedListEnum=True)
    idx = 0
    enums = {}
    for e in listEnums:
        # Since the above attributeQuery command returns a key/value pair for each enum value, and 
        # because the key may itself contain an multiple equal sign, we separate the key and value 
        # by doing a reverse split. This assumes the last = in the concatenated string separates the
        # key/value pair.
        keypair = e.rsplit("=")

        if len(keypair) == 2:
            try:
                # Negative values are accepted, eg. ("-1")
                # Need to check if keypair is a valid integer.
                idx = int(keypair[1])
            except ValueError : # Not an integer
                enums[idx] = e
            else:
                enums[idx] = keypair[0]
        else:
            enums[idx] = e
        idx += 1
    return [(i,enums[i]) for i in sorted(enums)]

def replace(controlName, plugName, attrName, changedCommand ):
    cmds.attrEnumOptionMenuGrp(controlName, e=True, label=attrName, at=plugName)
    if  changedCommand :
        cmds.scriptJob(p=controlName,
                       rp=True,
                       ac=(plugName, lambda *_a: changedCommand(template.plugNode(plugName))))

def create(plugName, attrName, changedCommand):
    node = template.plugNode(plugName)
    attribute = template.plugAttr(plugName)
    enums = getEnumItem(node,attribute)#attrName is a nice name not an actual attribute name

    createdControl = cmds.attrEnumOptionMenuGrp(at=plugName, l=attrName, enumeratedItem=enums)
    template.attachCallback(plugName, createdControl, changedCommand)
    return createdControl
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
