'''
UFE instruction on how to create a control for any otherwise unsupported attribute.

Read the Readme.md for further information
'''

import maya.cmds as cmds
import maya.mel as mel
from maya.common.ui import LayoutManager, ParentManager
import maya.internal.ufeSupport.attributes as attributes

nameTxt = "nameTxt"
attrValueFld = "attrValueFld"
attrTypeFld = "attrTypeFld"

def updateUi(attr, uiControlName):
    '''Callback function to update the UI when the data model changes.'''
    # The textFields in this control are non-editable, so no data update is needed.
    
    # Update the appearance and read-only status of control.
    bgClr = attributes.getAttributeColorRGB(attr)
    if bgClr:
        isLocked = attributes.isAttributeLocked(attr)
        with ParentManager(uiControlName):
            cmds.textField(attrValueFld, edit=True, backgroundColor=bgClr)
            cmds.textField(attrTypeFld, edit=True, backgroundColor=bgClr)

def getAttrValueAndType(ufeAttr):
    # For now truncate long strings.
    if ufeAttr.hasValue():
        attrValue = str(ufeAttr)
        attrValue = (attrValue[:40] + '...') if len(attrValue) > 40 else attrValue
        attrNativeType = ufeAttr.nativeType()
    else:
        attrValue = ''
        attrNativeType = ''
    return attrValue, attrNativeType

def replace(controlName, ufeAttr, attrUIName, changedCommand):
    attrValue, attrNativeType = getAttrValueAndType(ufeAttr)
    with ParentManager(controlName):
        cmds.text(nameTxt, edit=True, label=attrUIName)
        cmds.textField(attrValueFld, edit=True, text=attrValue)
        cmds.textField(attrTypeFld, edit=True, text=attrNativeType)
    attachCallbacks(ufeAttr, controlName, changedCommand)

def create(ufeAttr, attrUIName, changedCommand):
    singleWidgetWidth = mel.eval('global int $gAttributeEditorTemplateSingleWidgetWidth; $gAttributeEditorTemplateSingleWidgetWidth += 0')
    cmds.setUITemplate('attributeEditorTemplate', pst=True)
    attrValue, attrNativeType = getAttrValueAndType(ufeAttr)
    createdControl = cmds.rowLayout(nc=5, adj=2)
    with LayoutManager(createdControl):
        cmds.text(nameTxt, al="right", label=attrUIName, annotation=ufeAttr.getDocumentation())
        cmds.textField(attrValueFld, editable=False, text=attrValue, width=singleWidgetWidth*2)
        cmds.textField(attrTypeFld, editable=False, text=attrNativeType, width=singleWidgetWidth)
    pMenu = attributes.AEPopupMenu(createdControl, ufeAttr)
    updateUi(ufeAttr, createdControl)
    attachCallbacks(ufeAttr, createdControl, changedCommand)
    cmds.setUITemplate(ppt=True)

    return createdControl

def attachCallbacks(ufeAttr, uiControl, changedCommand):
    # Create change callback for UFE and UI value synchronization.
    cb = attributes.createChangeCb(updateUi, ufeAttr, uiControl)
    cmds.textField(attrValueFld, edit=True, parent=uiControl, changeCommand=cb)
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
