"""
Base class for simple option var editing dialog.
"""
import maya
maya.utils.loadStringResourcesForModule(__name__)


import maya.cmds

import maya.internal.common.cmd.base as cmdbase
import maya.internal.common.utils.ui as ui_utils
import maya.internal.common.window.optionvar_box as box

from maya.common.ui import ParentManager

# ------------------------------------------------------------------------------
# Command
# ------------------------------------------------------------------------------
class Command(cmdbase.Command):

    def __init__(self):
        super(Command, self).__init__()
        self.commandName = 'OptionVarEdit'
        self.commandHelpTag	= 'OptionVar'
        self.windowTag	= 'OptionVarEdit'
        self.commandHelpTag	= 'OptionVarEdit'
        self.commandTitle = maya.stringTable['y_maya_internal_common_cmd_optionvar.kOptionVarCommandTitle' ]
        self.commandDescription = maya.stringTable['y_maya_internal_common_cmd_optionvar.kOptionVarDescription' ]
        self.optionVarCategory = 'Animation.Constrain.Proximity Pin.Edit'
        self.optionVarPrefix = 'OptionVarEdit'

    @classmethod
    def command(cls, **kwargs):
        '''OptionVarEdit command
        '''
        return []


    def addOptionDialogWidgets(self):
        widgetDict = {} # {optionVarDictKey, (widgetClass, widget)}

        parent = maya.cmds.setParent(q=True)

        ui_utils.createCommandDescriptionLayout(self.commandDescription)
        with ParentManager(ui_utils.createCommandSettingsLayout()):
            self.contentLayout = maya.cmds.columnLayout('content', adjustableColumn=True)
            wd = self.addContentDialogWidgets()
            widgetDict.update(wd)

        maya.cmds.setParent(parent)
        return widgetDict

    def addContentDialogWidgets(self):
        widgetDict = {} # {optionVarDictKey, (widgetClass, widget)}
        return widgetDict

    def _onUpdateWidgets(self, *args):
        self._saveOptionVarPreferencesCB()

    def getMainLayout(self):
        if self.windowBox is None:
            self.windowBox = box.getOptionVarBox()
        return self.windowBox.getLayout()
# ===========================================================================
# Copyright 2022 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
